{
    "ParamGrid": {
        "ParamGridDecisionTree": {
            "criterion": [
                "log_loss"
            ],
            "max_depth": {
                "start": 8,
                "stop": 9,
                "step": 5
            },
            "min_samples_split": {
                "start": 7,
                "stop": 8,
                "step": 5
            },
            "min_samples_leaf": {
                "start": 3,
                "stop": 4,
                "step": 5
            },
            "min_weight_fraction_leaf": {
                "start": 0.0,
                "stop": 0.01,
                "step": 0.1
            },
            "max_features": [
                "sqrt"
            ],
            "max_leaf_nodes": {
                "start": 50,
                "stop": 51,
                "step": 5
            },
            "min_impurity_decrease": {
                "start": 0.0,
                "stop": 0.01,
                "step": 0.3
            },
            "ccp_alpha": {
                "start": 0.0,
                "stop": 0.01,
                "step": 0.1
            }
        },
        "ParamGridRandomForest": {
            "n_estimators": {
                "start": 100,
                "stop": 2000,
                "step": 100
            },
            "bootstrap": [
                true
            ],
            "oob_score": [
                false
            ],
            "max_samples": {
                "start": 10,
                "stop": 1000,
                "step": 100
            }
        },
        "ParamGridCategoricalNaiveBayes": {
            "min_categories": [
                101
            ]
        },
        "ParamGridNeuralNetwork": {
            "hidden_layer_sizes": {
                "layers": {
                    "start": 2,
                    "stop": 8,
                    "step": 1
                },
                "layer_size": [
                    10,
                    15,
                    20,
                    25
                ]
            },
            "activation": [
                "relu",
                "tanh",
                "logistic"
            ],
            "solver": [
                "sgd",
                "adam"
            ],
            "learning_rate": [
                "adaptive"
            ],
            "learning_rate_init": [
                0.1
            ],
            "batch_size": [
                2000
            ],
            "alpha": [
                0.0001,
                0.001,
                0.01,
                0.1
            ],
            "max_iter": [
                10000
            ],
            "tol": [
                0.0001
            ],
            "n_iter_no_change": [
                20
            ]
        }
    },
    "RandomParamGrid": {
        "RandomParamGridDecisionTree": {
            "criterion": [
                "gini",
                "log_loss"
            ],
            "max_depth": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 3,
                    "high": 25,
                    "size": 100
                }
            },
            "min_samples_split": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 2,
                    "high": 20,
                    "size": 100
                }
            },
            "min_samples_leaf": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 1,
                    "high": 10,
                    "size": 100
                }
            },
            "min_weight_fraction_leaf": {
                "dist": "RANDFLOAT",
                "dist_params": {
                    "low": 0,
                    "high": 0.5,
                    "size": 100
                }
            },
            "max_features": [
                "sqrt",
                "log2"
            ],
            "max_leaf_nodes": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 2,
                    "high": 10,
                    "size": 100
                }
            },
            "min_impurity_decrease": {
                "dist": "RANDFLOAT",
                "dist_params": {
                    "low": 0.0,
                    "high": 0.1,
                    "size": 100
                }
            },
            "ccp_alpha": {
                "dist": "RANDFLOAT",
                "dist_params": {
                    "low": 0.0,
                    "high": 0.5,
                    "size": 50
                }
            }
        },
        "RandomParamGridRandomForest": {
            "n_estimators": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 100,
                    "high": 1000,
                    "size": 100
                }
            },
            "bootstrap": [
                true
            ],
            "oob_score": [
                false
            ],
            "max_samples": {
                "dist": "RANDINT",
                "dist_params": {
                    "low": 10,
                    "high": 500,
                    "size": 50
                }
            }
        },
        "RandomParamGridCategoricalNaiveBayes": {
            "min_categories": [
                101
            ]
        },
        "RandomParamGridNeuralNetwork": {
            "hidden_layer_sizes": {
                "layers": {
                    "start": 1,
                    "stop": 10,
                    "step": 1
                },
                "layer_size": [
                    10,
                    15,
                    20,
                    25
                ]
            },
            "activation": [
                "logistic",
                "relu",
                "tanh"
            ],
            "solver": [
                "sgd",
                "adam"
            ],
            "learning_rate": [
                "adaptive"
            ],
            "learning_rate_init": [
                0.1
            ],
            "batch_size": [
                2000
            ],
            "alpha": [
                0.0001,
                0.001,
                0.01,
                0.1
            ],
            "max_iter": [
                10000
            ],
            "tol": [
                0.0001
            ],
            "n_iter_no_change": [
                20
            ]
        }
    }
}