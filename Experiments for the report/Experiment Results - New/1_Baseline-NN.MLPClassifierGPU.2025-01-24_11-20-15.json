{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.03565505804311775,
                0.03980099502487566,
                0.06799336650082921,
                0.056384742951907096,
                0.02570480928689889,
                0.04809286898839138,
                0.03980099502487566,
                0.021558872305140975,
                0.007462686567164201,
                0.029021558872305175
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.03565505804311775
                ],
                [
                    0.03980099502487566
                ],
                [
                    0.06799336650082921
                ],
                [
                    0.056384742951907096
                ],
                [
                    0.02570480928689889
                ],
                [
                    0.04809286898839138
                ],
                [
                    0.03980099502487566
                ],
                [
                    0.021558872305140975
                ],
                [
                    0.007462686567164201
                ],
                [
                    0.029021558872305175
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.0457711442786074,
                0.033759772565743584,
                0.048400852878465295,
                0.05069888651978205,
                0.020445392087183323,
                0.022530206112296614,
                0.014925373134328623,
                0.016560056858563765,
                0.009784411276949512,
                0.014285714285714235
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.0457711442786074
                ],
                [
                    0.033759772565743584
                ],
                [
                    0.048400852878465295
                ],
                [
                    0.05069888651978205
                ],
                [
                    0.020445392087183323
                ],
                [
                    0.022530206112296614
                ],
                [
                    0.014925373134328623
                ],
                [
                    0.016560056858563765
                ],
                [
                    0.009784411276949512
                ],
                [
                    0.014285714285714235
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.214759535655058,
                0.14759535655058043,
                0.24709784411276947,
                0.16832504145936977,
                0.1053067993366501,
                0.1276948590381426,
                0.0829187396351575,
                0.10696517412935325,
                0.09701492537313428,
                0.07628524046434493
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.214759535655058
                ],
                [
                    0.14759535655058043
                ],
                [
                    0.24709784411276947
                ],
                [
                    0.16832504145936977
                ],
                [
                    0.1053067993366501
                ],
                [
                    0.1276948590381426
                ],
                [
                    0.0829187396351575
                ],
                [
                    0.10696517412935325
                ],
                [
                    0.09701492537313428
                ],
                [
                    0.07628524046434493
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.23551420069367995,
                0.21666019164661154,
                0.2657763798606557,
                0.1685823649646569,
                0.2037474048690054,
                0.2105661781278217,
                0.17859311680371925,
                0.09057667447448892,
                0.09526381617961366,
                0.159385569611816
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.23551420069367995
                ],
                [
                    0.21666019164661154
                ],
                [
                    0.2657763798606557
                ],
                [
                    0.1685823649646569
                ],
                [
                    0.2037474048690054
                ],
                [
                    0.2105661781278217
                ],
                [
                    0.17859311680371925
                ],
                [
                    0.09057667447448892
                ],
                [
                    0.09526381617961366
                ],
                [
                    0.159385569611816
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau"
    ],
    "train_accuracies": {
        "threshold": 0.9593698175787728,
        "distance": 0.9693437574034561,
        "exact_accuracy": 0.6525704809286899,
        "balanced_accuracy": 0.6000575938700935
    },
    "train_precision": 0.654219993653417,
    "train_recall": 0.6525704809286899,
    "test_accuracies": {
        "threshold": 0.9271523178807947,
        "distance": 0.9552507095553449,
        "exact_accuracy": 0.5794701986754967,
        "balanced_accuracy": 0.49500798023525294
    },
    "test_precision": 0.582659226270845,
    "test_recall": 0.5794701986754967,
    "train_pred_y": [
        3,
        4,
        4,
        3,
        10,
        5,
        3,
        4,
        20,
        35,
        31,
        5,
        4,
        4,
        25,
        10,
        5,
        3,
        20,
        20,
        10,
        1,
        5,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        25,
        3,
        15,
        4,
        1,
        2,
        4,
        15,
        2,
        5,
        15,
        2,
        4,
        2,
        31,
        4,
        2,
        4,
        10,
        5,
        10,
        20,
        35,
        25,
        5,
        25,
        25,
        4,
        10,
        15,
        4,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        4,
        20,
        35,
        5,
        1,
        4,
        1,
        35,
        4,
        4,
        35,
        10,
        15,
        1,
        20,
        15,
        10,
        20,
        3,
        5,
        20,
        10,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        2,
        4,
        4,
        20,
        2,
        10,
        2,
        2,
        1,
        35,
        1,
        3,
        10,
        4,
        4,
        2,
        15,
        4,
        15,
        3,
        25,
        10,
        20,
        2,
        5,
        31,
        25,
        4,
        30,
        1,
        5,
        4,
        1,
        1,
        15,
        4,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        4,
        10,
        4,
        4,
        2,
        10,
        5,
        20,
        15,
        2,
        10,
        4,
        2,
        15,
        35,
        30,
        3,
        2,
        1,
        5,
        20,
        2,
        20,
        4,
        25,
        25,
        4,
        5,
        4,
        4,
        4,
        5,
        4,
        2,
        2,
        20,
        2,
        4,
        2,
        1,
        10,
        3,
        20,
        5,
        2,
        2,
        1,
        1,
        3,
        10,
        4,
        4,
        20,
        1,
        10,
        31,
        5,
        2,
        35,
        3,
        3,
        5,
        1,
        4,
        10,
        1,
        3,
        20,
        3,
        1,
        3,
        5,
        3,
        3,
        20,
        10,
        15,
        5,
        4,
        3,
        25,
        15,
        4,
        2,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        2,
        3,
        1,
        4,
        3,
        1,
        4,
        2,
        1,
        2,
        25,
        4,
        10,
        5,
        4,
        1,
        4,
        15,
        10,
        25,
        4,
        20,
        2,
        1,
        2,
        1,
        10,
        4,
        3,
        15,
        15,
        2,
        10,
        2,
        15,
        1,
        20,
        2,
        15,
        1,
        5,
        4,
        10,
        5,
        10,
        3,
        15,
        10,
        30,
        3,
        2,
        2,
        3,
        25,
        2,
        31,
        5,
        30,
        1,
        5,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        2,
        30,
        35,
        15,
        10,
        10,
        2,
        10,
        4,
        10,
        2,
        25,
        3,
        25,
        3,
        15,
        10,
        1,
        4,
        35,
        4,
        30,
        1,
        5,
        15,
        2,
        15,
        5,
        5,
        5,
        3,
        1,
        2,
        1,
        10,
        15,
        3,
        10,
        20,
        3,
        10,
        2,
        3,
        35,
        5,
        15,
        2,
        20,
        4,
        1,
        1,
        20,
        4,
        10,
        3,
        25,
        3,
        1,
        10,
        25,
        3,
        20,
        4,
        2,
        1,
        10,
        35,
        25,
        4,
        2,
        25,
        10,
        25,
        1,
        25,
        5,
        15,
        5,
        4,
        25,
        3,
        1,
        3,
        1,
        1,
        5,
        25,
        20,
        5,
        30,
        5,
        1,
        1,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        2,
        1,
        20,
        30,
        2,
        2,
        10,
        5,
        10,
        10,
        4,
        2,
        15,
        3,
        5,
        3,
        1,
        4,
        20,
        4,
        5,
        15,
        4,
        20,
        5,
        1,
        3,
        25,
        3,
        2,
        20,
        4,
        4,
        3,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        4,
        5,
        1,
        5,
        5,
        4,
        4,
        10,
        10,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        3,
        1,
        25,
        10,
        1,
        2,
        3,
        3,
        30,
        1,
        1,
        10,
        3,
        2,
        3,
        15,
        3,
        10,
        10,
        20,
        5,
        2,
        1,
        4,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        3,
        2,
        2,
        2,
        3,
        2,
        15,
        3,
        10,
        15,
        4,
        5,
        3,
        15,
        3,
        25,
        2,
        5,
        10,
        10,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        3,
        5,
        2,
        20,
        2,
        2,
        1,
        2,
        10,
        4,
        10,
        2,
        15,
        31,
        3,
        2,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        2,
        4,
        20,
        2,
        4,
        15,
        10,
        2,
        2,
        5,
        10,
        4,
        2,
        4,
        2,
        1,
        3,
        1,
        2,
        3,
        10,
        20,
        1,
        4,
        4,
        3,
        4,
        15,
        4,
        5,
        2,
        15,
        4,
        10,
        10,
        1,
        3,
        15,
        30,
        3,
        5,
        4,
        20,
        2,
        1,
        3,
        3,
        2,
        2,
        3,
        4,
        2,
        20,
        25,
        1,
        10,
        4,
        3,
        25,
        15,
        10,
        15,
        15,
        3,
        2,
        4,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        4,
        5,
        2,
        10,
        4,
        3,
        5,
        3,
        3,
        5,
        20,
        15,
        1,
        15,
        4,
        20,
        4,
        10,
        3,
        10,
        3,
        20,
        4,
        4,
        4,
        30,
        4,
        1,
        2,
        4,
        25,
        4,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        4,
        25,
        1,
        10,
        2,
        1,
        4,
        4,
        20,
        4,
        2,
        10,
        5,
        10,
        15,
        3,
        2,
        20,
        5,
        15,
        25,
        15,
        1,
        2,
        31,
        15,
        2,
        2,
        3,
        4,
        1,
        2,
        5,
        15,
        25,
        4,
        5,
        2,
        10,
        3,
        1,
        15,
        2,
        1,
        2,
        4,
        25,
        10,
        20,
        4,
        1,
        4,
        4,
        25,
        5,
        15,
        5,
        4,
        1,
        5,
        30,
        4,
        4,
        35,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        25,
        1,
        20,
        4,
        4,
        4,
        5,
        31,
        10,
        20,
        1,
        2,
        3,
        4,
        2,
        2,
        31,
        4,
        10,
        25,
        10,
        20,
        25,
        3,
        3,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        10,
        20,
        20,
        4,
        4,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        4,
        3,
        3,
        4,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        3,
        4,
        20,
        15,
        10,
        5,
        25,
        15,
        20,
        20,
        4,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        4,
        20,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        2,
        1,
        4,
        25,
        3,
        3,
        2,
        4,
        25,
        3,
        10,
        1,
        25,
        25,
        4,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        2,
        10,
        2,
        5,
        4,
        3,
        10,
        5,
        10,
        4,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        4,
        1,
        4,
        20,
        25,
        1,
        4,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        3,
        1,
        5,
        5,
        15,
        35,
        3,
        2,
        3,
        1,
        3,
        15,
        2,
        15,
        5,
        4,
        1,
        4,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        15,
        1,
        15,
        25,
        2,
        10,
        2,
        15,
        15,
        5,
        25,
        10,
        25,
        30,
        3,
        1,
        4,
        3,
        3,
        30,
        2,
        10,
        2,
        1,
        1,
        10,
        15,
        2,
        2,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        10,
        3,
        5,
        10,
        35,
        5,
        5,
        1,
        15,
        4,
        3,
        1,
        2,
        4,
        1,
        15,
        1,
        1,
        2,
        30,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        3,
        15,
        4,
        5,
        4,
        15,
        15,
        4,
        5,
        4,
        20,
        15,
        35,
        15,
        4,
        3,
        5,
        10,
        4,
        10,
        15,
        3,
        5,
        10,
        1,
        20,
        20,
        35,
        2,
        15,
        20,
        15,
        1,
        4,
        30,
        2,
        15,
        10,
        15,
        3,
        1,
        1,
        2,
        3,
        25,
        3,
        3,
        20,
        5,
        3,
        10,
        2,
        4,
        20,
        25,
        15,
        25,
        3,
        5,
        1,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        10,
        4,
        2,
        10,
        4,
        1,
        10,
        1,
        5,
        35,
        25,
        1,
        5,
        15,
        20,
        20,
        4,
        15,
        4,
        2,
        15,
        20,
        1,
        10,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        30,
        5,
        1,
        1,
        15,
        2,
        20,
        20,
        15,
        1,
        2,
        30,
        5,
        4,
        2,
        5,
        15,
        1,
        4,
        2,
        1,
        3,
        3,
        3,
        1,
        25,
        4,
        5,
        4,
        3,
        25,
        5,
        4,
        1,
        4,
        10,
        5,
        15,
        35,
        15,
        1,
        1,
        4,
        20,
        5,
        5,
        3,
        20,
        1,
        1,
        4,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        3,
        20,
        5,
        5,
        3,
        15,
        3,
        1,
        10,
        5,
        20,
        4,
        5,
        10,
        15,
        35,
        3,
        15,
        20,
        10,
        2,
        2,
        10,
        5,
        25,
        20,
        15,
        4
    ],
    "test_pred_y": [
        25,
        10,
        4,
        15,
        1,
        4,
        4,
        4,
        25,
        2,
        4,
        15,
        4,
        1,
        2,
        5,
        20,
        4,
        5,
        15,
        3,
        25,
        2,
        20,
        4,
        35,
        10,
        4,
        4,
        5,
        2,
        5,
        3,
        3,
        10,
        3,
        1,
        4,
        4,
        3,
        10,
        3,
        3,
        3,
        10,
        15,
        4,
        10,
        3,
        3,
        25,
        2,
        4,
        2,
        4,
        5,
        15,
        5,
        15,
        3,
        4,
        10,
        3,
        5,
        3,
        2,
        2,
        4,
        20,
        1,
        20,
        10,
        4,
        4,
        15,
        1,
        4,
        10,
        3,
        3,
        5,
        4,
        5,
        20,
        3,
        1,
        15,
        4,
        15,
        10,
        30,
        20,
        25,
        1,
        2,
        15,
        1,
        3,
        4,
        10,
        30,
        4,
        1,
        4,
        5,
        15,
        31,
        3,
        35,
        25,
        25,
        2,
        1,
        5,
        15,
        1,
        31,
        15,
        1,
        4,
        15,
        4,
        30,
        1,
        1,
        3,
        5,
        1,
        2,
        1,
        3,
        1,
        3,
        4,
        5,
        2,
        25,
        10,
        5,
        3,
        10,
        10,
        1,
        20,
        15,
        5,
        2,
        1,
        35,
        2,
        2,
        20,
        20,
        4,
        15,
        5,
        30,
        2,
        2,
        20,
        10,
        4,
        1,
        4,
        4,
        10,
        5,
        10,
        4,
        1,
        20,
        3,
        20,
        1,
        1,
        1,
        2,
        4,
        3,
        5,
        10,
        4,
        3,
        10,
        15,
        2,
        1,
        10,
        5,
        15,
        35,
        4,
        1,
        10,
        3,
        10,
        25,
        4,
        1,
        4,
        10,
        1,
        10,
        2,
        15,
        3,
        1,
        4,
        20,
        20,
        10,
        5,
        30,
        15,
        1,
        10,
        25,
        4,
        15,
        20,
        3,
        10,
        35,
        2,
        25,
        31,
        10,
        10,
        1,
        2,
        25,
        5,
        10,
        35,
        15,
        20,
        15,
        3,
        5,
        20,
        4,
        20,
        5,
        1,
        20,
        10,
        3,
        10,
        3,
        2,
        25,
        5,
        20,
        15,
        10,
        3,
        25,
        3,
        1,
        20,
        25,
        1,
        10,
        2,
        20,
        4,
        4,
        2,
        4,
        4,
        5,
        5,
        15,
        10,
        4,
        1,
        2,
        15,
        4,
        10,
        1,
        4,
        15,
        5,
        1,
        2,
        3,
        1,
        4,
        4,
        1,
        4,
        1,
        1,
        5,
        1,
        2,
        4,
        20,
        2,
        4,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "INFO",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": false,
            "UseOutlierRemoval": false,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "NONE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "tanh",
                "solver": "adam",
                "learning_rate": "adaptive",
                "learning_rate_init": 0.1,
                "batch_size": 2000,
                "alpha": 0.0001,
                "max_iter": 10000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "FIT",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 25,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.02
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.05
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}