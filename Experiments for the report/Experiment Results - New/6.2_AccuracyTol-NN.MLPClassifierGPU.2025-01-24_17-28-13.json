{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.06091370558375642,
                0.02622673434856182,
                0.027072758037225086,
                0.02115059221658211,
                0.009306260575296155,
                0.038071065989847774,
                0.014382402707275865,
                0.02876480541455162,
                0.011844331641286066,
                0.04483925549915402,
                0.005076142131979711,
                0.0008460236886633776,
                0.0016920473773266442,
                0.0,
                0.0008460236886633776,
                0.0008460236886633776,
                0.0008460236886633776
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.06091370558375642
                ],
                [
                    0.02622673434856182
                ],
                [
                    0.027072758037225086
                ],
                [
                    0.02115059221658211
                ],
                [
                    0.009306260575296155
                ],
                [
                    0.038071065989847774
                ],
                [
                    0.014382402707275865
                ],
                [
                    0.02876480541455162
                ],
                [
                    0.011844331641286066
                ],
                [
                    0.04483925549915402
                ],
                [
                    0.005076142131979711
                ],
                [
                    0.0008460236886633776
                ],
                [
                    0.0016920473773266442
                ],
                [
                    0.0
                ],
                [
                    0.0008460236886633776
                ],
                [
                    0.0008460236886633776
                ],
                [
                    0.0008460236886633776
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.03362339859801844,
                0.025912496978487076,
                0.022455885907662454,
                0.018830070099105978,
                0.014527435339618311,
                0.015397631133671985,
                0.007203287406332803,
                0.015736040609137025,
                0.008121827411166738,
                0.01931351220691291,
                0.0036741600193382906,
                0.0011602610587383433,
                0.0005801305293692272,
                -2.4172105390407594e-05,
                0.0006526468455404499,
                0.0007735073724922659,
                0.0005801305293692272
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.03362339859801844
                ],
                [
                    0.025912496978487076
                ],
                [
                    0.022455885907662454
                ],
                [
                    0.018830070099105978
                ],
                [
                    0.014527435339618311
                ],
                [
                    0.015397631133671985
                ],
                [
                    0.007203287406332803
                ],
                [
                    0.015736040609137025
                ],
                [
                    0.008121827411166738
                ],
                [
                    0.01931351220691291
                ],
                [
                    0.0036741600193382906
                ],
                [
                    0.0011602610587383433
                ],
                [
                    0.0005801305293692272
                ],
                [
                    -2.4172105390407594e-05
                ],
                [
                    0.0006526468455404499
                ],
                [
                    0.0007735073724922659
                ],
                [
                    0.0005801305293692272
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.16835871404399322,
                0.12944162436548223,
                0.1903553299492386,
                0.1091370558375635,
                0.06852791878172593,
                0.09898477157360408,
                0.04906937394247035,
                0.11505922165820648,
                0.040609137055837574,
                0.10067681895093061,
                0.043147208121827374,
                0.0076142131979695105,
                0.0033840947546531774,
                0.004230118443316444,
                0.009306260575296155,
                0.006768189509306244,
                0.004230118443316444
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.16835871404399322
                ],
                [
                    0.12944162436548223
                ],
                [
                    0.1903553299492386
                ],
                [
                    0.1091370558375635
                ],
                [
                    0.06852791878172593
                ],
                [
                    0.09898477157360408
                ],
                [
                    0.04906937394247035
                ],
                [
                    0.11505922165820648
                ],
                [
                    0.040609137055837574
                ],
                [
                    0.10067681895093061
                ],
                [
                    0.043147208121827374
                ],
                [
                    0.0076142131979695105
                ],
                [
                    0.0033840947546531774
                ],
                [
                    0.004230118443316444
                ],
                [
                    0.009306260575296155
                ],
                [
                    0.006768189509306244
                ],
                [
                    0.004230118443316444
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.14642671783995742,
                0.1883581062799095,
                0.18458993169477084,
                0.09583214664140777,
                0.13077751848902808,
                0.16415920499524472,
                0.11477603641114137,
                0.12556891476197712,
                0.1241920777980498,
                0.12184856292832308,
                0.03681280743766602,
                0.006925872119262544,
                0.0027348548032452014,
                -0.0016258925367682586,
                0.017024067700392997,
                0.005381048471607142,
                0.0031210827000942576
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.14642671783995742
                ],
                [
                    0.1883581062799095
                ],
                [
                    0.18458993169477084
                ],
                [
                    0.09583214664140777
                ],
                [
                    0.13077751848902808
                ],
                [
                    0.16415920499524472
                ],
                [
                    0.11477603641114137
                ],
                [
                    0.12556891476197712
                ],
                [
                    0.1241920777980498
                ],
                [
                    0.12184856292832308
                ],
                [
                    0.03681280743766602
                ],
                [
                    0.006925872119262544
                ],
                [
                    0.0027348548032452014
                ],
                [
                    -0.0016258925367682586
                ],
                [
                    0.017024067700392997
                ],
                [
                    0.005381048471607142
                ],
                [
                    0.0031210827000942576
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.9441624365482234,
        "distance": 0.9629683345419356,
        "exact_accuracy": 0.6294416243654822,
        "balanced_accuracy": 0.5669119752151122
    },
    "train_precision": 0.6343234255671582,
    "train_recall": 0.6294416243654822,
    "test_accuracies": {
        "threshold": 0.9238410596026491,
        "distance": 0.9508041627246923,
        "exact_accuracy": 0.5496688741721855,
        "balanced_accuracy": 0.4151961342750817
    },
    "test_precision": 0.5758950548719522,
    "test_recall": 0.5496688741721855,
    "train_pred_y": [
        2,
        4,
        3,
        3,
        10,
        5,
        3,
        5,
        20,
        35,
        31,
        4,
        3,
        3,
        20,
        10,
        5,
        2,
        20,
        20,
        10,
        1,
        5,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        15,
        3,
        15,
        3,
        1,
        2,
        4,
        15,
        3,
        5,
        15,
        2,
        3,
        2,
        31,
        3,
        2,
        3,
        15,
        5,
        10,
        20,
        35,
        20,
        4,
        25,
        15,
        4,
        10,
        20,
        4,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        4,
        20,
        35,
        5,
        1,
        3,
        1,
        35,
        4,
        4,
        35,
        20,
        15,
        1,
        20,
        15,
        10,
        20,
        3,
        5,
        20,
        30,
        25,
        15,
        1,
        10,
        10,
        3,
        4,
        2,
        3,
        4,
        25,
        2,
        10,
        2,
        2,
        1,
        35,
        1,
        3,
        10,
        3,
        3,
        2,
        15,
        3,
        15,
        3,
        25,
        10,
        25,
        2,
        5,
        31,
        20,
        3,
        25,
        1,
        5,
        3,
        1,
        1,
        15,
        4,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        3,
        1,
        1,
        3,
        5,
        4,
        10,
        4,
        4,
        2,
        20,
        5,
        25,
        10,
        2,
        10,
        5,
        2,
        15,
        35,
        25,
        3,
        2,
        1,
        5,
        20,
        2,
        20,
        3,
        25,
        25,
        3,
        5,
        3,
        4,
        3,
        5,
        3,
        2,
        2,
        20,
        2,
        3,
        2,
        1,
        10,
        2,
        20,
        5,
        2,
        3,
        2,
        1,
        3,
        10,
        3,
        3,
        20,
        1,
        10,
        31,
        5,
        2,
        35,
        3,
        3,
        5,
        1,
        3,
        10,
        1,
        3,
        20,
        3,
        1,
        4,
        5,
        3,
        3,
        20,
        20,
        10,
        5,
        3,
        3,
        25,
        15,
        3,
        2,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        2,
        3,
        1,
        3,
        3,
        1,
        4,
        2,
        1,
        2,
        25,
        4,
        10,
        5,
        3,
        1,
        3,
        15,
        10,
        25,
        3,
        20,
        2,
        1,
        2,
        1,
        10,
        4,
        3,
        15,
        15,
        2,
        20,
        2,
        15,
        1,
        20,
        2,
        15,
        1,
        5,
        4,
        10,
        5,
        10,
        4,
        15,
        10,
        25,
        4,
        2,
        2,
        3,
        25,
        2,
        31,
        5,
        30,
        1,
        4,
        10,
        1,
        3,
        3,
        15,
        15,
        3,
        3,
        2,
        25,
        35,
        15,
        10,
        25,
        2,
        10,
        3,
        10,
        2,
        25,
        3,
        25,
        3,
        15,
        10,
        1,
        4,
        35,
        3,
        30,
        1,
        5,
        15,
        2,
        15,
        5,
        5,
        4,
        3,
        1,
        2,
        1,
        10,
        25,
        3,
        20,
        20,
        3,
        10,
        2,
        3,
        35,
        5,
        25,
        2,
        25,
        3,
        1,
        1,
        20,
        4,
        10,
        2,
        25,
        2,
        1,
        10,
        25,
        3,
        20,
        4,
        2,
        1,
        10,
        35,
        25,
        3,
        2,
        25,
        10,
        25,
        1,
        25,
        5,
        15,
        5,
        4,
        25,
        4,
        1,
        3,
        1,
        1,
        5,
        25,
        20,
        5,
        25,
        5,
        1,
        1,
        2,
        10,
        2,
        3,
        3,
        5,
        3,
        10,
        2,
        1,
        20,
        30,
        2,
        2,
        10,
        5,
        20,
        10,
        3,
        2,
        15,
        2,
        5,
        3,
        1,
        4,
        20,
        4,
        5,
        15,
        3,
        20,
        5,
        1,
        3,
        20,
        3,
        2,
        20,
        3,
        4,
        3,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        3,
        3,
        1,
        4,
        5,
        3,
        4,
        10,
        3,
        1,
        4,
        15,
        3,
        1,
        3,
        1,
        10,
        3,
        1,
        25,
        10,
        1,
        2,
        4,
        3,
        25,
        1,
        1,
        10,
        3,
        3,
        3,
        15,
        3,
        10,
        10,
        20,
        5,
        2,
        1,
        3,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        4,
        2,
        5,
        2,
        2,
        2,
        15,
        3,
        25,
        15,
        3,
        5,
        2,
        15,
        3,
        25,
        2,
        4,
        10,
        20,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        3,
        20,
        2,
        2,
        2,
        2,
        10,
        3,
        10,
        2,
        15,
        31,
        4,
        2,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        2,
        20,
        1,
        20,
        10,
        2,
        2,
        5,
        15,
        4,
        2,
        3,
        2,
        1,
        3,
        1,
        2,
        2,
        10,
        20,
        1,
        4,
        4,
        4,
        3,
        15,
        3,
        4,
        2,
        15,
        4,
        10,
        10,
        1,
        4,
        15,
        25,
        3,
        4,
        3,
        20,
        2,
        1,
        2,
        3,
        2,
        2,
        3,
        4,
        20,
        20,
        1,
        10,
        3,
        3,
        25,
        15,
        1,
        15,
        10,
        3,
        2,
        3,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        3,
        5,
        1,
        15,
        4,
        3,
        5,
        2,
        4,
        4,
        20,
        25,
        1,
        15,
        3,
        20,
        4,
        10,
        4,
        10,
        3,
        20,
        3,
        4,
        3,
        25,
        4,
        1,
        2,
        4,
        10,
        3,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        2,
        1,
        4,
        3,
        20,
        3,
        2,
        20,
        5,
        10,
        15,
        3,
        2,
        20,
        5,
        10,
        20,
        15,
        1,
        2,
        31,
        20,
        2,
        2,
        3,
        3,
        1,
        2,
        5,
        15,
        25,
        3,
        4,
        1,
        10,
        3,
        1,
        15,
        2,
        1,
        2,
        4,
        25,
        10,
        20,
        3,
        1,
        4,
        3,
        25,
        5,
        15,
        5,
        4,
        1,
        5,
        30,
        3,
        3,
        35,
        3,
        3,
        5,
        4,
        3,
        2,
        10,
        25,
        1,
        20,
        3,
        4,
        4,
        5,
        31,
        10,
        20,
        1,
        2,
        3,
        3,
        2,
        2,
        31,
        3,
        20,
        25,
        30,
        20,
        15,
        3,
        4,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        10,
        20,
        20,
        3,
        4,
        4,
        1,
        15,
        5,
        15,
        5,
        3,
        10,
        25,
        3,
        3,
        3,
        15,
        2,
        3,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        3,
        20,
        15,
        10,
        5,
        25,
        15,
        20,
        20,
        3,
        2,
        10,
        1,
        20,
        10,
        15,
        5,
        20,
        4,
        5,
        3,
        5,
        1,
        4,
        3,
        25,
        3,
        3,
        5,
        1,
        10,
        25,
        2,
        1,
        2,
        25,
        3,
        2,
        2,
        25,
        3,
        10,
        1,
        25,
        25,
        4,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        2,
        10,
        2,
        4,
        4,
        2,
        10,
        5,
        10,
        3,
        15,
        1,
        10,
        5,
        5,
        3,
        4,
        3,
        3,
        20,
        25,
        1,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        5,
        15,
        35,
        3,
        2,
        3,
        1,
        3,
        15,
        2,
        15,
        5,
        3,
        1,
        4,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        10,
        3,
        15,
        15,
        2,
        10,
        2,
        15,
        15,
        5,
        25,
        10,
        25,
        30,
        4,
        1,
        4,
        3,
        3,
        30,
        2,
        10,
        2,
        1,
        1,
        10,
        15,
        2,
        2,
        10,
        1,
        2,
        3,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        15,
        3,
        4,
        15,
        35,
        5,
        5,
        2,
        15,
        4,
        1,
        2,
        1,
        15,
        1,
        1,
        2,
        30,
        10,
        3,
        3,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        3,
        15,
        4,
        3,
        15,
        15,
        3,
        5,
        20,
        15,
        35,
        15,
        3,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        5,
        10,
        1,
        20,
        20,
        35,
        2,
        15,
        20,
        10,
        1,
        4,
        25,
        2,
        15,
        15,
        2,
        1,
        1,
        2,
        3,
        25,
        3,
        3,
        20,
        5,
        3,
        3,
        4,
        20,
        25,
        15,
        25,
        3,
        5,
        2,
        1,
        5,
        3,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        15,
        4,
        2,
        10,
        3,
        1,
        15,
        1,
        5,
        35,
        25,
        3,
        5,
        15,
        20,
        20,
        4,
        15,
        2,
        20,
        20,
        1,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        25,
        5,
        1,
        1,
        15,
        2,
        20,
        20,
        15,
        1,
        2,
        30,
        5,
        2,
        5,
        10,
        1,
        2,
        1,
        3,
        3,
        3,
        1,
        25,
        5,
        4,
        3,
        25,
        5,
        1,
        10,
        5,
        15,
        35,
        15,
        1,
        1,
        3,
        15,
        5,
        5,
        3,
        20,
        1,
        1,
        3,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        3,
        20,
        5,
        5,
        4,
        10,
        3,
        3,
        5,
        20,
        3,
        5,
        10,
        20,
        35,
        4,
        15,
        20,
        10,
        2,
        2,
        10,
        5,
        20,
        20,
        15,
        3
    ],
    "test_pred_y": [
        25,
        10,
        3,
        15,
        1,
        4,
        3,
        3,
        25,
        2,
        3,
        15,
        4,
        1,
        2,
        5,
        25,
        3,
        5,
        15,
        3,
        20,
        2,
        15,
        3,
        35,
        10,
        3,
        3,
        5,
        2,
        5,
        2,
        3,
        10,
        3,
        1,
        5,
        3,
        3,
        20,
        3,
        3,
        3,
        10,
        15,
        3,
        15,
        3,
        3,
        25,
        2,
        3,
        2,
        5,
        5,
        15,
        10,
        15,
        3,
        4,
        10,
        5,
        5,
        2,
        3,
        2,
        4,
        15,
        1,
        20,
        2,
        3,
        3,
        15,
        10,
        4,
        10,
        3,
        2,
        5,
        3,
        5,
        20,
        3,
        1,
        15,
        3,
        20,
        10,
        25,
        15,
        20,
        1,
        2,
        15,
        3,
        3,
        4,
        10,
        15,
        3,
        1,
        3,
        5,
        15,
        31,
        3,
        35,
        25,
        25,
        2,
        1,
        5,
        15,
        10,
        25,
        15,
        1,
        4,
        15,
        3,
        30,
        1,
        1,
        3,
        5,
        1,
        2,
        1,
        3,
        1,
        3,
        3,
        5,
        2,
        20,
        10,
        5,
        3,
        30,
        10,
        1,
        15,
        15,
        5,
        2,
        1,
        1,
        2,
        2,
        20,
        15,
        4,
        5,
        5,
        25,
        2,
        2,
        20,
        15,
        3,
        1,
        3,
        3,
        10,
        5,
        20,
        3,
        1,
        15,
        3,
        15,
        1,
        2,
        1,
        2,
        3,
        3,
        4,
        10,
        3,
        3,
        10,
        10,
        2,
        1,
        10,
        4,
        15,
        30,
        4,
        1,
        10,
        4,
        10,
        25,
        3,
        1,
        3,
        15,
        1,
        10,
        2,
        15,
        3,
        1,
        3,
        20,
        15,
        15,
        10,
        25,
        15,
        2,
        10,
        15,
        3,
        15,
        15,
        3,
        10,
        35,
        2,
        15,
        25,
        10,
        10,
        1,
        2,
        25,
        5,
        10,
        35,
        15,
        15,
        15,
        3,
        10,
        20,
        4,
        15,
        10,
        1,
        25,
        10,
        10,
        10,
        3,
        2,
        25,
        5,
        20,
        15,
        10,
        3,
        10,
        3,
        1,
        15,
        25,
        1,
        15,
        2,
        15,
        4,
        4,
        1,
        5,
        3,
        5,
        5,
        15,
        10,
        3,
        1,
        2,
        15,
        3,
        10,
        1,
        3,
        15,
        5,
        1,
        2,
        3,
        2,
        4,
        4,
        1,
        3,
        1,
        1,
        5,
        1,
        2,
        3,
        15,
        2,
        3,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "INFO",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "ANOVA_F",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 75
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "tanh",
                "solver": "adam",
                "learning_rate": "adaptive",
                "learning_rate_init": 0.1,
                "batch_size": 2000,
                "alpha": 0.0001,
                "max_iter": 10000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "CROSS_VALIDATION",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 25,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.02
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.05
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}