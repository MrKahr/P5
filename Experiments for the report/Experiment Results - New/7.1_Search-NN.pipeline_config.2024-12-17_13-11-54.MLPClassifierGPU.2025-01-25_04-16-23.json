{
    "GridSearchCV_BestParams": {
        "activation": "sigmoid",
        "alpha": 0.0001,
        "batch_size": 2000,
        "epochs": 10000,
        "hidden_layer_sizes": [
            10,
            10,
            10
        ],
        "learning_rate": "adaptive",
        "learning_rate_init": 0.1,
        "n_iter_no_change": 20,
        "optimizer": "adam",
        "tol": 0.0001
    },
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.0638474295190713,
                0.05887230514096187,
                0.04809286898839138,
                0.03565505804311775,
                0.014096185737976774,
                0.038971807628524036,
                0.033996683250414605,
                0.010779436152570487,
                0.02487562189054726,
                0.01741293532338306
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.0638474295190713
                ],
                [
                    0.05887230514096187
                ],
                [
                    0.04809286898839138
                ],
                [
                    0.03565505804311775
                ],
                [
                    0.014096185737976774
                ],
                [
                    0.038971807628524036
                ],
                [
                    0.033996683250414605
                ],
                [
                    0.010779436152570487
                ],
                [
                    0.02487562189054726
                ],
                [
                    0.01741293532338306
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.06256811182184374,
                0.041293532338309236,
                0.02783700544894585,
                0.030300876569533508,
                0.01523335702440154,
                0.017768301350391646,
                0.011679696754323343,
                0.009902866619283524,
                0.017720919213456643,
                0.010945273631840613
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.06256811182184374
                ],
                [
                    0.041293532338309236
                ],
                [
                    0.02783700544894585
                ],
                [
                    0.030300876569533508
                ],
                [
                    0.01523335702440154
                ],
                [
                    0.017768301350391646
                ],
                [
                    0.011679696754323343
                ],
                [
                    0.009902866619283524
                ],
                [
                    0.017720919213456643
                ],
                [
                    0.010945273631840613
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.2421227197346601,
                0.17910447761194032,
                0.21973466003316755,
                0.1384742951907132,
                0.07794361525704818,
                0.1127694859038143,
                0.07711442786069655,
                0.07545605306799341,
                0.11028192371475953,
                0.0638474295190713
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.2421227197346601
                ],
                [
                    0.17910447761194032
                ],
                [
                    0.21973466003316755
                ],
                [
                    0.1384742951907132
                ],
                [
                    0.07794361525704818
                ],
                [
                    0.1127694859038143
                ],
                [
                    0.07711442786069655
                ],
                [
                    0.07545605306799341
                ],
                [
                    0.11028192371475953
                ],
                [
                    0.0638474295190713
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.23993998148957596,
                0.22801093238556336,
                0.19482507344674566,
                0.169774179178659,
                0.13490892496510987,
                0.19432683749406837,
                0.12004386501964176,
                0.06379830533150987,
                0.13948733474044733,
                0.14029621769217127
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.23993998148957596
                ],
                [
                    0.22801093238556336
                ],
                [
                    0.19482507344674566
                ],
                [
                    0.169774179178659
                ],
                [
                    0.13490892496510987
                ],
                [
                    0.19432683749406837
                ],
                [
                    0.12004386501964176
                ],
                [
                    0.06379830533150987
                ],
                [
                    0.13948733474044733
                ],
                [
                    0.14029621769217127
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau"
    ],
    "train_accuracies": {
        "threshold": 0.9535655058043118,
        "distance": 0.9674010897891465,
        "exact_accuracy": 0.6500829187396352,
        "balanced_accuracy": 0.5803723934259369
    },
    "train_precision": 0.6416605367432444,
    "train_recall": 0.6500829187396352,
    "test_accuracies": {
        "threshold": 0.9139072847682119,
        "distance": 0.9546830652790915,
        "exact_accuracy": 0.5794701986754967,
        "balanced_accuracy": 0.48294772744533515
    },
    "test_precision": 0.590932614283957,
    "test_recall": 0.5794701986754967,
    "train_pred_y": [
        2,
        4,
        4,
        3,
        10,
        5,
        3,
        5,
        15,
        35,
        31,
        4,
        4,
        4,
        10,
        10,
        5,
        2,
        20,
        20,
        10,
        1,
        4,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        25,
        3,
        15,
        4,
        1,
        2,
        4,
        15,
        3,
        5,
        15,
        2,
        4,
        2,
        31,
        4,
        2,
        4,
        15,
        4,
        10,
        20,
        35,
        10,
        4,
        25,
        15,
        4,
        10,
        15,
        4,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        4,
        20,
        35,
        5,
        1,
        4,
        1,
        35,
        4,
        4,
        35,
        10,
        15,
        1,
        20,
        15,
        10,
        20,
        3,
        5,
        20,
        30,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        2,
        4,
        4,
        20,
        2,
        10,
        2,
        2,
        1,
        35,
        1,
        3,
        10,
        4,
        4,
        2,
        15,
        4,
        15,
        3,
        25,
        10,
        20,
        1,
        25,
        31,
        20,
        4,
        25,
        1,
        5,
        4,
        1,
        1,
        15,
        4,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        4,
        10,
        4,
        4,
        2,
        10,
        5,
        25,
        10,
        3,
        10,
        4,
        2,
        15,
        35,
        25,
        2,
        2,
        1,
        5,
        20,
        2,
        20,
        4,
        25,
        25,
        4,
        5,
        4,
        4,
        4,
        5,
        4,
        2,
        2,
        20,
        2,
        4,
        2,
        1,
        10,
        2,
        15,
        5,
        2,
        3,
        2,
        1,
        3,
        10,
        4,
        4,
        20,
        1,
        10,
        31,
        5,
        2,
        35,
        3,
        3,
        5,
        1,
        4,
        10,
        1,
        3,
        20,
        3,
        1,
        3,
        5,
        3,
        3,
        20,
        10,
        10,
        5,
        4,
        3,
        25,
        15,
        4,
        2,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        2,
        3,
        1,
        4,
        3,
        1,
        4,
        2,
        1,
        2,
        25,
        4,
        10,
        5,
        4,
        1,
        4,
        15,
        10,
        25,
        4,
        20,
        2,
        1,
        2,
        1,
        10,
        4,
        3,
        15,
        15,
        2,
        10,
        2,
        15,
        1,
        20,
        2,
        15,
        1,
        5,
        4,
        10,
        5,
        10,
        3,
        15,
        10,
        25,
        3,
        2,
        2,
        3,
        25,
        2,
        31,
        5,
        25,
        1,
        4,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        2,
        25,
        35,
        15,
        10,
        10,
        2,
        10,
        4,
        10,
        2,
        25,
        3,
        25,
        3,
        15,
        10,
        1,
        4,
        35,
        4,
        25,
        1,
        5,
        15,
        2,
        15,
        5,
        5,
        4,
        3,
        1,
        2,
        1,
        10,
        15,
        3,
        10,
        15,
        3,
        10,
        2,
        3,
        35,
        5,
        25,
        2,
        20,
        4,
        1,
        1,
        20,
        4,
        10,
        2,
        25,
        2,
        1,
        10,
        25,
        3,
        20,
        4,
        2,
        1,
        10,
        35,
        25,
        4,
        2,
        25,
        10,
        25,
        1,
        25,
        5,
        15,
        5,
        4,
        15,
        3,
        1,
        3,
        1,
        1,
        5,
        25,
        20,
        5,
        25,
        5,
        1,
        1,
        2,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        2,
        1,
        20,
        25,
        2,
        2,
        10,
        5,
        10,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        1,
        4,
        20,
        1,
        5,
        15,
        4,
        20,
        5,
        1,
        3,
        20,
        3,
        2,
        20,
        4,
        4,
        2,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        4,
        3,
        1,
        4,
        5,
        4,
        4,
        10,
        15,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        3,
        1,
        25,
        10,
        1,
        2,
        3,
        3,
        25,
        1,
        1,
        10,
        3,
        3,
        3,
        15,
        3,
        10,
        10,
        15,
        5,
        2,
        1,
        4,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        3,
        2,
        3,
        1,
        2,
        2,
        15,
        3,
        10,
        15,
        4,
        5,
        2,
        15,
        3,
        25,
        2,
        4,
        10,
        10,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        4,
        15,
        2,
        2,
        2,
        2,
        10,
        4,
        10,
        2,
        15,
        31,
        3,
        2,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        2,
        4,
        20,
        1,
        4,
        20,
        10,
        2,
        2,
        5,
        10,
        4,
        2,
        4,
        2,
        1,
        3,
        1,
        2,
        2,
        10,
        15,
        1,
        4,
        4,
        3,
        4,
        15,
        4,
        4,
        2,
        15,
        4,
        10,
        10,
        1,
        3,
        15,
        25,
        3,
        4,
        4,
        20,
        2,
        1,
        2,
        3,
        2,
        2,
        3,
        4,
        2,
        20,
        20,
        1,
        10,
        4,
        3,
        25,
        15,
        10,
        15,
        10,
        3,
        2,
        4,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        4,
        5,
        1,
        10,
        4,
        3,
        5,
        3,
        3,
        4,
        20,
        15,
        1,
        15,
        4,
        20,
        4,
        10,
        3,
        10,
        3,
        20,
        4,
        4,
        4,
        25,
        4,
        1,
        2,
        4,
        20,
        4,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        2,
        1,
        4,
        4,
        20,
        4,
        2,
        10,
        5,
        10,
        15,
        3,
        3,
        15,
        5,
        15,
        20,
        15,
        1,
        2,
        31,
        20,
        2,
        2,
        3,
        4,
        1,
        2,
        5,
        15,
        25,
        4,
        4,
        1,
        10,
        3,
        1,
        15,
        2,
        1,
        2,
        4,
        25,
        10,
        20,
        5,
        1,
        4,
        4,
        25,
        5,
        15,
        5,
        4,
        1,
        5,
        25,
        4,
        4,
        35,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        25,
        1,
        20,
        4,
        4,
        4,
        5,
        31,
        10,
        20,
        1,
        2,
        3,
        4,
        2,
        2,
        31,
        4,
        10,
        25,
        25,
        15,
        25,
        3,
        3,
        3,
        1,
        4,
        15,
        15,
        10,
        10,
        10,
        20,
        20,
        4,
        4,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        4,
        3,
        3,
        4,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        20,
        15,
        5,
        5,
        25,
        15,
        20,
        20,
        4,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        5,
        20,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        2,
        1,
        2,
        25,
        3,
        2,
        2,
        4,
        25,
        3,
        10,
        1,
        25,
        25,
        4,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        2,
        10,
        2,
        4,
        4,
        2,
        10,
        5,
        10,
        4,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        4,
        2,
        4,
        20,
        25,
        1,
        4,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        3,
        1,
        5,
        5,
        15,
        35,
        3,
        1,
        3,
        1,
        3,
        15,
        2,
        15,
        5,
        4,
        1,
        4,
        2,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        10,
        2,
        15,
        25,
        2,
        10,
        2,
        15,
        15,
        5,
        25,
        10,
        25,
        25,
        3,
        1,
        4,
        3,
        3,
        25,
        2,
        10,
        2,
        1,
        1,
        10,
        15,
        2,
        2,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        10,
        3,
        4,
        15,
        35,
        5,
        5,
        2,
        15,
        4,
        3,
        1,
        2,
        4,
        1,
        15,
        1,
        1,
        2,
        25,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        3,
        15,
        4,
        5,
        4,
        20,
        15,
        4,
        5,
        4,
        20,
        15,
        35,
        15,
        4,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        4,
        10,
        1,
        20,
        20,
        35,
        2,
        15,
        20,
        10,
        1,
        4,
        25,
        2,
        15,
        10,
        15,
        1,
        1,
        1,
        2,
        3,
        25,
        3,
        3,
        20,
        5,
        3,
        10,
        3,
        4,
        20,
        25,
        15,
        25,
        3,
        5,
        1,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        10,
        4,
        2,
        10,
        4,
        1,
        10,
        1,
        5,
        35,
        25,
        2,
        5,
        15,
        20,
        20,
        4,
        15,
        4,
        2,
        15,
        20,
        1,
        10,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        25,
        5,
        1,
        1,
        15,
        2,
        15,
        20,
        15,
        1,
        2,
        25,
        5,
        4,
        2,
        5,
        10,
        1,
        4,
        2,
        2,
        3,
        3,
        3,
        1,
        25,
        4,
        5,
        4,
        3,
        25,
        5,
        4,
        1,
        4,
        10,
        4,
        15,
        35,
        15,
        1,
        1,
        4,
        10,
        5,
        5,
        3,
        20,
        1,
        1,
        4,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        3,
        20,
        5,
        5,
        3,
        10,
        3,
        2,
        10,
        5,
        20,
        4,
        5,
        10,
        15,
        35,
        3,
        15,
        20,
        10,
        2,
        2,
        10,
        5,
        20,
        20,
        15,
        4
    ],
    "test_pred_y": [
        25,
        10,
        4,
        15,
        1,
        4,
        4,
        4,
        25,
        2,
        4,
        15,
        4,
        1,
        2,
        5,
        25,
        4,
        5,
        15,
        3,
        25,
        1,
        20,
        4,
        35,
        10,
        4,
        4,
        5,
        2,
        5,
        2,
        3,
        10,
        3,
        1,
        5,
        4,
        3,
        10,
        3,
        3,
        3,
        10,
        15,
        4,
        10,
        3,
        3,
        25,
        2,
        4,
        2,
        5,
        5,
        15,
        5,
        15,
        3,
        4,
        20,
        5,
        5,
        3,
        3,
        2,
        4,
        20,
        1,
        20,
        35,
        4,
        4,
        15,
        2,
        4,
        10,
        3,
        2,
        5,
        4,
        5,
        20,
        3,
        1,
        15,
        4,
        25,
        10,
        25,
        15,
        15,
        1,
        2,
        15,
        2,
        3,
        4,
        10,
        25,
        4,
        1,
        4,
        5,
        15,
        31,
        3,
        35,
        25,
        25,
        2,
        1,
        5,
        15,
        2,
        31,
        15,
        1,
        4,
        15,
        4,
        25,
        1,
        1,
        3,
        5,
        1,
        2,
        1,
        3,
        1,
        3,
        4,
        5,
        2,
        15,
        10,
        2,
        3,
        25,
        10,
        1,
        20,
        15,
        5,
        2,
        1,
        2,
        2,
        2,
        20,
        15,
        4,
        2,
        4,
        25,
        2,
        2,
        20,
        10,
        4,
        1,
        4,
        4,
        10,
        5,
        10,
        4,
        1,
        20,
        3,
        20,
        2,
        1,
        1,
        2,
        4,
        3,
        4,
        10,
        4,
        3,
        10,
        15,
        2,
        1,
        10,
        4,
        15,
        35,
        4,
        1,
        10,
        3,
        10,
        25,
        4,
        1,
        4,
        15,
        1,
        10,
        2,
        15,
        3,
        1,
        4,
        20,
        20,
        10,
        5,
        25,
        15,
        1,
        10,
        15,
        4,
        15,
        20,
        3,
        10,
        35,
        2,
        25,
        31,
        10,
        10,
        1,
        2,
        25,
        5,
        10,
        35,
        10,
        15,
        15,
        3,
        5,
        20,
        4,
        20,
        5,
        1,
        20,
        10,
        25,
        10,
        3,
        2,
        25,
        5,
        20,
        15,
        10,
        3,
        20,
        3,
        1,
        20,
        25,
        1,
        10,
        2,
        15,
        5,
        4,
        2,
        5,
        4,
        5,
        5,
        15,
        10,
        4,
        1,
        2,
        15,
        4,
        10,
        1,
        4,
        20,
        5,
        1,
        2,
        3,
        1,
        4,
        4,
        1,
        4,
        1,
        1,
        5,
        1,
        2,
        4,
        20,
        2,
        4,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "INFO",
            "n_jobs": 10,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": false,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "CHI2",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": 10,
                "min_samples_split": 6,
                "min_samples_leaf": 7,
                "min_weight_fraction_leaf": 0.0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": 22,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 500,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "GRID_SEARCH",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 43300000,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 8,
                    "stop": 9,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 7,
                    "stop": 8,
                    "step": 5
                },
                "min_samples_leaf": {
                    "start": 3,
                    "stop": 4,
                    "step": 5
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.01,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 51,
                    "step": 5
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.01,
                    "step": 0.3
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.01,
                    "step": 0.1
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 2000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 1000,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "relu",
                    "tanh",
                    "logistic"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}