{
    "GridSearchCV_BestParams": {
        "bootstrap": true,
        "ccp_alpha": 0.0,
        "criterion": "log_loss",
        "max_depth": 12,
        "max_features": "sqrt",
        "max_leaf_nodes": 50,
        "max_samples": 700,
        "min_impurity_decrease": 0.0,
        "min_samples_leaf": 3,
        "min_samples_split": 9,
        "min_weight_fraction_leaf": 0.0,
        "n_estimators": 100,
        "oob_score": false
    },
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.05499153976311344,
                0.014382402707275865,
                0.012690355329949332,
                0.0160744500846024,
                0.004230118443316444,
                0.024534686971235287,
                0.027072758037225086,
                0.0,
                0.010998307952622688,
                0.0008460236886633776,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.05499153976311344
                ],
                [
                    0.014382402707275865
                ],
                [
                    0.012690355329949332
                ],
                [
                    0.0160744500846024
                ],
                [
                    0.004230118443316444
                ],
                [
                    0.024534686971235287
                ],
                [
                    0.027072758037225086
                ],
                [
                    0.0
                ],
                [
                    0.010998307952622688
                ],
                [
                    0.0008460236886633776
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.031206188058980233,
                0.019095963258400128,
                0.013753927967125268,
                0.012521150592216368,
                0.01614696640077351,
                0.006889050036258726,
                0.007227459511723211,
                7.251631617066767e-05,
                0.0063814358230595,
                0.0001933768431229277,
                0.0001692047377325201,
                4.834421078092621e-05,
                0.0,
                7.25163161713338e-05,
                2.4172105390296572e-05,
                2.4172105390407594e-05,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.031206188058980233
                ],
                [
                    0.019095963258400128
                ],
                [
                    0.013753927967125268
                ],
                [
                    0.012521150592216368
                ],
                [
                    0.01614696640077351
                ],
                [
                    0.006889050036258726
                ],
                [
                    0.007227459511723211
                ],
                [
                    7.251631617066767e-05
                ],
                [
                    0.0063814358230595
                ],
                [
                    0.0001933768431229277
                ],
                [
                    0.0001692047377325201
                ],
                [
                    4.834421078092621e-05
                ],
                [
                    0.0
                ],
                [
                    7.25163161713338e-05
                ],
                [
                    2.4172105390296572e-05
                ],
                [
                    2.4172105390407594e-05
                ],
                [
                    0.0
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.12859560067681897,
                0.11082910321489003,
                0.15228426395939088,
                0.060913705583756306,
                0.06006768189509304,
                0.04399323181049064,
                0.0346869712351946,
                0.005076142131979711,
                0.027918781725888353,
                0.004230118443316444,
                0.005076142131979711,
                0.0016920473773265332,
                0.0,
                0.0033840947546531774,
                0.0025380710659898,
                0.0025380710659898,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.12859560067681897
                ],
                [
                    0.11082910321489003
                ],
                [
                    0.15228426395939088
                ],
                [
                    0.060913705583756306
                ],
                [
                    0.06006768189509304
                ],
                [
                    0.04399323181049064
                ],
                [
                    0.0346869712351946
                ],
                [
                    0.005076142131979711
                ],
                [
                    0.027918781725888353
                ],
                [
                    0.004230118443316444
                ],
                [
                    0.005076142131979711
                ],
                [
                    0.0016920473773265332
                ],
                [
                    0.0
                ],
                [
                    0.0033840947546531774
                ],
                [
                    0.0025380710659898
                ],
                [
                    0.0025380710659898
                ],
                [
                    0.0
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.11871377433982061,
                0.177598397965809,
                0.13374516900345612,
                0.05566990771830921,
                0.12248284258720554,
                0.11131701119188536,
                0.08610199990095146,
                0.004981297388568562,
                0.10952537860923273,
                0.005063030027369075,
                0.003975077190452536,
                0.001212121212121331,
                0.0,
                0.0024405125076266687,
                0.0018425869432581177,
                0.0018385194224121992,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.11871377433982061
                ],
                [
                    0.177598397965809
                ],
                [
                    0.13374516900345612
                ],
                [
                    0.05566990771830921
                ],
                [
                    0.12248284258720554
                ],
                [
                    0.11131701119188536
                ],
                [
                    0.08610199990095146
                ],
                [
                    0.004981297388568562
                ],
                [
                    0.10952537860923273
                ],
                [
                    0.005063030027369075
                ],
                [
                    0.003975077190452536
                ],
                [
                    0.001212121212121331
                ],
                [
                    0.0
                ],
                [
                    0.0024405125076266687
                ],
                [
                    0.0018425869432581177
                ],
                [
                    0.0018385194224121992
                ],
                [
                    0.0
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.9441624365482234,
        "distance": 0.9625574087502988,
        "exact_accuracy": 0.6175972927241963,
        "balanced_accuracy": 0.5518297550949961
    },
    "train_precision": 0.6091541147308843,
    "train_recall": 0.6175972927241963,
    "test_accuracies": {
        "threshold": 0.9105960264900662,
        "distance": 0.9543046357615894,
        "exact_accuracy": 0.5529801324503312,
        "balanced_accuracy": 0.4226254628766591
    },
    "test_precision": 0.5660341724646827,
    "test_recall": 0.5529801324503312,
    "train_pred_y": [
        2,
        5,
        4,
        3,
        10,
        5,
        3,
        5,
        15,
        35,
        31,
        5,
        4,
        4,
        10,
        10,
        5,
        2,
        20,
        20,
        10,
        1,
        3,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        25,
        3,
        15,
        4,
        1,
        1,
        5,
        15,
        2,
        5,
        15,
        2,
        4,
        2,
        25,
        4,
        1,
        4,
        10,
        4,
        10,
        20,
        35,
        10,
        3,
        25,
        15,
        4,
        10,
        15,
        5,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        5,
        20,
        35,
        5,
        1,
        4,
        1,
        35,
        5,
        5,
        35,
        20,
        15,
        1,
        20,
        15,
        10,
        20,
        3,
        5,
        20,
        30,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        1,
        4,
        5,
        20,
        2,
        10,
        2,
        2,
        1,
        35,
        1,
        3,
        10,
        4,
        4,
        1,
        15,
        4,
        15,
        3,
        25,
        10,
        20,
        1,
        5,
        31,
        20,
        4,
        25,
        1,
        4,
        4,
        1,
        1,
        15,
        5,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        5,
        10,
        4,
        5,
        2,
        10,
        5,
        25,
        10,
        2,
        10,
        5,
        1,
        15,
        35,
        25,
        3,
        1,
        1,
        5,
        20,
        1,
        20,
        4,
        25,
        25,
        4,
        5,
        4,
        5,
        4,
        5,
        4,
        1,
        2,
        20,
        2,
        4,
        1,
        1,
        10,
        2,
        20,
        5,
        2,
        3,
        1,
        1,
        3,
        10,
        4,
        4,
        20,
        2,
        10,
        31,
        5,
        1,
        35,
        3,
        3,
        5,
        1,
        4,
        10,
        1,
        3,
        20,
        3,
        1,
        3,
        5,
        3,
        3,
        20,
        20,
        10,
        5,
        4,
        3,
        25,
        15,
        4,
        1,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        1,
        3,
        1,
        3,
        3,
        1,
        5,
        2,
        1,
        1,
        25,
        4,
        10,
        5,
        4,
        1,
        5,
        15,
        10,
        25,
        4,
        20,
        1,
        1,
        1,
        2,
        10,
        4,
        3,
        15,
        15,
        2,
        20,
        1,
        15,
        1,
        20,
        1,
        15,
        1,
        5,
        5,
        10,
        5,
        10,
        3,
        15,
        10,
        25,
        3,
        1,
        2,
        3,
        25,
        2,
        31,
        5,
        30,
        1,
        5,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        1,
        25,
        35,
        15,
        10,
        20,
        2,
        10,
        4,
        10,
        2,
        25,
        3,
        25,
        3,
        15,
        10,
        1,
        5,
        35,
        4,
        30,
        1,
        5,
        15,
        1,
        15,
        5,
        5,
        5,
        3,
        1,
        2,
        1,
        10,
        10,
        3,
        20,
        15,
        3,
        10,
        2,
        5,
        35,
        5,
        5,
        2,
        25,
        4,
        1,
        2,
        20,
        5,
        10,
        2,
        25,
        2,
        1,
        10,
        25,
        3,
        20,
        5,
        2,
        1,
        10,
        35,
        25,
        4,
        1,
        25,
        10,
        25,
        1,
        25,
        5,
        15,
        5,
        5,
        15,
        3,
        1,
        3,
        1,
        1,
        5,
        25,
        20,
        5,
        25,
        5,
        1,
        1,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        1,
        1,
        25,
        30,
        1,
        3,
        10,
        15,
        15,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        1,
        5,
        20,
        1,
        5,
        15,
        4,
        20,
        5,
        1,
        3,
        15,
        3,
        1,
        20,
        4,
        5,
        2,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        4,
        3,
        1,
        4,
        5,
        4,
        5,
        10,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        3,
        1,
        25,
        10,
        1,
        1,
        3,
        3,
        25,
        1,
        1,
        10,
        3,
        2,
        3,
        15,
        3,
        10,
        10,
        20,
        2,
        2,
        1,
        4,
        10,
        3,
        10,
        1,
        2,
        1,
        5,
        3,
        1,
        5,
        1,
        2,
        2,
        15,
        3,
        10,
        15,
        4,
        5,
        2,
        15,
        3,
        25,
        2,
        5,
        10,
        20,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        3,
        15,
        2,
        1,
        1,
        2,
        10,
        4,
        10,
        1,
        15,
        31,
        3,
        1,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        2,
        20,
        2,
        10,
        10,
        2,
        2,
        3,
        10,
        5,
        2,
        4,
        1,
        1,
        3,
        1,
        2,
        2,
        10,
        20,
        1,
        4,
        5,
        3,
        4,
        15,
        4,
        4,
        1,
        15,
        4,
        10,
        10,
        1,
        3,
        15,
        25,
        3,
        5,
        4,
        20,
        1,
        2,
        2,
        3,
        1,
        1,
        3,
        4,
        20,
        20,
        1,
        10,
        4,
        3,
        25,
        15,
        10,
        15,
        15,
        3,
        1,
        4,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        3,
        5,
        2,
        10,
        4,
        3,
        5,
        3,
        3,
        5,
        20,
        20,
        1,
        15,
        4,
        10,
        5,
        10,
        3,
        10,
        3,
        20,
        4,
        5,
        4,
        25,
        5,
        1,
        2,
        5,
        15,
        4,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        1,
        1,
        5,
        4,
        20,
        4,
        1,
        20,
        4,
        10,
        15,
        3,
        3,
        20,
        5,
        15,
        15,
        15,
        1,
        1,
        31,
        10,
        2,
        1,
        3,
        4,
        1,
        2,
        5,
        15,
        25,
        4,
        4,
        2,
        10,
        3,
        1,
        15,
        1,
        1,
        2,
        5,
        25,
        10,
        20,
        3,
        1,
        5,
        4,
        25,
        3,
        15,
        5,
        4,
        1,
        5,
        30,
        4,
        4,
        35,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        25,
        1,
        20,
        4,
        5,
        4,
        5,
        31,
        10,
        20,
        1,
        1,
        3,
        4,
        1,
        3,
        31,
        3,
        20,
        25,
        30,
        15,
        25,
        3,
        3,
        3,
        1,
        5,
        25,
        15,
        10,
        10,
        10,
        20,
        20,
        4,
        5,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        3,
        3,
        3,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        20,
        15,
        10,
        5,
        25,
        15,
        20,
        20,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        5,
        10,
        4,
        5,
        4,
        5,
        1,
        5,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        2,
        1,
        3,
        25,
        3,
        2,
        1,
        25,
        3,
        10,
        1,
        25,
        25,
        5,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        1,
        10,
        1,
        4,
        4,
        2,
        10,
        5,
        10,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        5,
        1,
        4,
        20,
        25,
        1,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        5,
        15,
        35,
        3,
        1,
        3,
        1,
        3,
        15,
        1,
        15,
        5,
        4,
        1,
        5,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        5,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        10,
        2,
        15,
        25,
        1,
        10,
        1,
        15,
        15,
        5,
        25,
        10,
        25,
        30,
        3,
        1,
        4,
        3,
        3,
        30,
        1,
        10,
        1,
        1,
        1,
        10,
        15,
        1,
        1,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        10,
        3,
        3,
        15,
        35,
        5,
        5,
        1,
        15,
        3,
        1,
        2,
        1,
        15,
        1,
        1,
        2,
        30,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        5,
        15,
        5,
        4,
        15,
        15,
        4,
        5,
        20,
        15,
        35,
        15,
        4,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        4,
        10,
        1,
        20,
        20,
        35,
        1,
        15,
        20,
        10,
        1,
        3,
        25,
        1,
        15,
        15,
        1,
        1,
        1,
        2,
        3,
        25,
        3,
        3,
        20,
        5,
        3,
        2,
        4,
        20,
        25,
        15,
        25,
        3,
        5,
        2,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        10,
        5,
        2,
        10,
        3,
        1,
        10,
        1,
        5,
        35,
        25,
        2,
        5,
        15,
        10,
        20,
        4,
        15,
        1,
        15,
        20,
        1,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        25,
        5,
        1,
        1,
        15,
        1,
        15,
        20,
        15,
        1,
        2,
        30,
        5,
        1,
        10,
        10,
        1,
        2,
        1,
        3,
        3,
        3,
        1,
        25,
        5,
        4,
        3,
        25,
        5,
        1,
        10,
        4,
        15,
        35,
        15,
        1,
        1,
        4,
        10,
        5,
        5,
        3,
        20,
        1,
        1,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        3,
        20,
        5,
        5,
        3,
        10,
        3,
        1,
        5,
        20,
        4,
        5,
        10,
        15,
        35,
        3,
        15,
        20,
        10,
        2,
        1,
        10,
        5,
        15,
        20,
        15,
        4
    ],
    "test_pred_y": [
        25,
        10,
        4,
        15,
        1,
        5,
        4,
        4,
        25,
        1,
        4,
        15,
        5,
        1,
        2,
        5,
        25,
        4,
        5,
        15,
        3,
        25,
        1,
        15,
        4,
        35,
        10,
        4,
        4,
        5,
        2,
        5,
        2,
        3,
        10,
        3,
        1,
        10,
        4,
        3,
        10,
        3,
        3,
        3,
        10,
        15,
        4,
        10,
        3,
        3,
        25,
        2,
        4,
        1,
        5,
        5,
        15,
        5,
        15,
        3,
        5,
        10,
        3,
        5,
        3,
        3,
        2,
        5,
        15,
        1,
        15,
        10,
        4,
        4,
        15,
        1,
        5,
        10,
        3,
        2,
        5,
        4,
        5,
        15,
        3,
        1,
        15,
        4,
        10,
        10,
        25,
        20,
        10,
        1,
        2,
        15,
        1,
        3,
        5,
        10,
        25,
        4,
        2,
        4,
        5,
        15,
        25,
        3,
        35,
        25,
        25,
        2,
        1,
        5,
        15,
        1,
        25,
        15,
        1,
        4,
        15,
        4,
        15,
        1,
        1,
        3,
        5,
        1,
        1,
        1,
        3,
        1,
        3,
        4,
        5,
        2,
        10,
        10,
        4,
        3,
        15,
        10,
        1,
        15,
        15,
        5,
        2,
        1,
        2,
        2,
        1,
        15,
        20,
        5,
        5,
        4,
        25,
        2,
        2,
        15,
        10,
        4,
        1,
        4,
        4,
        10,
        5,
        10,
        4,
        1,
        15,
        3,
        15,
        1,
        2,
        1,
        1,
        4,
        3,
        5,
        10,
        3,
        3,
        10,
        15,
        2,
        1,
        10,
        4,
        15,
        10,
        5,
        1,
        10,
        3,
        10,
        25,
        4,
        1,
        4,
        15,
        1,
        10,
        1,
        15,
        3,
        1,
        4,
        15,
        15,
        10,
        10,
        25,
        15,
        2,
        10,
        15,
        4,
        15,
        15,
        3,
        10,
        35,
        2,
        25,
        25,
        10,
        10,
        1,
        1,
        25,
        5,
        10,
        35,
        10,
        20,
        15,
        3,
        10,
        15,
        5,
        15,
        10,
        1,
        15,
        10,
        5,
        10,
        3,
        1,
        25,
        5,
        10,
        15,
        10,
        3,
        15,
        3,
        1,
        10,
        25,
        1,
        10,
        1,
        20,
        3,
        5,
        2,
        5,
        4,
        5,
        5,
        15,
        10,
        4,
        1,
        3,
        15,
        4,
        10,
        1,
        4,
        15,
        5,
        1,
        2,
        3,
        1,
        4,
        5,
        1,
        4,
        1,
        1,
        5,
        1,
        1,
        4,
        15,
        1,
        4,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "RANDOM_FOREST",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 500,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "GRID_SEARCH",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 8,
                    "stop": 30,
                    "step": 4
                },
                "min_samples_split": {
                    "start": 7,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 3,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.2
                },
                "max_features": [
                    "sqrt"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 70,
                    "step": 4
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.2,
                    "step": 0.3
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.9
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 200,
                    "stop": 928,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 50,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 40,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 30,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 1.0,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 100,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.3,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.8,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 50,
                        "high": 5000,
                        "size": 200
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 1500,
                        "size": 100
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}