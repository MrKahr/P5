{
    "RandomSearchCV_BestParams": {
        "min_weight_fraction_leaf": 0.0,
        "min_samples_split": 3,
        "min_samples_leaf": 6,
        "min_impurity_decrease": 0.0,
        "max_leaf_nodes": 44,
        "max_features": "log2",
        "max_depth": 17,
        "criterion": "log_loss",
        "ccp_alpha": 0.0
    },
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.09745762711864414,
                0.02033898305084747,
                0.0,
                0.06101694915254241,
                0.0,
                0.011864406779661052,
                0.08813559322033904,
                0.0,
                0.0,
                0.005084745762711895,
                0.0,
                0.028813559322033888,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.09745762711864414
                ],
                [
                    0.02033898305084747
                ],
                [
                    0.0
                ],
                [
                    0.06101694915254241
                ],
                [
                    0.0
                ],
                [
                    0.011864406779661052
                ],
                [
                    0.08813559322033904
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.005084745762711895
                ],
                [
                    0.0
                ],
                [
                    0.028813559322033888
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.06970944309927274,
                0.02634382566585991,
                0.0062227602905555734,
                0.04895883777239729,
                0.0029055690072639084,
                0.0045762711864417716,
                0.047384987893461794,
                0.0,
                0.0009685230024214508,
                0.003631961259080274,
                0.0,
                0.015036319612591664,
                0.0002421307506053072,
                0.00016949152542378165,
                0.0,
                -7.263922518163657e-05,
                4.440892098500626e-16,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.06970944309927274
                ],
                [
                    0.02634382566585991
                ],
                [
                    0.0062227602905555734
                ],
                [
                    0.04895883777239729
                ],
                [
                    0.0029055690072639084
                ],
                [
                    0.0045762711864417716
                ],
                [
                    0.047384987893461794
                ],
                [
                    0.0
                ],
                [
                    0.0009685230024214508
                ],
                [
                    0.003631961259080274
                ],
                [
                    0.0
                ],
                [
                    0.015036319612591664
                ],
                [
                    0.0002421307506053072
                ],
                [
                    0.00016949152542378165
                ],
                [
                    0.0
                ],
                [
                    -7.263922518163657e-05
                ],
                [
                    4.440892098500626e-16
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.1906779661016949,
                0.11949152542372876,
                0.06440677966101693,
                0.11525423728813555,
                0.015254237288135575,
                0.04661016949152541,
                0.08474576271186435,
                0.0,
                0.015254237288135575,
                0.011864406779660941,
                0.0,
                0.08644067796610166,
                0.007627118644067732,
                0.004237288135593209,
                0.0,
                -0.0016949152542373724,
                0.0016949152542372614,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.1906779661016949
                ],
                [
                    0.11949152542372876
                ],
                [
                    0.06440677966101693
                ],
                [
                    0.11525423728813555
                ],
                [
                    0.015254237288135575
                ],
                [
                    0.04661016949152541
                ],
                [
                    0.08474576271186435
                ],
                [
                    0.0
                ],
                [
                    0.015254237288135575
                ],
                [
                    0.011864406779660941
                ],
                [
                    0.0
                ],
                [
                    0.08644067796610166
                ],
                [
                    0.007627118644067732
                ],
                [
                    0.004237288135593209
                ],
                [
                    0.0
                ],
                [
                    -0.0016949152542373724
                ],
                [
                    0.0016949152542372614
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.22735693559754988,
                0.16352010192992966,
                0.05124162053505921,
                0.1600006057479006,
                0.015237565696281208,
                0.10026008463653402,
                0.13994107689786095,
                0.0,
                0.011185868910147057,
                0.04880758882592534,
                0.0,
                0.09357152769284655,
                0.006017147811566759,
                0.003026235509457076,
                0.0,
                -0.0012365263371973967,
                0.0012243237746593083,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.22735693559754988
                ],
                [
                    0.16352010192992966
                ],
                [
                    0.05124162053505921
                ],
                [
                    0.1600006057479006
                ],
                [
                    0.015237565696281208
                ],
                [
                    0.10026008463653402
                ],
                [
                    0.13994107689786095
                ],
                [
                    0.0
                ],
                [
                    0.011185868910147057
                ],
                [
                    0.04880758882592534
                ],
                [
                    0.0
                ],
                [
                    0.09357152769284655
                ],
                [
                    0.006017147811566759
                ],
                [
                    0.003026235509457076
                ],
                [
                    0.0
                ],
                [
                    -0.0012365263371973967
                ],
                [
                    0.0012243237746593083
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "S\u00e5rrand (cm)",
        "Midte (cm)",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.938135593220339,
        "distance": 0.9521549636803842,
        "exact_accuracy": 0.5372881355932203,
        "balanced_accuracy": 0.47381788927286245
    },
    "train_precision": 0.5590102743472661,
    "train_recall": 0.5372881355932203,
    "test_accuracies": {
        "threshold": 0.8443708609271523,
        "distance": 0.9317880794701986,
        "exact_accuracy": 0.46357615894039733,
        "balanced_accuracy": 0.35925799346851983
    },
    "test_precision": 0.4783231534537278,
    "test_recall": 0.46357615894039733,
    "train_pred_y": [
        1,
        5,
        4,
        2,
        10,
        5,
        3,
        5,
        10,
        25,
        31,
        5,
        4,
        4,
        15,
        10,
        5,
        2,
        20,
        25,
        10,
        2,
        5,
        15,
        2,
        10,
        20,
        25,
        5,
        15,
        15,
        2,
        20,
        4,
        1,
        2,
        5,
        15,
        2,
        5,
        5,
        2,
        4,
        2,
        25,
        4,
        2,
        4,
        4,
        10,
        20,
        25,
        15,
        2,
        25,
        20,
        4,
        10,
        20,
        5,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        5,
        20,
        35,
        5,
        2,
        4,
        2,
        25,
        5,
        5,
        35,
        20,
        15,
        1,
        25,
        15,
        10,
        20,
        3,
        5,
        20,
        25,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        2,
        4,
        5,
        25,
        3,
        10,
        1,
        2,
        1,
        25,
        1,
        1,
        10,
        4,
        4,
        2,
        15,
        4,
        20,
        3,
        25,
        10,
        20,
        2,
        5,
        31,
        20,
        4,
        25,
        2,
        3,
        4,
        1,
        1,
        15,
        5,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        5,
        10,
        4,
        5,
        2,
        20,
        5,
        35,
        10,
        2,
        10,
        20,
        2,
        15,
        25,
        25,
        2,
        2,
        1,
        5,
        20,
        2,
        20,
        4,
        25,
        25,
        4,
        5,
        4,
        5,
        4,
        5,
        4,
        2,
        2,
        20,
        2,
        4,
        2,
        1,
        15,
        1,
        10,
        2,
        2,
        2,
        1,
        1,
        2,
        10,
        4,
        4,
        20,
        2,
        10,
        31,
        5,
        3,
        25,
        2,
        3,
        5,
        2,
        4,
        10,
        2,
        2,
        20,
        3,
        1,
        3,
        5,
        3,
        2,
        20,
        20,
        10,
        5,
        4,
        3,
        25,
        15,
        4,
        2,
        3,
        2,
        2,
        1,
        20,
        20,
        2,
        2,
        2,
        1,
        3,
        1,
        1,
        5,
        2,
        1,
        2,
        35,
        4,
        10,
        5,
        4,
        2,
        5,
        15,
        10,
        25,
        4,
        20,
        2,
        2,
        2,
        2,
        10,
        4,
        2,
        15,
        15,
        2,
        20,
        2,
        15,
        1,
        20,
        2,
        20,
        1,
        5,
        5,
        10,
        5,
        10,
        2,
        15,
        10,
        25,
        2,
        2,
        2,
        3,
        25,
        2,
        31,
        5,
        35,
        1,
        5,
        10,
        2,
        3,
        4,
        15,
        15,
        2,
        2,
        2,
        25,
        35,
        15,
        10,
        20,
        2,
        10,
        4,
        10,
        2,
        20,
        3,
        25,
        3,
        15,
        10,
        1,
        5,
        25,
        4,
        25,
        2,
        5,
        20,
        2,
        15,
        5,
        5,
        5,
        2,
        1,
        1,
        1,
        10,
        10,
        2,
        20,
        10,
        2,
        10,
        2,
        5,
        35,
        5,
        20,
        2,
        5,
        4,
        1,
        2,
        20,
        5,
        10,
        2,
        35,
        2,
        2,
        10,
        25,
        2,
        20,
        5,
        2,
        1,
        10,
        35,
        25,
        4,
        2,
        25,
        10,
        25,
        2,
        25,
        5,
        15,
        5,
        5,
        20,
        2,
        1,
        2,
        1,
        1,
        5,
        25,
        20,
        5,
        25,
        5,
        2,
        2,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        2,
        1,
        25,
        25,
        2,
        3,
        10,
        5,
        5,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        2,
        5,
        20,
        1,
        5,
        15,
        4,
        20,
        5,
        1,
        2,
        20,
        3,
        2,
        20,
        4,
        5,
        5,
        2,
        2,
        4,
        20,
        20,
        10,
        2,
        4,
        2,
        2,
        4,
        4,
        4,
        5,
        10,
        15,
        4,
        1,
        4,
        5,
        4,
        2,
        4,
        1,
        10,
        2,
        2,
        25,
        10,
        2,
        2,
        2,
        3,
        25,
        2,
        1,
        10,
        2,
        2,
        2,
        5,
        3,
        10,
        10,
        10,
        1,
        2,
        1,
        4,
        10,
        2,
        10,
        2,
        2,
        1,
        5,
        5,
        2,
        1,
        2,
        2,
        2,
        15,
        2,
        20,
        15,
        4,
        5,
        2,
        10,
        5,
        20,
        2,
        5,
        10,
        20,
        31,
        2,
        2,
        1,
        2,
        3,
        2,
        2,
        5,
        3,
        10,
        2,
        2,
        2,
        2,
        10,
        4,
        10,
        2,
        5,
        31,
        2,
        2,
        5,
        2,
        20,
        5,
        2,
        5,
        5,
        20,
        25,
        2,
        2,
        4,
        20,
        4,
        10,
        10,
        2,
        1,
        15,
        5,
        1,
        4,
        2,
        2,
        3,
        2,
        2,
        2,
        10,
        10,
        1,
        4,
        5,
        2,
        4,
        15,
        4,
        4,
        2,
        15,
        4,
        10,
        10,
        1,
        2,
        15,
        25,
        3,
        5,
        4,
        20,
        2,
        2,
        1,
        3,
        2,
        2,
        2,
        4,
        20,
        20,
        1,
        10,
        4,
        3,
        25,
        15,
        10,
        5,
        15,
        3,
        2,
        4,
        2,
        15,
        5,
        2,
        15,
        10,
        3,
        3,
        10,
        31,
        3,
        5,
        2,
        15,
        4,
        3,
        5,
        3,
        2,
        5,
        20,
        20,
        1,
        15,
        4,
        20,
        5,
        10,
        2,
        10,
        3,
        20,
        4,
        5,
        4,
        25,
        5,
        1,
        2,
        5,
        10,
        4,
        25,
        3,
        31,
        2,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        2,
        1,
        5,
        4,
        20,
        4,
        2,
        20,
        3,
        10,
        5,
        3,
        3,
        10,
        5,
        15,
        20,
        15,
        1,
        2,
        31,
        10,
        2,
        2,
        2,
        4,
        1,
        1,
        5,
        15,
        20,
        4,
        4,
        4,
        10,
        1,
        1,
        15,
        2,
        2,
        2,
        5,
        31,
        10,
        20,
        5,
        2,
        5,
        4,
        25,
        5,
        15,
        5,
        4,
        1,
        5,
        35,
        4,
        4,
        25,
        4,
        3,
        5,
        2,
        4,
        2,
        10,
        35,
        1,
        20,
        4,
        5,
        4,
        5,
        31,
        10,
        25,
        1,
        2,
        2,
        4,
        2,
        3,
        31,
        3,
        20,
        31,
        25,
        10,
        15,
        3,
        2,
        3,
        2,
        5,
        15,
        5,
        10,
        10,
        10,
        20,
        20,
        4,
        5,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        3,
        3,
        3,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        2,
        25,
        15,
        1,
        1,
        10,
        1,
        5,
        1,
        5,
        2,
        4,
        20,
        15,
        10,
        5,
        25,
        15,
        20,
        20,
        4,
        2,
        10,
        1,
        20,
        10,
        15,
        5,
        25,
        4,
        5,
        4,
        5,
        1,
        5,
        2,
        25,
        3,
        4,
        4,
        1,
        10,
        25,
        2,
        1,
        2,
        35,
        4,
        2,
        2,
        25,
        3,
        10,
        2,
        25,
        25,
        5,
        4,
        2,
        3,
        10,
        15,
        2,
        15,
        2,
        10,
        2,
        1,
        4,
        1,
        10,
        5,
        10,
        4,
        5,
        1,
        10,
        5,
        5,
        3,
        5,
        2,
        4,
        20,
        20,
        2,
        2,
        10,
        5,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        1,
        1,
        5,
        5,
        15,
        35,
        3,
        2,
        2,
        1,
        3,
        5,
        2,
        15,
        5,
        4,
        2,
        5,
        2,
        1,
        20,
        1,
        2,
        15,
        20,
        10,
        5,
        2,
        5,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        2,
        10,
        1,
        5,
        15,
        2,
        10,
        2,
        15,
        20,
        5,
        5,
        10,
        35,
        25,
        3,
        1,
        4,
        3,
        2,
        25,
        2,
        10,
        2,
        2,
        1,
        10,
        10,
        2,
        2,
        10,
        1,
        2,
        4,
        5,
        5,
        2,
        2,
        25,
        5,
        1,
        2,
        15,
        3,
        2,
        15,
        25,
        5,
        5,
        1,
        15,
        3,
        2,
        2,
        2,
        15,
        1,
        1,
        2,
        35,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        5,
        5,
        5,
        4,
        25,
        15,
        4,
        5,
        20,
        15,
        35,
        20,
        4,
        1,
        5,
        10,
        5,
        10,
        15,
        2,
        4,
        10,
        1,
        20,
        5,
        25,
        2,
        15,
        20,
        10,
        1,
        4,
        25,
        2,
        15,
        10,
        15,
        1,
        2,
        2,
        2,
        2,
        35,
        5,
        3,
        20,
        5,
        3,
        2,
        4,
        20,
        35,
        20,
        25,
        3,
        5,
        2,
        1,
        5,
        4,
        5,
        20,
        2,
        4,
        10,
        2,
        5,
        15,
        5,
        2,
        10,
        3,
        1,
        15,
        2,
        5,
        35,
        25,
        1,
        5,
        15,
        20,
        20,
        4,
        15,
        2,
        5,
        20,
        2,
        15,
        20,
        4,
        5,
        10,
        5,
        2,
        5,
        15,
        5,
        5,
        5,
        2,
        5,
        5,
        3,
        1,
        25,
        5,
        2,
        2,
        15,
        2,
        10,
        20,
        15,
        2,
        2,
        25,
        3,
        2,
        20,
        10,
        2,
        2,
        2,
        3,
        3,
        3,
        1,
        35,
        5,
        4,
        2,
        25,
        5,
        1,
        10,
        1,
        15,
        35,
        15,
        1,
        1,
        4,
        15,
        5,
        5,
        3,
        20,
        1,
        2,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        1,
        4,
        20,
        5,
        2,
        10,
        2,
        3,
        5,
        20,
        4,
        5,
        10,
        5,
        25,
        5,
        20,
        20,
        10,
        2,
        2,
        10,
        5,
        20,
        20,
        15,
        4
    ],
    "test_pred_y": [
        35,
        20,
        4,
        15,
        1,
        5,
        4,
        4,
        15,
        2,
        4,
        15,
        5,
        1,
        2,
        5,
        35,
        4,
        5,
        15,
        3,
        15,
        2,
        20,
        4,
        35,
        10,
        4,
        4,
        5,
        2,
        5,
        1,
        3,
        10,
        3,
        1,
        10,
        4,
        4,
        20,
        2,
        4,
        3,
        20,
        20,
        4,
        15,
        2,
        2,
        25,
        2,
        4,
        2,
        5,
        5,
        20,
        5,
        15,
        3,
        5,
        10,
        5,
        5,
        3,
        2,
        2,
        5,
        20,
        1,
        10,
        1,
        4,
        4,
        20,
        1,
        5,
        20,
        3,
        2,
        5,
        4,
        5,
        10,
        3,
        1,
        15,
        4,
        35,
        20,
        25,
        20,
        10,
        2,
        2,
        15,
        2,
        3,
        5,
        10,
        15,
        4,
        2,
        4,
        5,
        20,
        35,
        2,
        25,
        25,
        25,
        2,
        1,
        5,
        20,
        1,
        35,
        15,
        1,
        4,
        15,
        4,
        35,
        1,
        1,
        3,
        4,
        1,
        2,
        1,
        3,
        2,
        2,
        4,
        5,
        2,
        20,
        20,
        1,
        2,
        25,
        20,
        2,
        15,
        15,
        5,
        2,
        2,
        1,
        2,
        2,
        10,
        20,
        5,
        5,
        1,
        25,
        2,
        2,
        10,
        15,
        4,
        2,
        4,
        4,
        20,
        5,
        20,
        4,
        1,
        20,
        2,
        15,
        2,
        2,
        1,
        2,
        4,
        3,
        5,
        10,
        3,
        5,
        10,
        10,
        2,
        1,
        20,
        4,
        20,
        1,
        5,
        1,
        20,
        3,
        20,
        25,
        4,
        1,
        4,
        15,
        1,
        20,
        2,
        15,
        2,
        1,
        4,
        10,
        15,
        10,
        10,
        25,
        15,
        2,
        20,
        15,
        4,
        15,
        15,
        2,
        20,
        35,
        2,
        15,
        25,
        10,
        20,
        2,
        2,
        25,
        5,
        10,
        25,
        10,
        20,
        15,
        3,
        10,
        20,
        5,
        35,
        10,
        1,
        20,
        20,
        5,
        20,
        3,
        2,
        25,
        5,
        20,
        15,
        20,
        2,
        10,
        3,
        2,
        20,
        35,
        1,
        10,
        2,
        20,
        5,
        5,
        1,
        5,
        4,
        5,
        5,
        20,
        20,
        4,
        1,
        1,
        15,
        4,
        10,
        1,
        4,
        15,
        5,
        2,
        2,
        2,
        1,
        4,
        5,
        1,
        4,
        1,
        1,
        5,
        1,
        1,
        4,
        20,
        2,
        4,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": true
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "CHIMERGE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "KNN",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "DECISION_TREE",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 500,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "RANDOM_SEARCH",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 4950,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 8,
                    "stop": 30,
                    "step": 4
                },
                "min_samples_split": {
                    "start": 7,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 3,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.2
                },
                "max_features": [
                    "sqrt"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 70,
                    "step": 4
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.2,
                    "step": 0.3
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.9
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 200,
                    "stop": 1000,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 22,
                        "size": 50
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 50
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 50
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 50,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 50,
                        "high": 5000,
                        "size": 200
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 1500,
                        "size": 100
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}