{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.018394648829431426,
                0.007525083612040184,
                0.0033444816053511683,
                0.015886287625418105,
                0.0,
                0.018394648829431426,
                0.021739130434782594,
                -0.0016722408026755842,
                -0.0008361204013378476,
                0.025083612040133763,
                0.0025083612040133207,
                -0.0008361204013378476
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.018394648829431426
                ],
                [
                    0.007525083612040184
                ],
                [
                    0.0033444816053511683
                ],
                [
                    0.015886287625418105
                ],
                [
                    0.0
                ],
                [
                    0.018394648829431426
                ],
                [
                    0.021739130434782594
                ],
                [
                    -0.0016722408026755842
                ],
                [
                    -0.0008361204013378476
                ],
                [
                    0.025083612040133763
                ],
                [
                    0.0025083612040133207
                ],
                [
                    -0.0008361204013378476
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.013999044433826824,
                0.004037267080746143,
                0.010869565217391575,
                0.012279025322503245,
                0.006903965599618256,
                0.003583373148590918,
                0.0046583850931679605,
                0.003081700907788143,
                0.0020783564261829257,
                0.006473960821786862,
                0.0020783564261823706,
                0.0006450071667460922
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.013999044433826824
                ],
                [
                    0.004037267080746143
                ],
                [
                    0.010869565217391575
                ],
                [
                    0.012279025322503245
                ],
                [
                    0.006903965599618256
                ],
                [
                    0.003583373148590918
                ],
                [
                    0.0046583850931679605
                ],
                [
                    0.003081700907788143
                ],
                [
                    0.0020783564261829257
                ],
                [
                    0.006473960821786862
                ],
                [
                    0.0020783564261823706
                ],
                [
                    0.0006450071667460922
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.06020066889632103,
                0.06103678929765882,
                0.12541806020066887,
                0.057692307692307654,
                0.03511705685618727,
                0.015886287625417994,
                0.013377926421404673,
                0.038461538461538436,
                0.030100334448160515,
                0.021739130434782594,
                0.015050167224080258,
                0.012541806020066826
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.06020066889632103
                ],
                [
                    0.06103678929765882
                ],
                [
                    0.12541806020066887
                ],
                [
                    0.057692307692307654
                ],
                [
                    0.03511705685618727
                ],
                [
                    0.015886287625417994
                ],
                [
                    0.013377926421404673
                ],
                [
                    0.038461538461538436
                ],
                [
                    0.030100334448160515
                ],
                [
                    0.021739130434782594
                ],
                [
                    0.015050167224080258
                ],
                [
                    0.012541806020066826
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.050566114683799124,
                0.05202552976591879,
                0.0996552305616153,
                0.05137931693099518,
                0.02943578846670719,
                0.01576787458024148,
                0.01227900645173663,
                0.02788837066866795,
                0.020687925853544287,
                0.03306315153520517,
                0.020390835086018744,
                0.00926671293083503
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.050566114683799124
                ],
                [
                    0.05202552976591879
                ],
                [
                    0.0996552305616153
                ],
                [
                    0.05137931693099518
                ],
                [
                    0.02943578846670719
                ],
                [
                    0.01576787458024148
                ],
                [
                    0.01227900645173663
                ],
                [
                    0.02788837066866795
                ],
                [
                    0.020687925853544287
                ],
                [
                    0.03306315153520517
                ],
                [
                    0.020390835086018744
                ],
                [
                    0.00926671293083503
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau",
        "S\u00e5rrand (cm)",
        "Midte (cm)"
    ],
    "train_accuracies": {
        "threshold": 0.9222408026755853,
        "distance": 0.9452938365981811,
        "exact_accuracy": 0.5451505016722408,
        "balanced_accuracy": 0.3525710692021551
    },
    "train_precision": 0.5617692914337581,
    "train_recall": 0.5451505016722408,
    "test_accuracies": {
        "threshold": 0.9178082191780822,
        "distance": 0.943835616438356,
        "exact_accuracy": 0.4931506849315068,
        "balanced_accuracy": 0.3192362218678009
    },
    "test_precision": 0.5230216977347537,
    "test_recall": 0.4931506849315068,
    "train_pred_y": [
        2,
        4,
        4,
        3,
        10,
        5,
        3,
        5,
        15,
        20,
        25,
        5,
        4,
        4,
        10,
        10,
        5,
        2,
        15,
        20,
        10,
        1,
        5,
        4,
        15,
        3,
        10,
        15,
        25,
        4,
        10,
        15,
        3,
        15,
        4,
        1,
        1,
        4,
        15,
        2,
        5,
        15,
        2,
        4,
        4,
        15,
        4,
        1,
        4,
        10,
        4,
        10,
        20,
        20,
        10,
        3,
        25,
        15,
        4,
        10,
        15,
        4,
        10,
        10,
        15,
        20,
        20,
        20,
        2,
        4,
        15,
        20,
        5,
        1,
        4,
        1,
        20,
        4,
        4,
        20,
        10,
        10,
        1,
        20,
        10,
        10,
        20,
        3,
        5,
        20,
        15,
        25,
        10,
        1,
        10,
        10,
        4,
        4,
        2,
        4,
        4,
        15,
        2,
        10,
        1,
        1,
        1,
        20,
        1,
        3,
        10,
        4,
        4,
        1,
        10,
        4,
        15,
        3,
        20,
        10,
        15,
        1,
        5,
        20,
        10,
        4,
        20,
        1,
        4,
        4,
        1,
        1,
        15,
        4,
        10,
        15,
        4,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        4,
        10,
        4,
        4,
        2,
        10,
        5,
        20,
        10,
        2,
        10,
        5,
        1,
        10,
        20,
        20,
        3,
        1,
        1,
        5,
        20,
        1,
        20,
        4,
        25,
        20,
        4,
        5,
        4,
        4,
        4,
        5,
        4,
        1,
        4,
        20,
        2,
        4,
        1,
        1,
        10,
        2,
        10,
        4,
        4,
        3,
        1,
        1,
        2,
        10,
        4,
        4,
        15,
        2,
        10,
        20,
        5,
        1,
        3,
        3,
        4,
        1,
        4,
        10,
        1,
        3,
        15,
        3,
        1,
        3,
        5,
        3,
        3,
        15,
        10,
        10,
        5,
        4,
        3,
        15,
        10,
        4,
        1,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        1,
        3,
        1,
        3,
        3,
        1,
        4,
        4,
        1,
        1,
        20,
        4,
        10,
        5,
        4,
        1,
        4,
        15,
        10,
        4,
        20,
        1,
        1,
        1,
        2,
        10,
        4,
        3,
        15,
        10,
        4,
        10,
        1,
        15,
        1,
        20,
        1,
        10,
        1,
        5,
        4,
        10,
        5,
        10,
        3,
        15,
        10,
        20,
        3,
        1,
        4,
        3,
        25,
        4,
        20,
        5,
        20,
        1,
        5,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        1,
        20,
        10,
        10,
        10,
        4,
        10,
        4,
        10,
        2,
        25,
        3,
        25,
        3,
        10,
        5,
        1,
        4,
        20,
        4,
        20,
        1,
        5,
        15,
        1,
        10,
        4,
        5,
        5,
        3,
        2,
        2,
        1,
        10,
        10,
        3,
        10,
        15,
        3,
        10,
        2,
        4,
        20,
        5,
        15,
        1,
        15,
        4,
        1,
        2,
        20,
        4,
        10,
        2,
        20,
        2,
        1,
        10,
        25,
        3,
        15,
        4,
        2,
        1,
        10,
        20,
        4,
        1,
        25,
        10,
        20,
        1,
        20,
        5,
        15,
        5,
        4,
        15,
        3,
        1,
        3,
        1,
        1,
        5,
        20,
        15,
        5,
        20,
        5,
        1,
        1,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        1,
        1,
        20,
        15,
        1,
        4,
        10,
        5,
        10,
        10,
        4,
        4,
        10,
        2,
        5,
        3,
        1,
        4,
        20,
        2,
        5,
        10,
        4,
        15,
        5,
        1,
        3,
        15,
        3,
        1,
        10,
        4,
        4,
        4,
        3,
        2,
        4,
        20,
        20,
        10,
        2,
        4,
        3,
        1,
        4,
        5,
        4,
        4,
        10,
        10,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        2,
        1,
        20,
        10,
        1,
        1,
        3,
        3,
        20,
        1,
        1,
        10,
        3,
        2,
        3,
        15,
        3,
        10,
        10,
        10,
        5,
        4,
        1,
        4,
        10,
        3,
        10,
        1,
        2,
        1,
        5,
        5,
        1,
        4,
        1,
        2,
        4,
        15,
        3,
        20,
        15,
        4,
        5,
        2,
        10,
        4,
        25,
        2,
        4,
        10,
        10,
        20,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        3,
        15,
        2,
        1,
        1,
        4,
        10,
        4,
        10,
        1,
        15,
        25,
        3,
        1,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        4,
        4,
        20,
        2,
        4,
        10,
        10,
        2,
        3,
        5,
        10,
        4,
        2,
        4,
        1,
        1,
        3,
        1,
        1,
        2,
        10,
        10,
        1,
        4,
        4,
        3,
        4,
        15,
        4,
        4,
        1,
        10,
        4,
        5,
        10,
        1,
        3,
        10,
        20,
        3,
        5,
        4,
        20,
        1,
        2,
        2,
        3,
        1,
        1,
        3,
        4,
        5,
        20,
        10,
        1,
        10,
        4,
        3,
        20,
        10,
        3,
        5,
        10,
        3,
        1,
        4,
        3,
        10,
        5,
        3,
        15,
        10,
        3,
        3,
        10,
        25,
        3,
        5,
        1,
        10,
        4,
        3,
        5,
        3,
        3,
        5,
        15,
        10,
        1,
        15,
        4,
        10,
        4,
        10,
        3,
        10,
        3,
        10,
        4,
        4,
        4,
        20,
        4,
        1,
        2,
        4,
        10,
        4,
        3,
        20,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        1,
        1,
        4,
        4,
        15,
        4,
        1,
        10,
        4,
        10,
        15,
        3,
        3,
        10,
        5,
        10,
        15,
        10,
        1,
        1,
        25,
        10,
        1,
        1,
        3,
        4,
        1,
        3,
        5,
        15,
        25,
        4,
        4,
        2,
        10,
        3,
        1,
        10,
        1,
        1,
        2,
        4,
        20,
        10,
        10,
        3,
        1,
        4,
        4,
        3,
        15,
        5,
        4,
        1,
        5,
        20,
        4,
        4,
        20,
        4,
        3,
        5,
        3,
        4,
        4,
        10,
        20,
        1,
        10,
        4,
        4,
        4,
        5,
        20,
        10,
        20,
        1,
        1,
        3,
        4,
        1,
        4,
        20,
        3,
        10,
        20,
        15,
        15,
        15,
        3,
        3,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        10,
        15,
        15,
        4,
        4,
        4,
        1,
        10,
        5,
        10,
        5,
        4,
        10,
        25,
        3,
        3,
        3,
        4,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        20,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        15,
        10,
        10,
        5,
        20,
        15,
        20,
        20,
        4,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        5,
        10,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        2,
        1,
        2,
        20,
        4,
        2,
        1,
        4,
        20,
        3,
        10,
        1,
        10,
        20,
        4,
        5,
        3,
        3,
        10,
        15,
        1,
        10,
        1,
        10,
        1,
        4,
        4,
        2,
        10,
        5,
        10,
        4,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        4,
        1,
        4,
        15,
        25,
        1,
        4,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        4,
        3,
        1,
        5,
        5,
        10,
        20,
        3,
        1,
        3,
        1,
        3,
        15,
        1,
        15,
        5,
        4,
        1,
        4,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        4,
        5,
        4,
        5,
        10,
        10,
        5,
        10,
        4,
        15,
        1,
        10,
        1,
        5,
        15,
        1,
        10,
        1,
        15,
        15,
        5,
        20,
        10,
        20,
        15,
        3,
        1,
        4,
        3,
        3,
        15,
        1,
        10,
        1,
        1,
        1,
        10,
        10,
        1,
        1,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        10,
        5,
        1,
        3,
        10,
        3,
        3,
        15,
        20,
        5,
        5,
        1,
        10,
        4,
        3,
        1,
        2,
        4,
        1,
        15,
        1,
        1,
        4,
        20,
        10,
        4,
        4,
        5,
        1,
        4,
        5,
        10,
        20,
        10,
        5,
        15,
        4,
        5,
        4,
        15,
        15,
        4,
        5,
        4,
        20,
        10,
        20,
        15,
        4,
        2,
        5,
        10,
        4,
        10,
        15,
        3,
        4,
        10,
        1,
        10,
        5,
        20,
        1,
        15,
        20,
        10,
        1,
        4,
        20,
        1,
        15,
        10,
        15,
        1,
        1,
        1,
        4,
        3,
        4,
        3,
        10,
        5,
        3,
        10,
        2,
        4,
        20,
        20,
        15,
        25,
        3,
        5,
        2,
        1,
        5,
        4,
        5,
        10,
        3,
        4,
        10,
        3,
        15,
        10,
        4,
        2,
        10,
        3,
        1,
        10,
        1,
        5,
        20,
        1,
        5,
        15,
        10,
        15,
        4,
        15,
        4,
        1,
        15,
        10,
        1,
        10,
        15,
        10,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        4,
        5,
        5,
        3,
        1,
        4,
        1,
        1,
        15,
        1,
        15,
        15,
        10,
        1,
        1,
        15,
        5,
        4,
        1,
        5,
        10,
        1,
        4,
        2,
        1,
        3,
        3,
        3,
        1,
        4,
        5,
        4,
        3,
        20,
        5,
        4,
        1,
        4,
        10,
        5,
        15,
        20,
        15,
        1,
        2,
        4,
        10,
        5,
        5,
        3,
        15,
        1,
        1,
        4,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        4,
        20,
        5,
        5,
        3,
        10,
        3,
        1,
        10,
        5,
        20,
        4,
        5,
        10,
        15,
        20,
        5,
        15,
        20,
        10,
        4,
        1,
        10,
        5,
        15,
        20,
        15,
        4
    ],
    "test_pred_y": [
        20,
        10,
        5,
        15,
        1,
        5,
        5,
        5,
        25,
        1,
        5,
        15,
        5,
        1,
        2,
        5,
        20,
        5,
        5,
        10,
        5,
        20,
        1,
        20,
        5,
        20,
        5,
        5,
        5,
        5,
        2,
        5,
        2,
        5,
        10,
        3,
        1,
        5,
        5,
        5,
        5,
        3,
        5,
        3,
        10,
        15,
        5,
        10,
        3,
        3,
        2,
        5,
        1,
        5,
        5,
        15,
        5,
        15,
        5,
        5,
        10,
        5,
        5,
        3,
        3,
        5,
        5,
        20,
        1,
        15,
        10,
        5,
        5,
        15,
        1,
        5,
        10,
        3,
        2,
        5,
        5,
        5,
        20,
        3,
        1,
        15,
        5,
        10,
        20,
        10,
        20,
        1,
        2,
        15,
        1,
        3,
        5,
        10,
        15,
        5,
        2,
        5,
        5,
        15,
        20,
        2,
        5,
        1,
        5,
        15,
        1,
        20,
        10,
        1,
        5,
        15,
        5,
        20,
        1,
        1,
        3,
        5,
        1,
        1,
        1,
        3,
        1,
        3,
        5,
        5,
        2,
        20,
        10,
        2,
        3,
        15,
        10,
        1,
        15,
        15,
        5,
        5,
        1,
        2,
        2,
        1,
        20,
        10,
        5,
        5,
        3,
        5,
        5,
        20,
        10,
        5,
        1,
        5,
        5,
        10,
        5,
        10,
        5,
        1,
        20,
        3,
        15,
        1,
        2,
        1,
        1,
        5,
        3,
        5,
        5,
        5,
        5,
        10,
        10,
        5,
        1,
        10,
        5,
        15,
        20,
        5,
        1,
        10,
        5,
        10,
        5,
        1,
        5,
        15,
        1,
        10,
        1,
        15,
        3,
        1,
        5,
        20,
        10,
        5,
        5,
        15,
        2,
        10,
        10,
        5,
        10,
        15,
        3,
        10,
        20,
        5,
        15,
        5,
        10,
        1,
        1,
        5,
        10,
        20,
        10,
        10,
        15,
        3,
        5,
        20,
        5,
        20,
        5,
        1,
        20,
        10,
        5,
        10,
        3,
        1,
        20,
        5,
        20,
        10,
        10,
        3,
        15,
        3,
        1,
        10,
        20,
        1,
        5,
        1,
        10,
        5,
        5,
        2,
        5,
        5,
        5,
        5,
        15,
        10,
        5,
        1,
        2,
        15,
        5,
        10,
        1,
        5,
        15,
        5,
        1,
        5,
        3,
        1,
        5,
        5,
        1,
        5,
        1,
        1,
        5,
        1,
        1,
        5,
        20,
        1,
        5,
        5
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": true
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "AVF",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "CHIMERGE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "KNN",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "NAIVE_BAYES",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 2000,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "CROSS_VALIDATION",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 8,
                    "stop": 30,
                    "step": 4
                },
                "min_samples_split": {
                    "start": 7,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 3,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.2
                },
                "max_features": [
                    "sqrt"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 70,
                    "step": 4
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.2,
                    "step": 0.3
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.9
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 200,
                    "stop": 1000,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "relu",
                    "tanh",
                    "logistic"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 8,
                        "high": 30,
                        "size": 60
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 7,
                        "high": 10,
                        "size": 50
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 50,
                        "high": 70,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 200
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 200,
                        "high": 928,
                        "size": 200
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}