{
    "RandomSearchCV_BestParams": {
        "oob_score": false,
        "n_estimators": 190,
        "min_weight_fraction_leaf": 0.0,
        "min_samples_split": 9,
        "min_samples_leaf": 3,
        "min_impurity_decrease": 0.0,
        "max_samples": 807,
        "max_leaf_nodes": 58,
        "max_features": "sqrt",
        "max_depth": 25,
        "criterion": "gini",
        "ccp_alpha": 0.0,
        "bootstrap": true
    },
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.05423728813559325,
                0.01016949152542379,
                0.005084745762711895,
                0.009322033898305104,
                0.007627118644067843,
                0.012711864406779627,
                0.023728813559321993,
                0.0025423728813559476,
                0.01016949152542379,
                -0.0008474576271186862,
                0.0,
                0.0016949152542372614,
                0.0008474576271186862,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0008474576271186862,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.05423728813559325
                ],
                [
                    0.01016949152542379
                ],
                [
                    0.005084745762711895
                ],
                [
                    0.009322033898305104
                ],
                [
                    0.007627118644067843
                ],
                [
                    0.012711864406779627
                ],
                [
                    0.023728813559321993
                ],
                [
                    0.0025423728813559476
                ],
                [
                    0.01016949152542379
                ],
                [
                    -0.0008474576271186862
                ],
                [
                    0.0
                ],
                [
                    0.0016949152542372614
                ],
                [
                    0.0008474576271186862
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0008474576271186862
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.02648910411622296,
                0.015496368038742103,
                0.013631961259078285,
                0.008692493946731328,
                0.01421307506053271,
                0.004648910411622853,
                0.007651331719128351,
                0.0010169491525424679,
                0.010024213075060517,
                0.0033656174334140143,
                -0.00016949152542367063,
                0.00038740920096869136,
                7.263922518196964e-05,
                4.842615012112805e-05,
                0.0,
                7.263922518196964e-05,
                -2.421307506073056e-05,
                0.0001210653753026536,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.02648910411622296
                ],
                [
                    0.015496368038742103
                ],
                [
                    0.013631961259078285
                ],
                [
                    0.008692493946731328
                ],
                [
                    0.01421307506053271
                ],
                [
                    0.004648910411622853
                ],
                [
                    0.007651331719128351
                ],
                [
                    0.0010169491525424679
                ],
                [
                    0.010024213075060517
                ],
                [
                    0.0033656174334140143
                ],
                [
                    -0.00016949152542367063
                ],
                [
                    0.00038740920096869136
                ],
                [
                    7.263922518196964e-05
                ],
                [
                    4.842615012112805e-05
                ],
                [
                    0.0
                ],
                [
                    7.263922518196964e-05
                ],
                [
                    -2.421307506073056e-05
                ],
                [
                    0.0001210653753026536
                ],
                [
                    0.0
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.11101694915254234,
                0.09830508474576272,
                0.16101694915254233,
                0.06694915254237288,
                0.0610169491525423,
                0.03050847457627115,
                0.03644067796610162,
                0.012711864406779627,
                0.0330508474576271,
                0.02627118644067794,
                0.0,
                0.0059322033898304705,
                0.0016949152542372614,
                0.0016949152542372614,
                0.0,
                0.003389830508474523,
                0.0,
                0.0008474576271185752,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.11101694915254234
                ],
                [
                    0.09830508474576272
                ],
                [
                    0.16101694915254233
                ],
                [
                    0.06694915254237288
                ],
                [
                    0.0610169491525423
                ],
                [
                    0.03050847457627115
                ],
                [
                    0.03644067796610162
                ],
                [
                    0.012711864406779627
                ],
                [
                    0.0330508474576271
                ],
                [
                    0.02627118644067794
                ],
                [
                    0.0
                ],
                [
                    0.0059322033898304705
                ],
                [
                    0.0016949152542372614
                ],
                [
                    0.0016949152542372614
                ],
                [
                    0.0
                ],
                [
                    0.003389830508474523
                ],
                [
                    0.0
                ],
                [
                    0.0008474576271185752
                ],
                [
                    0.0
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.09825962413475342,
                0.16846218736590807,
                0.12195174592869068,
                0.06007410518134981,
                0.13425944861901912,
                0.11201031325391997,
                0.0781489896489791,
                0.011729230432406146,
                0.13287730487403093,
                0.08424423309330853,
                -0.004379861992644063,
                0.002410882592965291,
                0.0020630618193490102,
                0.0012161887329672494,
                0.0,
                0.0024364449867805282,
                4.06752084602946e-06,
                0.0010449320794148065,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.09825962413475342
                ],
                [
                    0.16846218736590807
                ],
                [
                    0.12195174592869068
                ],
                [
                    0.06007410518134981
                ],
                [
                    0.13425944861901912
                ],
                [
                    0.11201031325391997
                ],
                [
                    0.0781489896489791
                ],
                [
                    0.011729230432406146
                ],
                [
                    0.13287730487403093
                ],
                [
                    0.08424423309330853
                ],
                [
                    -0.004379861992644063
                ],
                [
                    0.002410882592965291
                ],
                [
                    0.0020630618193490102
                ],
                [
                    0.0012161887329672494
                ],
                [
                    0.0
                ],
                [
                    0.0024364449867805282
                ],
                [
                    4.06752084602946e-06
                ],
                [
                    0.0010449320794148065
                ],
                [
                    0.0
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "S\u00e5rrand (cm)",
        "Midte (cm)",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.9466101694915254,
        "distance": 0.9670702179176727,
        "exact_accuracy": 0.6423728813559322,
        "balanced_accuracy": 0.6143205053326153
    },
    "train_precision": 0.6415029333096186,
    "train_recall": 0.6423728813559322,
    "test_accuracies": {
        "threshold": 0.9039735099337748,
        "distance": 0.9534531693472088,
        "exact_accuracy": 0.5496688741721855,
        "balanced_accuracy": 0.45128788454147306
    },
    "test_precision": 0.6049665424196552,
    "test_recall": 0.5496688741721855,
    "train_pred_y": [
        2,
        5,
        4,
        3,
        10,
        5,
        3,
        5,
        15,
        30,
        25,
        4,
        4,
        4,
        10,
        10,
        5,
        2,
        20,
        20,
        10,
        1,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        25,
        3,
        15,
        4,
        1,
        1,
        4,
        15,
        3,
        5,
        15,
        2,
        4,
        2,
        31,
        4,
        1,
        4,
        4,
        10,
        20,
        30,
        10,
        3,
        25,
        15,
        4,
        10,
        15,
        5,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        5,
        20,
        35,
        5,
        1,
        4,
        1,
        30,
        5,
        5,
        35,
        20,
        15,
        1,
        20,
        15,
        10,
        20,
        3,
        5,
        20,
        25,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        1,
        4,
        5,
        20,
        2,
        10,
        2,
        2,
        1,
        30,
        1,
        3,
        10,
        4,
        4,
        1,
        15,
        4,
        15,
        3,
        30,
        10,
        20,
        1,
        5,
        31,
        20,
        4,
        25,
        1,
        4,
        4,
        1,
        1,
        15,
        5,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        5,
        10,
        4,
        5,
        2,
        10,
        5,
        35,
        10,
        2,
        10,
        5,
        1,
        15,
        30,
        25,
        3,
        1,
        1,
        5,
        20,
        1,
        25,
        4,
        25,
        30,
        4,
        5,
        4,
        5,
        4,
        5,
        4,
        1,
        2,
        20,
        2,
        4,
        1,
        1,
        10,
        2,
        10,
        4,
        2,
        3,
        1,
        1,
        3,
        10,
        4,
        4,
        20,
        2,
        10,
        31,
        5,
        2,
        25,
        3,
        3,
        5,
        1,
        4,
        10,
        1,
        3,
        20,
        3,
        1,
        3,
        5,
        3,
        3,
        20,
        20,
        10,
        5,
        4,
        3,
        25,
        15,
        4,
        1,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        1,
        3,
        1,
        3,
        3,
        1,
        5,
        2,
        1,
        1,
        35,
        4,
        10,
        5,
        4,
        1,
        4,
        15,
        10,
        25,
        4,
        20,
        1,
        1,
        1,
        2,
        10,
        4,
        3,
        15,
        15,
        2,
        20,
        1,
        15,
        1,
        20,
        1,
        15,
        1,
        5,
        5,
        10,
        5,
        10,
        3,
        15,
        10,
        25,
        3,
        1,
        2,
        3,
        25,
        2,
        31,
        5,
        30,
        1,
        5,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        1,
        25,
        35,
        15,
        10,
        20,
        2,
        10,
        4,
        10,
        2,
        25,
        3,
        25,
        3,
        15,
        10,
        1,
        5,
        30,
        4,
        20,
        1,
        5,
        15,
        1,
        15,
        5,
        5,
        4,
        3,
        1,
        2,
        1,
        10,
        15,
        3,
        20,
        15,
        3,
        10,
        2,
        2,
        35,
        5,
        5,
        2,
        25,
        4,
        1,
        2,
        20,
        5,
        10,
        2,
        35,
        2,
        1,
        10,
        25,
        3,
        20,
        5,
        2,
        1,
        10,
        35,
        25,
        4,
        1,
        25,
        10,
        30,
        1,
        30,
        5,
        15,
        5,
        5,
        15,
        3,
        1,
        3,
        1,
        1,
        5,
        30,
        20,
        5,
        25,
        5,
        1,
        1,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        1,
        1,
        20,
        25,
        1,
        3,
        10,
        15,
        15,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        1,
        5,
        20,
        1,
        5,
        15,
        4,
        20,
        5,
        1,
        3,
        20,
        3,
        1,
        20,
        4,
        5,
        3,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        4,
        3,
        1,
        4,
        5,
        4,
        5,
        10,
        15,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        3,
        1,
        30,
        10,
        1,
        1,
        3,
        3,
        25,
        1,
        1,
        10,
        3,
        3,
        3,
        15,
        3,
        10,
        10,
        10,
        5,
        2,
        1,
        4,
        10,
        3,
        10,
        1,
        2,
        1,
        5,
        3,
        1,
        5,
        1,
        2,
        2,
        15,
        3,
        20,
        15,
        4,
        5,
        2,
        15,
        3,
        25,
        2,
        5,
        10,
        20,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        3,
        15,
        2,
        1,
        1,
        2,
        10,
        4,
        10,
        1,
        15,
        25,
        3,
        1,
        5,
        1,
        20,
        5,
        2,
        5,
        5,
        20,
        20,
        2,
        2,
        4,
        20,
        2,
        20,
        10,
        2,
        2,
        10,
        5,
        2,
        4,
        1,
        1,
        3,
        1,
        2,
        2,
        10,
        10,
        1,
        4,
        5,
        3,
        4,
        15,
        4,
        4,
        1,
        15,
        4,
        10,
        10,
        1,
        3,
        15,
        25,
        3,
        5,
        4,
        20,
        1,
        2,
        2,
        3,
        1,
        1,
        3,
        4,
        20,
        20,
        1,
        10,
        4,
        3,
        35,
        15,
        10,
        15,
        15,
        3,
        1,
        4,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        3,
        5,
        2,
        10,
        4,
        3,
        5,
        3,
        3,
        4,
        20,
        20,
        1,
        15,
        4,
        20,
        5,
        10,
        3,
        10,
        3,
        20,
        4,
        5,
        4,
        25,
        5,
        1,
        2,
        5,
        15,
        4,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        1,
        1,
        5,
        4,
        20,
        4,
        1,
        20,
        4,
        10,
        15,
        3,
        3,
        10,
        5,
        15,
        20,
        15,
        1,
        1,
        31,
        20,
        2,
        1,
        3,
        4,
        1,
        2,
        5,
        15,
        25,
        4,
        4,
        2,
        10,
        3,
        1,
        15,
        1,
        1,
        2,
        5,
        25,
        10,
        20,
        3,
        1,
        5,
        4,
        25,
        3,
        15,
        5,
        4,
        1,
        5,
        30,
        4,
        4,
        30,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        35,
        1,
        20,
        4,
        5,
        4,
        5,
        31,
        10,
        20,
        1,
        1,
        3,
        4,
        1,
        3,
        31,
        3,
        20,
        25,
        25,
        15,
        25,
        3,
        3,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        10,
        20,
        20,
        4,
        5,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        3,
        3,
        3,
        15,
        3,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        20,
        15,
        10,
        5,
        30,
        15,
        20,
        20,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        5,
        20,
        4,
        5,
        4,
        5,
        1,
        5,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        3,
        1,
        3,
        35,
        3,
        2,
        1,
        30,
        3,
        10,
        1,
        25,
        30,
        5,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        1,
        10,
        1,
        4,
        4,
        2,
        10,
        5,
        10,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        5,
        1,
        4,
        20,
        25,
        1,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        5,
        15,
        35,
        3,
        1,
        3,
        1,
        3,
        15,
        1,
        15,
        5,
        4,
        1,
        5,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        5,
        1,
        5,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        10,
        1,
        15,
        25,
        1,
        10,
        1,
        15,
        15,
        5,
        25,
        10,
        35,
        25,
        3,
        1,
        4,
        3,
        3,
        25,
        1,
        10,
        1,
        1,
        1,
        10,
        15,
        1,
        1,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        10,
        3,
        3,
        15,
        30,
        5,
        5,
        1,
        15,
        3,
        1,
        2,
        1,
        15,
        1,
        1,
        2,
        30,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        10,
        5,
        15,
        5,
        4,
        15,
        15,
        4,
        5,
        20,
        15,
        35,
        15,
        4,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        4,
        10,
        1,
        20,
        20,
        30,
        1,
        15,
        20,
        10,
        1,
        4,
        25,
        1,
        15,
        10,
        15,
        1,
        1,
        1,
        2,
        3,
        35,
        3,
        3,
        20,
        5,
        3,
        3,
        4,
        20,
        35,
        20,
        25,
        3,
        5,
        2,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        10,
        5,
        2,
        10,
        3,
        1,
        10,
        1,
        5,
        35,
        30,
        1,
        5,
        15,
        20,
        20,
        4,
        15,
        1,
        15,
        20,
        1,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        4,
        5,
        5,
        3,
        1,
        25,
        5,
        1,
        1,
        15,
        1,
        15,
        25,
        15,
        1,
        2,
        25,
        5,
        1,
        5,
        10,
        1,
        2,
        1,
        3,
        3,
        3,
        1,
        35,
        5,
        4,
        3,
        30,
        5,
        1,
        10,
        5,
        15,
        35,
        15,
        1,
        1,
        4,
        10,
        5,
        5,
        3,
        25,
        1,
        1,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        1,
        3,
        20,
        5,
        3,
        10,
        3,
        1,
        5,
        25,
        4,
        5,
        10,
        15,
        30,
        3,
        15,
        20,
        10,
        2,
        1,
        10,
        5,
        20,
        20,
        15,
        4
    ],
    "test_pred_y": [
        35,
        10,
        5,
        15,
        1,
        5,
        5,
        5,
        25,
        1,
        5,
        15,
        5,
        1,
        2,
        5,
        25,
        5,
        5,
        15,
        3,
        25,
        1,
        15,
        5,
        35,
        10,
        5,
        5,
        5,
        2,
        5,
        2,
        3,
        10,
        3,
        1,
        10,
        5,
        5,
        10,
        3,
        5,
        3,
        10,
        15,
        5,
        15,
        3,
        3,
        30,
        2,
        5,
        1,
        5,
        5,
        15,
        5,
        15,
        3,
        5,
        10,
        3,
        5,
        3,
        3,
        2,
        5,
        15,
        1,
        15,
        10,
        5,
        5,
        15,
        1,
        5,
        10,
        3,
        2,
        5,
        5,
        5,
        15,
        3,
        1,
        15,
        5,
        10,
        10,
        25,
        20,
        10,
        1,
        2,
        15,
        1,
        3,
        5,
        10,
        15,
        5,
        2,
        5,
        5,
        15,
        25,
        3,
        25,
        25,
        25,
        2,
        1,
        5,
        15,
        1,
        25,
        15,
        1,
        4,
        15,
        5,
        15,
        1,
        1,
        3,
        5,
        1,
        1,
        1,
        3,
        1,
        3,
        5,
        5,
        2,
        10,
        10,
        4,
        3,
        15,
        10,
        1,
        15,
        15,
        5,
        2,
        1,
        2,
        2,
        1,
        15,
        20,
        5,
        5,
        4,
        25,
        2,
        2,
        15,
        15,
        5,
        1,
        5,
        5,
        10,
        5,
        10,
        5,
        1,
        15,
        3,
        15,
        1,
        2,
        1,
        1,
        5,
        3,
        5,
        10,
        3,
        3,
        10,
        15,
        2,
        1,
        10,
        5,
        15,
        10,
        5,
        1,
        10,
        3,
        10,
        30,
        5,
        1,
        5,
        15,
        1,
        10,
        1,
        15,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        25,
        15,
        2,
        10,
        15,
        5,
        15,
        15,
        3,
        10,
        35,
        2,
        25,
        25,
        10,
        10,
        1,
        1,
        30,
        5,
        10,
        30,
        10,
        20,
        15,
        3,
        10,
        15,
        5,
        15,
        10,
        1,
        15,
        10,
        5,
        10,
        3,
        1,
        15,
        5,
        10,
        15,
        10,
        3,
        15,
        3,
        1,
        10,
        35,
        1,
        10,
        1,
        20,
        3,
        5,
        2,
        5,
        5,
        5,
        5,
        15,
        10,
        5,
        1,
        3,
        15,
        5,
        10,
        1,
        5,
        15,
        5,
        1,
        2,
        3,
        1,
        4,
        5,
        1,
        5,
        1,
        1,
        5,
        1,
        2,
        5,
        15,
        1,
        5,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": true
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "CHIMERGE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "KNN",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "RANDOM_FOREST",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 500,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "RANDOM_SEARCH",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 4608,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 8,
                    "stop": 30,
                    "step": 4
                },
                "min_samples_split": {
                    "start": 7,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 3,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.2
                },
                "max_features": [
                    "sqrt"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 70,
                    "step": 4
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.2,
                    "step": 0.3
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.9
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 200,
                    "stop": 1000,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 8,
                        "high": 30,
                        "size": 60
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 7,
                        "high": 10,
                        "size": 50
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 50,
                        "high": 70,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.0,
                        "size": 100
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 200
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 200,
                        "high": 928,
                        "size": 200
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}