{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.04311774461028195,
                0.04063018242122718,
                0.025704809286898778,
                0.02238805970149249,
                0.01492537313432829,
                0.02487562189054726,
                0.015754560530679917,
                0.004145936981757914,
                0.024046434494195634,
                0.0033167495854062867,
                0.007462686567164201,
                0.011608623548922004,
                0.00497512437810943,
                0.0,
                0.0,
                0.0008291873963515162,
                0.0008291873963515162,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.04311774461028195
                ],
                [
                    0.04063018242122718
                ],
                [
                    0.025704809286898778
                ],
                [
                    0.02238805970149249
                ],
                [
                    0.01492537313432829
                ],
                [
                    0.02487562189054726
                ],
                [
                    0.015754560530679917
                ],
                [
                    0.004145936981757914
                ],
                [
                    0.024046434494195634
                ],
                [
                    0.0033167495854062867
                ],
                [
                    0.007462686567164201
                ],
                [
                    0.011608623548922004
                ],
                [
                    0.00497512437810943
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0008291873963515162
                ],
                [
                    0.0008291873963515162
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.041269841269841456,
                0.03333333333333399,
                0.024283345178867988,
                0.024899312959014486,
                0.016228381900023403,
                0.014498933901919586,
                0.008694622127458307,
                0.002511253257522328,
                0.01191660743899614,
                0.003032456763800262,
                0.0038142620232174407,
                0.005851693911395839,
                0.002606017531391114,
                0.0001421464108035675,
                0.00037905709547514377,
                0.0006159677801473862,
                0.0013503909026301164,
                0.0002369106846722424,
                -7.107320540145068e-05
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.041269841269841456
                ],
                [
                    0.03333333333333399
                ],
                [
                    0.024283345178867988
                ],
                [
                    0.024899312959014486
                ],
                [
                    0.016228381900023403
                ],
                [
                    0.014498933901919586
                ],
                [
                    0.008694622127458307
                ],
                [
                    0.002511253257522328
                ],
                [
                    0.01191660743899614
                ],
                [
                    0.003032456763800262
                ],
                [
                    0.0038142620232174407
                ],
                [
                    0.005851693911395839
                ],
                [
                    0.002606017531391114
                ],
                [
                    0.0001421464108035675
                ],
                [
                    0.00037905709547514377
                ],
                [
                    0.0006159677801473862
                ],
                [
                    0.0013503909026301164
                ],
                [
                    0.0002369106846722424
                ],
                [
                    -7.107320540145068e-05
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.2139303482587065,
                0.16749585406301826,
                0.23134328358208955,
                0.1318407960199005,
                0.09286898839137647,
                0.10281923714759533,
                0.04063018242122718,
                0.020729684908789348,
                0.05389718076285244,
                0.020729684908789348,
                0.02570480928689889,
                0.06053067993366501,
                0.028192371475953548,
                0.0016583747927031434,
                0.00497512437810943,
                0.01243781094527363,
                0.02985074626865669,
                0.0033167495854062867,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.2139303482587065
                ],
                [
                    0.16749585406301826
                ],
                [
                    0.23134328358208955
                ],
                [
                    0.1318407960199005
                ],
                [
                    0.09286898839137647
                ],
                [
                    0.10281923714759533
                ],
                [
                    0.04063018242122718
                ],
                [
                    0.020729684908789348
                ],
                [
                    0.05389718076285244
                ],
                [
                    0.020729684908789348
                ],
                [
                    0.02570480928689889
                ],
                [
                    0.06053067993366501
                ],
                [
                    0.028192371475953548
                ],
                [
                    0.0016583747927031434
                ],
                [
                    0.00497512437810943
                ],
                [
                    0.01243781094527363
                ],
                [
                    0.02985074626865669
                ],
                [
                    0.0033167495854062867
                ],
                [
                    0.0
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.22139331754239183,
                0.24354178034368074,
                0.21282040893035759,
                0.13191430359546924,
                0.1910151282412419,
                0.18903531199888146,
                0.10670821446692824,
                0.052801170868035485,
                0.13321893887038677,
                0.03612622535687948,
                0.04199065716968009,
                0.08990345974056613,
                0.027139210576113126,
                0.001124219292158224,
                0.0036363636363635488,
                0.009178811010872034,
                0.02298724152310827,
                0.002512144344205436,
                -8.790191996299601e-05
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.22139331754239183
                ],
                [
                    0.24354178034368074
                ],
                [
                    0.21282040893035759
                ],
                [
                    0.13191430359546924
                ],
                [
                    0.1910151282412419
                ],
                [
                    0.18903531199888146
                ],
                [
                    0.10670821446692824
                ],
                [
                    0.052801170868035485
                ],
                [
                    0.13321893887038677
                ],
                [
                    0.03612622535687948
                ],
                [
                    0.04199065716968009
                ],
                [
                    0.08990345974056613
                ],
                [
                    0.027139210576113126
                ],
                [
                    0.001124219292158224
                ],
                [
                    0.0036363636363635488
                ],
                [
                    0.009178811010872034
                ],
                [
                    0.02298724152310827
                ],
                [
                    0.002512144344205436
                ],
                [
                    -8.790191996299601e-05
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "S\u00e5rrand (cm)",
        "Midte (cm)",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.9552238805970149,
        "distance": 0.9704098554844801,
        "exact_accuracy": 0.6674958540630183,
        "balanced_accuracy": 0.6238994748693464
    },
    "train_precision": 0.6723299018016912,
    "train_recall": 0.6674958540630183,
    "test_accuracies": {
        "threshold": 0.9304635761589404,
        "distance": 0.9573320719016079,
        "exact_accuracy": 0.5397350993377483,
        "balanced_accuracy": 0.4984939966997384
    },
    "test_precision": 0.5547398012122701,
    "test_recall": 0.5397350993377483,
    "train_pred_y": [
        2,
        4,
        4,
        3,
        10,
        5,
        3,
        5,
        20,
        35,
        31,
        5,
        4,
        4,
        10,
        10,
        5,
        2,
        20,
        20,
        10,
        1,
        5,
        5,
        15,
        3,
        10,
        20,
        25,
        5,
        15,
        25,
        3,
        15,
        4,
        1,
        2,
        4,
        15,
        3,
        5,
        15,
        2,
        4,
        2,
        31,
        4,
        2,
        4,
        10,
        4,
        10,
        20,
        35,
        20,
        4,
        25,
        15,
        4,
        10,
        15,
        4,
        20,
        20,
        15,
        20,
        31,
        20,
        2,
        4,
        15,
        35,
        5,
        1,
        4,
        1,
        35,
        4,
        4,
        35,
        10,
        15,
        1,
        20,
        15,
        10,
        25,
        3,
        5,
        20,
        35,
        25,
        15,
        1,
        10,
        10,
        4,
        4,
        2,
        4,
        4,
        25,
        2,
        10,
        2,
        2,
        1,
        35,
        1,
        3,
        10,
        4,
        4,
        2,
        20,
        4,
        15,
        3,
        30,
        10,
        20,
        2,
        5,
        31,
        20,
        4,
        25,
        2,
        5,
        4,
        1,
        1,
        15,
        4,
        10,
        15,
        5,
        4,
        10,
        3,
        3,
        4,
        1,
        1,
        3,
        4,
        4,
        10,
        4,
        4,
        2,
        10,
        5,
        25,
        15,
        2,
        10,
        5,
        2,
        15,
        35,
        25,
        5,
        2,
        1,
        5,
        25,
        2,
        25,
        4,
        25,
        25,
        4,
        5,
        4,
        4,
        4,
        5,
        4,
        2,
        2,
        20,
        2,
        4,
        2,
        1,
        10,
        2,
        15,
        5,
        2,
        3,
        1,
        1,
        3,
        10,
        4,
        4,
        20,
        1,
        10,
        31,
        5,
        2,
        35,
        3,
        3,
        5,
        1,
        4,
        10,
        1,
        3,
        20,
        3,
        1,
        3,
        5,
        3,
        3,
        20,
        10,
        15,
        5,
        4,
        3,
        25,
        15,
        4,
        2,
        3,
        3,
        1,
        1,
        15,
        20,
        1,
        2,
        3,
        1,
        4,
        3,
        1,
        4,
        2,
        1,
        2,
        30,
        4,
        10,
        5,
        4,
        1,
        3,
        15,
        10,
        25,
        4,
        20,
        2,
        1,
        2,
        1,
        10,
        4,
        3,
        15,
        10,
        2,
        10,
        2,
        15,
        1,
        20,
        2,
        15,
        1,
        5,
        4,
        10,
        5,
        10,
        3,
        15,
        10,
        25,
        3,
        2,
        2,
        3,
        25,
        2,
        31,
        5,
        30,
        1,
        5,
        10,
        1,
        3,
        4,
        15,
        15,
        3,
        3,
        2,
        25,
        35,
        10,
        10,
        10,
        2,
        10,
        4,
        10,
        1,
        25,
        3,
        25,
        3,
        10,
        10,
        1,
        4,
        35,
        4,
        25,
        1,
        5,
        15,
        2,
        15,
        5,
        5,
        5,
        3,
        1,
        2,
        1,
        10,
        15,
        3,
        10,
        20,
        3,
        10,
        2,
        3,
        35,
        5,
        20,
        2,
        25,
        4,
        1,
        1,
        20,
        4,
        10,
        2,
        30,
        2,
        1,
        10,
        25,
        3,
        15,
        4,
        2,
        1,
        10,
        35,
        25,
        4,
        2,
        25,
        10,
        25,
        1,
        30,
        5,
        15,
        5,
        4,
        15,
        3,
        1,
        3,
        1,
        1,
        5,
        25,
        20,
        5,
        25,
        5,
        1,
        1,
        1,
        10,
        2,
        4,
        4,
        5,
        4,
        10,
        2,
        1,
        25,
        15,
        2,
        2,
        10,
        5,
        10,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        1,
        4,
        25,
        3,
        5,
        15,
        4,
        20,
        5,
        1,
        3,
        15,
        3,
        2,
        20,
        4,
        4,
        2,
        3,
        2,
        3,
        20,
        20,
        15,
        2,
        4,
        3,
        1,
        4,
        5,
        4,
        4,
        10,
        10,
        4,
        1,
        4,
        15,
        4,
        1,
        4,
        1,
        10,
        3,
        1,
        25,
        10,
        1,
        2,
        3,
        3,
        25,
        1,
        1,
        10,
        3,
        3,
        3,
        15,
        3,
        10,
        10,
        15,
        5,
        2,
        1,
        4,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        3,
        2,
        5,
        2,
        2,
        2,
        15,
        3,
        10,
        15,
        4,
        5,
        2,
        15,
        3,
        25,
        2,
        4,
        10,
        10,
        31,
        1,
        3,
        1,
        3,
        3,
        1,
        2,
        5,
        2,
        20,
        2,
        2,
        2,
        2,
        10,
        4,
        10,
        2,
        15,
        31,
        3,
        2,
        5,
        1,
        25,
        5,
        2,
        5,
        5,
        25,
        20,
        2,
        2,
        4,
        25,
        2,
        4,
        20,
        10,
        2,
        2,
        5,
        10,
        4,
        2,
        4,
        2,
        1,
        3,
        1,
        2,
        2,
        10,
        15,
        1,
        4,
        4,
        3,
        4,
        15,
        4,
        4,
        2,
        15,
        4,
        10,
        10,
        1,
        3,
        15,
        25,
        3,
        5,
        4,
        20,
        2,
        1,
        2,
        3,
        2,
        2,
        3,
        4,
        2,
        20,
        20,
        1,
        10,
        4,
        3,
        25,
        15,
        10,
        15,
        15,
        3,
        2,
        4,
        3,
        10,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        25,
        4,
        5,
        2,
        10,
        4,
        3,
        5,
        3,
        3,
        5,
        20,
        20,
        1,
        15,
        4,
        20,
        4,
        10,
        3,
        10,
        3,
        20,
        4,
        4,
        4,
        25,
        4,
        1,
        2,
        4,
        20,
        4,
        25,
        3,
        31,
        3,
        5,
        5,
        5,
        5,
        25,
        1,
        10,
        2,
        1,
        4,
        4,
        15,
        4,
        2,
        10,
        5,
        10,
        15,
        3,
        3,
        15,
        5,
        15,
        15,
        15,
        1,
        2,
        31,
        20,
        2,
        2,
        3,
        4,
        1,
        2,
        5,
        15,
        25,
        4,
        4,
        2,
        10,
        3,
        1,
        15,
        2,
        1,
        2,
        4,
        25,
        10,
        20,
        3,
        1,
        4,
        4,
        25,
        5,
        15,
        5,
        4,
        1,
        5,
        30,
        4,
        4,
        35,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        30,
        1,
        20,
        4,
        4,
        4,
        5,
        31,
        10,
        20,
        1,
        2,
        3,
        4,
        2,
        2,
        31,
        4,
        10,
        25,
        15,
        20,
        25,
        3,
        3,
        3,
        1,
        5,
        15,
        15,
        10,
        10,
        10,
        20,
        20,
        4,
        4,
        4,
        1,
        15,
        5,
        15,
        5,
        4,
        10,
        25,
        4,
        3,
        3,
        4,
        15,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        25,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        20,
        10,
        10,
        5,
        30,
        15,
        20,
        20,
        4,
        4,
        2,
        10,
        1,
        20,
        10,
        10,
        5,
        20,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        25,
        3,
        4,
        5,
        1,
        10,
        25,
        2,
        1,
        2,
        30,
        3,
        2,
        2,
        4,
        30,
        3,
        10,
        1,
        30,
        25,
        4,
        5,
        3,
        3,
        10,
        15,
        2,
        15,
        2,
        10,
        2,
        5,
        4,
        2,
        10,
        5,
        10,
        4,
        4,
        15,
        1,
        10,
        5,
        5,
        3,
        4,
        3,
        4,
        20,
        25,
        1,
        4,
        3,
        10,
        15,
        20,
        15,
        3,
        15,
        10,
        3,
        10,
        2,
        2,
        1,
        5,
        5,
        15,
        35,
        3,
        2,
        3,
        1,
        3,
        15,
        2,
        15,
        5,
        4,
        1,
        4,
        3,
        1,
        15,
        1,
        1,
        15,
        25,
        10,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        10,
        5,
        10,
        4,
        20,
        1,
        15,
        2,
        15,
        25,
        2,
        10,
        2,
        15,
        15,
        5,
        25,
        10,
        30,
        15,
        3,
        1,
        4,
        3,
        3,
        25,
        2,
        10,
        2,
        1,
        1,
        10,
        15,
        2,
        2,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        20,
        5,
        1,
        3,
        10,
        3,
        4,
        15,
        35,
        5,
        5,
        1,
        15,
        4,
        3,
        1,
        2,
        4,
        1,
        15,
        1,
        1,
        2,
        30,
        10,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        25,
        10,
        3,
        15,
        4,
        5,
        4,
        15,
        15,
        4,
        5,
        4,
        20,
        15,
        35,
        15,
        4,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        4,
        10,
        1,
        20,
        20,
        35,
        2,
        15,
        20,
        15,
        1,
        4,
        25,
        2,
        15,
        10,
        15,
        1,
        1,
        1,
        2,
        3,
        35,
        3,
        3,
        20,
        5,
        3,
        10,
        3,
        4,
        20,
        30,
        15,
        25,
        3,
        5,
        1,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        15,
        10,
        4,
        2,
        10,
        4,
        1,
        10,
        1,
        5,
        35,
        30,
        2,
        5,
        15,
        20,
        20,
        4,
        15,
        4,
        2,
        20,
        20,
        1,
        10,
        15,
        20,
        5,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        25,
        5,
        1,
        1,
        15,
        2,
        15,
        25,
        15,
        1,
        2,
        15,
        5,
        4,
        2,
        5,
        15,
        1,
        4,
        2,
        3,
        3,
        3,
        3,
        1,
        35,
        4,
        5,
        4,
        3,
        30,
        5,
        4,
        1,
        4,
        10,
        5,
        15,
        35,
        15,
        1,
        1,
        4,
        20,
        5,
        5,
        3,
        25,
        1,
        1,
        4,
        4,
        10,
        10,
        5,
        5,
        10,
        1,
        5,
        1,
        10,
        1,
        3,
        20,
        5,
        5,
        3,
        15,
        3,
        3,
        10,
        5,
        25,
        4,
        5,
        10,
        20,
        35,
        3,
        15,
        20,
        10,
        2,
        2,
        10,
        5,
        15,
        20,
        15,
        4
    ],
    "test_pred_y": [
        35,
        10,
        4,
        15,
        1,
        5,
        4,
        4,
        15,
        2,
        4,
        15,
        5,
        1,
        3,
        5,
        25,
        4,
        5,
        10,
        3,
        31,
        2,
        20,
        4,
        35,
        10,
        4,
        4,
        5,
        3,
        5,
        3,
        3,
        10,
        3,
        1,
        5,
        4,
        3,
        5,
        3,
        3,
        3,
        10,
        15,
        4,
        10,
        3,
        3,
        30,
        2,
        4,
        2,
        5,
        5,
        15,
        5,
        15,
        3,
        5,
        10,
        5,
        5,
        3,
        3,
        3,
        5,
        20,
        1,
        25,
        10,
        4,
        4,
        15,
        1,
        5,
        10,
        3,
        3,
        5,
        4,
        5,
        25,
        3,
        1,
        15,
        4,
        25,
        10,
        25,
        20,
        20,
        2,
        3,
        15,
        3,
        3,
        5,
        10,
        20,
        4,
        2,
        4,
        5,
        15,
        31,
        3,
        35,
        25,
        25,
        3,
        1,
        5,
        15,
        1,
        31,
        10,
        1,
        5,
        15,
        4,
        30,
        1,
        1,
        3,
        5,
        1,
        2,
        1,
        3,
        2,
        3,
        4,
        5,
        3,
        20,
        10,
        2,
        3,
        15,
        10,
        2,
        20,
        15,
        5,
        3,
        2,
        2,
        3,
        2,
        25,
        20,
        5,
        4,
        4,
        30,
        3,
        3,
        25,
        10,
        4,
        2,
        4,
        4,
        10,
        5,
        10,
        4,
        1,
        20,
        3,
        20,
        3,
        2,
        1,
        2,
        4,
        3,
        5,
        10,
        4,
        3,
        10,
        15,
        3,
        1,
        10,
        5,
        15,
        25,
        5,
        1,
        10,
        3,
        10,
        30,
        4,
        1,
        4,
        15,
        1,
        10,
        2,
        15,
        3,
        1,
        4,
        25,
        20,
        10,
        5,
        25,
        15,
        2,
        10,
        3,
        4,
        15,
        20,
        3,
        10,
        35,
        3,
        25,
        31,
        10,
        10,
        2,
        2,
        30,
        5,
        10,
        35,
        20,
        20,
        15,
        3,
        5,
        20,
        5,
        15,
        5,
        1,
        20,
        10,
        5,
        10,
        3,
        2,
        25,
        5,
        20,
        10,
        10,
        3,
        20,
        3,
        2,
        20,
        35,
        1,
        10,
        2,
        20,
        3,
        5,
        2,
        5,
        4,
        5,
        5,
        15,
        10,
        4,
        1,
        2,
        15,
        4,
        5,
        1,
        4,
        20,
        5,
        2,
        3,
        3,
        2,
        5,
        5,
        1,
        4,
        1,
        1,
        5,
        1,
        2,
        4,
        20,
        2,
        4,
        3
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": false,
            "UseContinuousFeatures": true
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "CHIMERGE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": []
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "CHI2",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 75
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    20,
                    10,
                    10
                ],
                "activation": "tanh",
                "solver": "adam",
                "learning_rate": "adaptive",
                "learning_rate_init": 0.1,
                "batch_size": 2000,
                "alpha": 0.001,
                "max_iter": 10000,
                "tol": 0.0001,
                "n_iter_no_change": 20,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "FIT",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "log_loss"
                ],
                "max_depth": {
                    "start": 5,
                    "stop": 25,
                    "step": 2
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 1
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.01,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 50,
                    "stop": 120,
                    "step": 5
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.01,
                    "step": 0.2
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.05,
                    "step": 0.5
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 8,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": [
                        10,
                        15,
                        20,
                        25
                    ]
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.1
                ],
                "batch_size": [
                    2000
                ],
                "alpha": [
                    0.0001,
                    0.001,
                    0.01,
                    0.1
                ],
                "max_iter": [
                    10000
                ],
                "tol": [
                    0.0001
                ],
                "n_iter_no_change": [
                    20
                ]
            }
        }
    }
}