{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.047579298831385675,
                0.03422370617696169,
                0.026711185308848084,
                0.005008347245409106,
                0.025876460767946585,
                0.029215358931552582,
                0.04340567612687818,
                0.0,
                0.0016694490818029983,
                0.015025041736227096
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.047579298831385675
                ],
                [
                    0.03422370617696169
                ],
                [
                    0.026711185308848084
                ],
                [
                    0.005008347245409106
                ],
                [
                    0.025876460767946585
                ],
                [
                    0.029215358931552582
                ],
                [
                    0.04340567612687818
                ],
                [
                    0.0
                ],
                [
                    0.0016694490818029983
                ],
                [
                    0.015025041736227096
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.040138325781064466,
                0.0254948724063927,
                0.02179823515382806,
                0.008394943954208811,
                0.016002861912711053,
                0.010493679942761736,
                0.016455998092058333,
                0.00159790126401127,
                0.0029573098020512223,
                0.008227999046028556
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.040138325781064466
                ],
                [
                    0.0254948724063927
                ],
                [
                    0.02179823515382806
                ],
                [
                    0.008394943954208811
                ],
                [
                    0.016002861912711053
                ],
                [
                    0.010493679942761736
                ],
                [
                    0.016455998092058333
                ],
                [
                    0.00159790126401127
                ],
                [
                    0.0029573098020512223
                ],
                [
                    0.008227999046028556
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.20116861435726213,
                0.17779632721202,
                0.21368948247078468,
                0.08764607679465775,
                0.09432387312186974,
                0.07178631051752926,
                0.07345575959933226,
                0.03422370617696158,
                0.057595993322203665,
                0.04424040066777968
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.20116861435726213
                ],
                [
                    0.17779632721202
                ],
                [
                    0.21368948247078468
                ],
                [
                    0.08764607679465775
                ],
                [
                    0.09432387312186974
                ],
                [
                    0.07178631051752926
                ],
                [
                    0.07345575959933226
                ],
                [
                    0.03422370617696158
                ],
                [
                    0.057595993322203665
                ],
                [
                    0.04424040066777968
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.20563208930515808,
                0.20287740003578741,
                0.1760157072615291,
                0.042491310361050916,
                0.12145812252579663,
                0.08799604482178597,
                0.09972907167703104,
                0.024848484848484675,
                0.042325869848805486,
                0.0719860970145258
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.20563208930515808
                ],
                [
                    0.20287740003578741
                ],
                [
                    0.1760157072615291
                ],
                [
                    0.042491310361050916
                ],
                [
                    0.12145812252579663
                ],
                [
                    0.08799604482178597
                ],
                [
                    0.09972907167703104
                ],
                [
                    0.024848484848484675
                ],
                [
                    0.042325869848805486
                ],
                [
                    0.0719860970145258
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau"
    ],
    "train_accuracies": {
        "threshold": 0.9624373956594324,
        "distance": 0.9729072263295945,
        "exact_accuracy": 0.6928213689482471,
        "balanced_accuracy": 0.5621943030818265
    },
    "train_precision": 0.7001805252751111,
    "train_recall": 0.6928213689482471,
    "test_accuracies": {
        "threshold": 0.9133333333333333,
        "distance": 0.9554285714285713,
        "exact_accuracy": 0.5733333333333334,
        "balanced_accuracy": 0.4938466114781903
    },
    "test_precision": 0.5792522883680379,
    "test_recall": 0.5733333333333334,
    "train_pred_y": [
        5,
        4,
        2,
        4,
        30,
        5,
        5,
        4,
        5,
        25,
        30,
        2,
        25,
        2,
        15,
        25,
        15,
        1,
        35,
        10,
        10,
        30,
        4,
        3,
        10,
        1,
        20,
        10,
        20,
        20,
        25,
        3,
        2,
        3,
        4,
        1,
        15,
        25,
        5,
        15,
        20,
        10,
        10,
        20,
        10,
        4,
        5,
        3,
        4,
        2,
        10,
        4,
        4,
        15,
        4,
        5,
        15,
        1,
        4,
        4,
        10,
        1,
        15,
        20,
        2,
        5,
        20,
        10,
        5,
        4,
        4,
        3,
        20,
        20,
        2,
        1,
        3,
        3,
        4,
        10,
        10,
        10,
        2,
        3,
        15,
        10,
        3,
        4,
        4,
        10,
        35,
        25,
        2,
        10,
        2,
        10,
        2,
        15,
        2,
        4,
        25,
        4,
        5,
        2,
        4,
        5,
        3,
        3,
        1,
        4,
        25,
        15,
        2,
        1,
        10,
        10,
        10,
        5,
        25,
        2,
        4,
        1,
        1,
        1,
        1,
        1,
        5,
        20,
        15,
        35,
        10,
        2,
        2,
        2,
        2,
        20,
        3,
        10,
        10,
        10,
        2,
        35,
        25,
        5,
        4,
        20,
        4,
        2,
        1,
        1,
        2,
        3,
        4,
        10,
        20,
        25,
        10,
        15,
        10,
        4,
        4,
        3,
        15,
        3,
        2,
        2,
        3,
        4,
        30,
        4,
        1,
        2,
        15,
        15,
        4,
        5,
        3,
        15,
        4,
        4,
        4,
        2,
        4,
        4,
        4,
        1,
        3,
        15,
        1,
        4,
        35,
        10,
        1,
        4,
        4,
        5,
        4,
        20,
        15,
        4,
        10,
        1,
        20,
        4,
        5,
        2,
        4,
        4,
        1,
        1,
        15,
        15,
        1,
        25,
        2,
        1,
        4,
        15,
        1,
        2,
        1,
        10,
        25,
        25,
        5,
        30,
        1,
        15,
        4,
        3,
        35,
        1,
        4,
        5,
        3,
        2,
        1,
        15,
        25,
        1,
        2,
        25,
        15,
        20,
        1,
        10,
        10,
        5,
        10,
        15,
        4,
        25,
        25,
        1,
        20,
        4,
        5,
        2,
        10,
        4,
        25,
        1,
        4,
        2,
        15,
        10,
        10,
        15,
        4,
        15,
        4,
        10,
        30,
        4,
        20,
        2,
        10,
        4,
        2,
        30,
        3,
        4,
        1,
        4,
        20,
        1,
        3,
        4,
        4,
        3,
        3,
        4,
        2,
        5,
        25,
        4,
        10,
        15,
        10,
        2,
        3,
        2,
        10,
        3,
        25,
        10,
        3,
        1,
        4,
        20,
        3,
        10,
        1,
        15,
        15,
        2,
        15,
        4,
        4,
        5,
        2,
        1,
        2,
        35,
        20,
        20,
        3,
        20,
        10,
        3,
        25,
        2,
        3,
        35,
        5,
        15,
        2,
        4,
        4,
        1,
        1,
        20,
        10,
        10,
        2,
        20,
        5,
        1,
        10,
        15,
        3,
        10,
        10,
        2,
        1,
        4,
        4,
        25,
        3,
        25,
        15,
        25,
        1,
        3,
        5,
        25,
        20,
        3,
        3,
        1,
        3,
        1,
        1,
        25,
        4,
        15,
        4,
        5,
        10,
        1,
        1,
        2,
        2,
        5,
        4,
        20,
        5,
        20,
        2,
        1,
        10,
        3,
        2,
        2,
        4,
        4,
        5,
        3,
        2,
        15,
        2,
        10,
        3,
        1,
        5,
        25,
        4,
        5,
        20,
        4,
        4,
        4,
        1,
        3,
        20,
        4,
        2,
        10,
        20,
        4,
        25,
        3,
        2,
        3,
        10,
        20,
        25,
        2,
        4,
        4,
        1,
        3,
        5,
        5,
        10,
        4,
        4,
        1,
        4,
        20,
        4,
        1,
        15,
        1,
        4,
        3,
        1,
        3,
        10,
        1,
        2,
        4,
        3,
        2,
        1,
        1,
        15,
        3,
        4,
        3,
        10,
        3,
        10,
        10,
        15,
        25,
        20,
        35,
        5,
        15,
        3,
        10,
        2,
        2,
        1,
        5,
        4,
        2,
        2,
        2,
        2,
        25,
        3,
        10,
        15,
        5,
        5,
        2,
        3,
        3,
        15,
        2,
        5,
        20,
        4,
        3,
        4,
        1,
        3,
        4,
        1,
        2,
        3,
        2,
        3,
        20,
        5,
        1,
        4,
        4,
        5,
        1,
        4,
        4,
        2,
        20,
        2,
        2,
        1,
        2,
        15,
        4,
        10,
        2,
        20,
        20,
        4,
        2,
        25,
        1,
        20,
        5,
        2,
        4,
        4,
        10,
        25,
        2,
        2,
        4,
        20,
        2,
        5,
        15,
        2,
        2,
        10,
        10,
        5,
        2,
        2,
        2,
        1,
        3,
        1,
        2,
        2,
        10,
        10,
        1,
        4,
        4,
        3,
        4,
        10,
        4,
        4,
        2,
        4,
        4,
        15,
        10,
        1,
        4,
        10,
        25,
        3,
        5,
        25,
        2,
        1,
        4,
        3,
        2,
        2,
        3,
        15,
        2,
        5,
        4,
        1,
        30,
        25,
        3,
        25,
        5,
        20,
        30,
        3,
        2,
        4,
        3,
        5,
        5,
        3,
        25,
        10,
        3,
        3,
        10,
        20,
        5,
        25,
        1,
        15,
        4,
        3,
        5,
        3,
        4,
        4,
        15,
        15,
        1,
        10,
        4,
        10,
        35,
        15,
        3,
        20,
        3,
        20,
        4,
        4,
        4,
        25,
        4,
        1,
        2,
        4,
        20,
        4,
        30,
        3,
        10,
        3,
        5,
        5,
        5,
        25,
        1,
        20,
        2,
        1,
        4,
        10,
        4,
        2,
        10,
        5,
        15,
        15,
        3,
        3,
        10,
        25,
        20,
        10,
        1,
        2,
        15,
        20,
        2,
        2,
        3,
        4,
        1,
        2,
        5,
        25,
        10,
        4,
        4,
        2,
        10,
        3,
        1,
        35,
        2,
        1,
        2,
        4,
        25,
        10,
        20,
        3,
        1,
        4,
        4,
        15,
        5,
        30,
        5,
        4,
        1,
        35,
        30,
        4,
        4,
        5,
        4,
        3,
        5,
        3,
        4,
        2,
        15,
        15,
        1,
        25,
        4,
        4,
        4,
        5,
        35,
        10,
        20,
        35,
        20,
        3,
        4,
        2,
        2,
        30,
        4,
        15,
        30,
        4,
        20,
        15,
        3,
        4,
        3,
        1,
        5,
        25,
        25,
        35,
        15,
        10,
        10,
        25,
        4,
        4,
        4,
        20,
        15,
        5,
        20,
        5,
        4,
        20,
        20,
        4,
        3,
        3,
        4,
        10,
        2,
        4,
        10,
        10,
        1,
        10,
        2,
        5,
        3,
        15,
        15,
        1,
        1,
        10,
        1,
        15,
        2,
        10,
        2,
        4,
        5,
        10,
        5,
        5,
        35,
        15,
        15,
        10,
        4,
        4,
        2,
        10,
        1,
        20,
        10,
        5,
        20,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        20,
        3,
        4,
        5,
        1,
        10,
        20,
        2,
        1,
        4,
        25,
        3,
        2,
        2,
        4,
        30,
        3,
        10,
        1,
        20,
        10,
        4,
        5,
        3,
        3,
        10,
        10,
        2,
        15,
        2,
        15,
        2,
        5,
        4,
        2,
        15,
        5,
        10,
        4,
        4,
        10,
        1,
        10,
        5,
        5,
        3,
        4,
        3,
        4,
        20,
        10,
        1,
        4,
        3,
        10,
        15,
        15,
        20,
        3,
        15,
        10,
        3,
        10,
        2,
        4,
        1,
        5,
        5,
        15,
        25,
        3,
        2,
        3,
        1,
        3,
        20,
        2,
        15,
        5,
        4,
        1,
        4,
        1,
        1,
        20,
        1,
        1,
        10,
        25,
        10,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        20,
        5,
        10,
        4,
        15,
        1,
        15,
        1,
        20,
        25,
        2,
        10,
        2,
        15,
        4,
        25,
        10,
        25,
        25,
        3,
        1,
        4,
        3,
        3,
        10,
        2,
        10,
        2,
        1,
        1,
        10,
        15,
        2,
        2,
        10,
        1,
        2,
        4,
        5,
        5,
        3,
        2,
        15,
        5,
        1,
        3,
        15,
        3,
        4,
        10,
        20,
        5,
        5,
        2,
        15,
        4,
        3,
        1,
        2,
        4,
        1,
        15,
        1,
        1,
        2,
        20,
        15,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        10,
        15,
        3,
        25,
        4,
        4,
        4,
        15,
        15,
        4,
        5,
        4,
        20,
        15,
        25,
        20,
        4,
        2,
        5,
        10,
        5,
        10,
        15,
        3,
        4,
        10,
        2,
        10,
        1,
        20,
        15,
        1,
        4,
        30,
        2,
        20,
        15,
        15,
        25,
        15,
        1,
        4,
        25,
        2,
        10,
        20,
        20,
        1,
        1,
        1,
        2,
        3,
        25,
        3,
        3,
        20,
        5,
        3,
        10,
        4,
        4,
        20,
        25,
        15,
        30,
        3,
        4,
        1,
        1,
        5,
        4,
        5,
        20,
        3,
        4,
        10,
        3,
        10,
        20,
        4,
        2,
        10,
        4,
        1,
        10,
        35,
        5,
        25,
        35,
        1,
        5,
        30,
        15,
        20,
        4,
        10,
        4,
        2,
        15,
        20,
        1,
        10,
        15,
        15,
        5,
        10,
        15,
        5,
        3,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        3,
        1,
        5,
        1,
        1,
        10,
        2,
        15,
        20,
        15,
        1,
        2,
        20,
        5,
        4,
        2,
        5,
        15,
        1,
        4,
        2,
        1,
        3,
        3,
        3,
        1,
        25,
        4,
        5,
        4,
        3,
        35,
        5,
        4,
        1,
        4,
        10,
        5,
        15,
        35,
        15,
        1,
        1,
        4,
        15,
        5,
        5,
        3,
        20,
        1,
        1,
        4,
        4,
        10,
        15,
        5,
        5,
        20,
        1,
        5,
        1,
        10,
        1,
        3,
        25,
        5,
        5,
        4,
        10,
        3,
        3,
        10,
        5,
        15,
        4,
        5,
        10,
        15,
        30,
        3,
        20,
        20,
        10,
        2,
        2,
        10,
        5,
        15,
        20,
        15,
        4,
        1,
        1,
        5,
        25,
        1,
        1
    ],
    "test_pred_y": [
        3,
        5,
        15,
        25,
        5,
        3,
        3,
        4,
        4,
        4,
        2,
        25,
        15,
        1,
        35,
        5,
        4,
        10,
        4,
        2,
        5,
        10,
        3,
        1,
        15,
        1,
        2,
        2,
        5,
        4,
        5,
        25,
        15,
        10,
        5,
        4,
        20,
        4,
        4,
        15,
        4,
        4,
        2,
        1,
        2,
        3,
        4,
        15,
        2,
        10,
        3,
        10,
        4,
        10,
        4,
        4,
        4,
        15,
        15,
        1,
        5,
        3,
        4,
        10,
        15,
        3,
        3,
        35,
        3,
        1,
        20,
        3,
        3,
        30,
        1,
        10,
        10,
        20,
        25,
        20,
        2,
        10,
        2,
        3,
        2,
        10,
        5,
        2,
        1,
        1,
        4,
        1,
        25,
        2,
        10,
        4,
        1,
        20,
        20,
        20,
        4,
        4,
        2,
        15,
        5,
        20,
        5,
        5,
        4,
        5,
        25,
        25,
        15,
        15,
        5,
        1,
        1,
        35,
        5,
        5,
        3,
        2,
        5,
        1,
        30,
        2,
        25,
        3,
        2,
        20,
        20,
        4,
        15,
        2,
        2,
        5,
        4,
        4,
        1,
        25,
        20,
        4,
        25,
        1,
        15,
        3,
        10,
        25,
        1,
        1,
        2,
        4,
        3,
        4,
        4,
        4,
        3,
        15,
        20,
        2,
        1,
        4,
        5,
        25,
        20,
        4,
        1,
        15,
        3,
        10,
        10,
        4,
        1,
        4,
        5,
        1,
        20,
        2,
        3,
        1,
        4,
        15,
        4,
        5,
        35,
        10,
        1,
        10,
        15,
        20,
        10,
        3,
        10,
        25,
        2,
        10,
        25,
        10,
        1,
        2,
        10,
        5,
        10,
        20,
        15,
        15,
        10,
        3,
        5,
        25,
        4,
        10,
        30,
        1,
        15,
        20,
        5,
        15,
        3,
        2,
        25,
        5,
        15,
        3,
        3,
        1,
        3,
        1,
        10,
        5,
        3,
        10,
        1,
        4,
        20,
        1,
        1,
        4,
        2,
        10,
        2,
        3,
        4,
        4,
        3,
        5,
        4,
        3,
        5,
        5,
        15,
        30,
        15,
        2,
        4,
        4,
        1,
        2,
        15,
        4,
        10,
        1,
        4,
        15,
        5,
        1,
        2,
        3,
        1,
        4,
        4,
        1,
        4,
        1,
        1,
        5,
        1,
        2,
        4,
        20,
        2,
        4,
        2,
        15,
        10,
        15,
        4,
        10,
        2,
        25,
        3,
        10,
        15,
        25,
        15,
        20,
        5,
        3,
        10,
        3
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": false,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "AVF",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "NONE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "RANDOM_FOREST",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "FIT",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFE": {
                "n_features_to_select": null,
                "step": 1
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": true,
            "plot_roc_curves": true,
            "plot_feature_importance": true,
            "plot_tree": true,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 5,
                    "step": 1
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 5,
                    "step": 1
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 1
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.01
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.01
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 10
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "start": 2,
                        "stop": 25,
                        "step": 10
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.0001
                },
                "max_iter": {
                    "start": 1000,
                    "stop": 10000,
                    "step": 1000
                },
                "tol": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.0001
                }
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 0,
                        "high": 1,
                        "size": 10
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 10
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 10
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 10
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "low": 2,
                        "high": 10,
                        "size": 2
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant",
                    "adaptive"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 100
                    }
                },
                "max_iter": [
                    1000
                ],
                "tol": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 100
                    }
                }
            }
        }
    }
}