{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.04482758620689653,
                0.04741379310344829,
                0.02155172413793105,
                0.08793103448275863,
                0.04137931034482756,
                0.04482758620689653,
                0.028448275862068995,
                0.009482758620689702,
                0.08017241379310347,
                0.0008620689655172153,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.04482758620689653
                ],
                [
                    0.04741379310344829
                ],
                [
                    0.02155172413793105
                ],
                [
                    0.08793103448275863
                ],
                [
                    0.04137931034482756
                ],
                [
                    0.04482758620689653
                ],
                [
                    0.028448275862068995
                ],
                [
                    0.009482758620689702
                ],
                [
                    0.08017241379310347
                ],
                [
                    0.0008620689655172153
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.028694581280788167,
                0.020073891625616347,
                0.020837438423644716,
                0.08147783251231766,
                0.019334975369458274,
                0.017980295566503046,
                0.020123152709360048,
                0.02017241379310397,
                0.039729064039409234,
                0.0022660098522166994,
                0.0020197044334977488,
                0.0006403940886701154,
                0.0006403940886698933,
                4.9261083743701306e-05,
                0.00029556650246287397,
                0.0007142857142855563,
                2.4630541871961675e-05
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.028694581280788167
                ],
                [
                    0.020073891625616347
                ],
                [
                    0.020837438423644716
                ],
                [
                    0.08147783251231766
                ],
                [
                    0.019334975369458274
                ],
                [
                    0.017980295566503046
                ],
                [
                    0.020123152709360048
                ],
                [
                    0.02017241379310397
                ],
                [
                    0.039729064039409234
                ],
                [
                    0.0022660098522166994
                ],
                [
                    0.0020197044334977488
                ],
                [
                    0.0006403940886701154
                ],
                [
                    0.0006403940886698933
                ],
                [
                    4.9261083743701306e-05
                ],
                [
                    0.00029556650246287397
                ],
                [
                    0.0007142857142855563
                ],
                [
                    2.4630541871961675e-05
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.13706896551724135,
                0.14741379310344827,
                0.21120689655172414,
                0.22844827586206895,
                0.09310344827586203,
                0.1103448275862069,
                0.07586206896551728,
                0.07758620689655171,
                0.08793103448275863,
                0.026724137931034453,
                0.037931034482758585,
                0.010344827586206917,
                0.008620689655172376,
                0.0017241379310344307,
                0.0060344827586207295,
                0.017241379310344862,
                0.0008620689655172153
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.13706896551724135
                ],
                [
                    0.14741379310344827
                ],
                [
                    0.21120689655172414
                ],
                [
                    0.22844827586206895
                ],
                [
                    0.09310344827586203
                ],
                [
                    0.1103448275862069
                ],
                [
                    0.07586206896551728
                ],
                [
                    0.07758620689655171
                ],
                [
                    0.08793103448275863
                ],
                [
                    0.026724137931034453
                ],
                [
                    0.037931034482758585
                ],
                [
                    0.010344827586206917
                ],
                [
                    0.008620689655172376
                ],
                [
                    0.0017241379310344307
                ],
                [
                    0.0060344827586207295
                ],
                [
                    0.017241379310344862
                ],
                [
                    0.0008620689655172153
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.14055612397740036,
                0.15560742147879386,
                0.22125494525144285,
                0.25004936000951355,
                0.16948165878547178,
                0.17451093344690116,
                0.1365957669432019,
                0.07231004182983736,
                0.19560545616419267,
                0.02311464700633592,
                0.028151468461327656,
                0.007927939384679727,
                0.006498321625082237,
                0.0011943569690048284,
                0.004271172842601478,
                0.012489029571524646,
                0.000606060606060721
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.14055612397740036
                ],
                [
                    0.15560742147879386
                ],
                [
                    0.22125494525144285
                ],
                [
                    0.25004936000951355
                ],
                [
                    0.16948165878547178
                ],
                [
                    0.17451093344690116
                ],
                [
                    0.1365957669432019
                ],
                [
                    0.07231004182983736
                ],
                [
                    0.19560545616419267
                ],
                [
                    0.02311464700633592
                ],
                [
                    0.028151468461327656
                ],
                [
                    0.007927939384679727
                ],
                [
                    0.006498321625082237
                ],
                [
                    0.0011943569690048284
                ],
                [
                    0.004271172842601478
                ],
                [
                    0.012489029571524646
                ],
                [
                    0.000606060606060721
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.9482758620689655,
        "distance": 0.964162561576353,
        "exact_accuracy": 0.6508620689655172,
        "balanced_accuracy": 0.5751781500992426
    },
    "train_precision": 0.6534228450570548,
    "train_recall": 0.6508620689655172,
    "test_accuracies": {
        "threshold": 0.9310344827586207,
        "distance": 0.9565517241379303,
        "exact_accuracy": 0.603448275862069,
        "balanced_accuracy": 0.5281446397648744
    },
    "test_precision": 0.6013200951821641,
    "test_recall": 0.603448275862069,
    "train_pred_y": [
        5,
        15,
        5,
        3,
        5,
        10,
        10,
        3,
        10,
        5,
        20,
        15,
        4,
        4,
        15,
        31,
        4,
        10,
        4,
        5,
        1,
        5,
        4,
        3,
        25,
        3,
        20,
        15,
        20,
        20,
        1,
        25,
        15,
        25,
        3,
        3,
        3,
        4,
        3,
        31,
        3,
        15,
        4,
        20,
        3,
        4,
        1,
        3,
        1,
        5,
        15,
        15,
        3,
        20,
        1,
        5,
        25,
        5,
        35,
        1,
        5,
        4,
        2,
        4,
        20,
        5,
        4,
        15,
        5,
        3,
        10,
        5,
        5,
        3,
        15,
        20,
        2,
        25,
        1,
        1,
        15,
        1,
        15,
        10,
        15,
        5,
        3,
        25,
        25,
        3,
        2,
        5,
        1,
        1,
        5,
        25,
        15,
        25,
        1,
        4,
        15,
        1,
        20,
        3,
        2,
        10,
        10,
        20,
        1,
        1,
        3,
        10,
        25,
        15,
        1,
        5,
        3,
        1,
        4,
        1,
        1,
        4,
        1,
        1,
        5,
        5,
        1,
        10,
        25,
        5,
        20,
        10,
        15,
        5,
        1,
        1,
        5,
        1,
        25,
        1,
        25,
        4,
        15,
        1,
        1,
        5,
        25,
        1,
        10,
        25,
        10,
        25,
        3,
        2,
        4,
        5,
        5,
        20,
        4,
        25,
        5,
        1,
        15,
        1,
        35,
        5,
        4,
        1,
        15,
        20,
        15,
        4,
        25,
        1,
        2,
        5,
        10,
        10,
        2,
        4,
        5,
        5,
        1,
        1,
        20,
        30,
        25,
        3,
        25,
        2,
        1,
        15,
        10,
        1,
        15,
        5,
        2,
        15,
        3,
        5,
        35,
        1,
        15,
        1,
        10,
        10,
        4,
        20,
        1,
        5,
        15,
        2,
        10,
        15,
        15,
        25,
        10,
        5,
        10,
        15,
        5,
        4,
        2,
        4,
        5,
        10,
        3,
        20,
        5,
        1,
        3,
        15,
        4,
        30,
        15,
        5,
        10,
        2,
        5,
        2,
        3,
        25,
        5,
        5,
        5,
        1,
        1,
        25,
        2,
        25,
        15,
        1,
        3,
        10,
        10,
        20,
        10,
        10,
        3,
        5,
        10,
        15,
        10,
        2,
        5,
        1,
        1,
        15,
        25,
        3,
        10,
        10,
        1,
        5,
        10,
        3,
        5,
        3,
        25,
        25,
        25,
        10,
        5,
        1,
        5,
        5,
        5,
        5,
        15,
        1,
        5,
        1,
        25,
        3,
        3,
        3,
        15,
        5,
        5,
        1,
        1,
        20,
        5,
        5,
        5,
        1,
        1,
        20,
        3,
        1,
        1,
        10,
        5,
        2,
        5,
        3,
        5,
        20,
        15,
        3,
        4,
        10,
        15,
        5,
        15,
        1,
        2,
        4,
        5,
        15,
        15,
        5,
        4,
        4,
        5,
        1,
        10,
        10,
        10,
        1,
        3,
        5,
        1,
        4,
        25,
        25,
        5,
        10,
        1,
        4,
        10,
        1,
        15,
        1,
        15,
        3,
        1,
        35,
        1,
        1,
        1,
        1,
        1,
        20,
        3,
        15,
        2,
        5,
        2,
        3,
        30,
        5,
        1,
        5,
        3,
        1,
        3,
        4,
        5,
        4,
        2,
        1,
        10,
        2,
        4,
        10,
        3,
        1,
        5,
        25,
        1,
        20,
        10,
        15,
        3,
        4,
        1,
        1,
        1,
        20,
        2,
        10,
        5,
        1,
        25,
        3,
        5,
        3,
        5,
        5,
        4,
        15,
        15,
        3,
        10,
        25,
        25,
        5,
        25,
        4,
        3,
        25,
        20,
        1,
        10,
        3,
        5,
        5,
        25,
        2,
        1,
        20,
        10,
        2,
        4,
        1,
        5,
        10,
        5,
        5,
        5,
        1,
        5,
        3,
        10,
        5,
        35,
        3,
        10,
        3,
        4,
        10,
        2,
        3,
        4,
        15,
        25,
        1,
        35,
        5,
        31,
        2,
        2,
        1,
        1,
        20,
        5,
        4,
        5,
        2,
        15,
        2,
        25,
        2,
        5,
        1,
        10,
        20,
        4,
        1,
        1,
        1,
        3,
        15,
        10,
        2,
        1,
        1,
        30,
        1,
        5,
        1,
        1,
        2,
        2,
        2,
        3,
        5,
        15,
        4,
        1,
        1,
        4,
        3,
        1,
        2,
        1,
        10,
        5,
        5,
        10,
        2,
        1,
        5,
        10,
        25,
        20,
        25,
        1,
        25,
        15,
        2,
        1,
        2,
        3,
        5,
        2,
        3,
        2,
        1,
        10,
        25,
        1,
        25,
        10,
        10,
        10,
        3,
        1,
        20,
        15,
        10,
        3,
        5,
        4,
        4,
        10,
        25,
        5,
        1,
        10,
        3,
        3,
        5,
        3,
        2,
        4,
        1,
        25,
        4,
        5,
        10,
        4,
        10,
        4,
        4,
        2,
        10,
        4,
        3,
        2,
        25,
        4,
        20,
        3,
        4,
        3,
        3,
        1,
        10,
        3,
        1,
        5,
        20,
        3,
        1,
        10,
        10,
        20,
        5,
        3,
        5,
        10,
        20,
        15,
        1,
        1,
        5,
        10,
        2,
        2,
        1,
        4,
        1,
        3,
        5,
        10,
        20,
        15,
        4,
        2,
        10,
        2,
        1,
        25,
        1,
        1,
        5,
        5,
        20,
        20,
        3,
        1,
        35,
        4,
        10,
        5,
        3,
        1,
        15,
        4,
        5,
        20,
        5,
        3,
        2,
        3,
        2,
        5,
        1,
        5,
        15,
        5,
        10,
        10,
        35,
        31,
        1,
        20,
        25,
        5,
        5,
        10,
        5,
        5,
        5,
        25,
        1,
        10,
        10,
        10,
        5,
        15,
        15,
        3,
        4,
        5,
        10,
        15,
        5,
        10,
        15,
        20,
        3,
        2,
        5,
        5,
        10,
        2,
        3,
        15,
        20,
        1,
        2,
        1,
        10,
        10,
        1,
        1,
        10,
        1,
        10,
        1,
        10,
        5,
        25,
        10,
        4,
        5,
        10,
        15,
        15,
        3,
        4,
        2,
        2,
        20,
        4,
        15,
        5,
        5,
        25,
        4,
        1,
        4,
        2,
        15,
        3,
        5,
        4,
        1,
        20,
        2,
        1,
        5,
        5,
        5,
        4,
        5,
        25,
        20,
        1,
        20,
        15,
        10,
        5,
        3,
        3,
        10,
        2,
        20,
        2,
        15,
        25,
        5,
        4,
        2,
        10,
        4,
        4,
        3,
        1,
        10,
        5,
        3,
        5,
        2,
        3,
        15,
        10,
        1,
        4,
        1,
        15,
        15,
        4,
        10,
        10,
        3,
        35,
        2,
        3,
        1,
        4,
        15,
        20,
        15,
        4,
        15,
        3,
        1,
        2,
        20,
        2,
        15,
        5,
        20,
        3,
        3,
        1,
        1,
        15,
        1,
        1,
        25,
        30,
        5,
        1,
        10,
        3,
        3,
        5,
        15,
        15,
        2,
        15,
        2,
        20,
        2,
        10,
        2,
        1,
        10,
        5,
        20,
        10,
        10,
        25,
        5,
        1,
        20,
        3,
        2,
        20,
        2,
        10,
        5,
        3,
        20,
        1,
        3,
        1,
        2,
        5,
        25,
        5,
        2,
        2,
        15,
        5,
        1,
        4,
        5,
        5,
        5,
        5,
        10,
        4,
        3,
        1,
        3,
        5,
        2,
        1,
        1,
        2,
        25,
        3,
        1,
        5,
        1,
        1,
        5,
        10,
        15,
        4,
        25,
        3,
        4,
        3,
        25,
        3,
        10,
        4,
        15,
        25,
        2,
        2,
        4,
        10,
        5,
        15,
        35,
        4,
        10,
        3,
        10,
        1,
        15,
        1,
        5,
        25,
        1,
        25,
        15,
        1,
        10,
        25,
        35,
        1,
        3,
        25,
        25,
        25,
        15,
        5,
        15,
        1,
        1,
        2,
        1,
        2,
        3,
        25,
        2,
        25,
        20,
        31,
        35,
        3,
        5,
        3,
        5,
        30,
        10,
        5,
        4,
        4,
        2,
        15,
        31,
        10,
        3,
        31,
        5,
        25,
        5,
        2,
        25,
        4,
        10,
        1,
        5,
        5,
        5,
        1,
        1,
        10,
        3,
        5,
        1,
        31,
        4,
        15,
        10,
        3,
        20,
        1,
        15,
        5,
        35,
        1,
        20,
        25,
        2,
        15,
        1,
        3,
        20,
        4,
        1,
        15,
        25,
        5,
        25,
        25,
        3,
        1,
        3,
        3,
        5,
        3,
        20,
        15,
        20,
        25,
        1,
        3,
        20,
        1,
        20,
        5,
        15,
        20,
        5,
        15,
        31,
        3,
        35,
        3,
        1,
        10,
        20,
        5,
        10,
        10,
        15,
        1,
        10,
        4,
        10,
        3,
        5,
        4,
        10,
        10,
        1,
        2,
        5,
        20,
        20,
        4,
        4,
        5,
        3,
        2,
        10,
        1,
        2,
        25,
        2,
        15,
        25,
        15,
        2,
        1,
        10,
        5,
        5,
        5,
        20,
        2,
        5,
        3,
        3,
        1,
        2,
        2,
        3,
        20,
        5,
        5,
        5,
        4,
        30,
        5,
        3,
        1,
        4,
        10,
        5,
        15,
        15,
        1,
        1,
        5,
        20,
        10,
        30,
        3,
        1,
        1,
        3,
        35,
        15,
        10,
        5,
        4,
        10,
        1,
        10,
        1,
        10,
        1,
        3,
        5,
        5,
        5,
        20,
        1,
        3,
        31,
        4,
        5,
        5,
        10,
        15,
        4,
        20,
        25,
        10,
        1,
        25,
        15,
        5,
        15,
        20,
        15,
        5,
        1,
        1,
        5,
        25,
        1,
        3,
        5,
        5,
        3,
        20,
        10,
        15,
        15,
        35,
        5,
        1,
        35,
        35,
        5,
        10,
        1,
        5,
        1,
        10,
        5,
        15,
        10,
        1,
        31,
        25,
        35,
        2,
        10,
        10,
        5,
        20,
        35,
        15,
        10,
        1,
        5,
        1,
        1,
        1,
        3,
        10,
        15,
        3,
        1,
        3,
        4
    ],
    "test_pred_y": [
        15,
        25,
        20,
        5,
        10,
        20,
        3,
        5,
        3,
        4,
        5,
        35,
        4,
        1,
        1,
        1,
        2,
        1,
        10,
        10,
        10,
        3,
        1,
        4,
        2,
        3,
        10,
        10,
        3,
        1,
        15,
        2,
        3,
        5,
        20,
        25,
        25,
        2,
        4,
        5,
        3,
        20,
        3,
        2,
        25,
        2,
        1,
        4,
        1,
        20,
        4,
        1,
        10,
        5,
        15,
        35,
        5,
        10,
        2,
        1,
        2,
        5,
        4,
        20,
        5,
        25,
        15,
        1,
        4,
        3,
        1,
        4,
        5,
        25,
        10,
        4,
        2,
        30,
        4,
        5,
        5,
        3,
        3,
        15,
        3,
        15,
        4,
        3,
        2,
        5,
        15,
        30,
        3,
        1,
        1,
        15,
        20,
        1,
        5,
        31,
        15,
        25,
        5,
        5,
        3,
        35,
        1,
        5,
        1,
        10,
        25,
        2,
        10,
        5,
        10,
        4,
        30,
        15,
        25,
        10,
        2,
        3,
        10,
        5,
        5,
        10,
        1,
        3,
        30,
        1,
        25,
        5,
        1,
        25,
        20,
        10,
        30,
        25,
        4,
        10,
        15,
        3,
        25,
        25,
        5,
        4,
        5,
        1,
        15,
        15,
        5,
        15,
        2,
        10,
        1,
        4,
        5,
        15,
        25,
        15,
        20,
        25,
        5,
        1,
        10,
        4,
        20,
        3,
        20,
        2,
        3,
        1,
        3,
        4,
        4,
        10,
        10,
        3,
        1,
        1,
        1,
        10,
        1,
        10,
        10,
        25,
        10,
        3,
        4,
        25,
        3,
        1,
        25,
        5,
        25,
        4,
        1,
        3,
        15,
        1,
        4,
        5,
        25,
        1,
        20,
        2,
        10,
        2,
        4,
        5,
        3,
        4,
        5,
        5,
        1,
        3,
        1,
        10,
        1,
        25,
        3,
        15,
        4,
        2,
        5,
        1,
        10,
        15,
        3,
        1,
        1,
        15,
        25,
        5,
        5,
        15,
        2,
        15,
        1,
        3,
        10,
        10,
        25,
        5,
        25,
        1,
        3,
        5,
        5,
        1,
        15,
        1,
        2,
        15,
        5,
        3,
        5,
        10,
        3,
        5,
        15,
        20,
        10,
        25,
        3,
        10,
        15,
        5,
        1,
        1,
        10,
        1,
        1,
        5,
        3,
        1,
        5,
        3,
        3,
        2,
        10,
        1,
        10,
        15,
        1,
        2,
        35,
        5,
        25,
        1
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "DECISION_TREE",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "CROSS_VALIDATION",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": true,
            "plot_roc_curves": true,
            "plot_feature_importance": true,
            "plot_tree": true,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 25,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.02
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.05
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "start": 2,
                        "stop": 25,
                        "step": 10
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                },
                "max_iter": {
                    "start": 1000,
                    "stop": 10000,
                    "step": 1000
                },
                "tol": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                }
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "low": 2,
                        "high": 25,
                        "size": 100
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                },
                "max_iter": [
                    1000
                ],
                "tol": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                }
            }
        }
    }
}