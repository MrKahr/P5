{
    "GridSearchCV_BestParams": {
        "ccp_alpha": 0.0,
        "criterion": "log_loss",
        "max_depth": 8,
        "max_features": "sqrt",
        "max_leaf_nodes": 50,
        "min_impurity_decrease": 0.0,
        "min_samples_leaf": 3,
        "min_samples_split": 7,
        "min_weight_fraction_leaf": 0.0
    },
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.009482758620689702,
                0.05086206896551726,
                0.014655172413793105,
                0.08189655172413801,
                0.04568965517241386,
                0.02155172413793105,
                0.036206896551724155,
                0.0,
                0.05431034482758623,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.009482758620689702
                ],
                [
                    0.05086206896551726
                ],
                [
                    0.014655172413793105
                ],
                [
                    0.08189655172413801
                ],
                [
                    0.04568965517241386
                ],
                [
                    0.02155172413793105
                ],
                [
                    0.036206896551724155
                ],
                [
                    0.0
                ],
                [
                    0.05431034482758623
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.013472906403940499,
                0.030911330049262276,
                0.01214285714285801,
                0.07827586206896531,
                0.02940886699507428,
                0.007216748768473336,
                0.017635467980295694,
                0.0012068965517236796,
                0.026280788177340253,
                0.001354679802956782,
                0.000517241379310307,
                0.00014778325123132596,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.013472906403940499
                ],
                [
                    0.030911330049262276
                ],
                [
                    0.01214285714285801
                ],
                [
                    0.07827586206896531
                ],
                [
                    0.02940886699507428
                ],
                [
                    0.007216748768473336
                ],
                [
                    0.017635467980295694
                ],
                [
                    0.0012068965517236796
                ],
                [
                    0.026280788177340253
                ],
                [
                    0.001354679802956782
                ],
                [
                    0.000517241379310307
                ],
                [
                    0.00014778325123132596
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.08362068965517244,
                0.14913793103448275,
                0.1129310344827586,
                0.2232758620689655,
                0.08448275862068966,
                0.06982758620689655,
                0.0767241379310345,
                0.02931034482758621,
                0.028448275862068995,
                0.0431034482758621,
                0.002586206896551757,
                0.005172413793103403,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.08362068965517244
                ],
                [
                    0.14913793103448275
                ],
                [
                    0.1129310344827586
                ],
                [
                    0.2232758620689655
                ],
                [
                    0.08448275862068966
                ],
                [
                    0.06982758620689655
                ],
                [
                    0.0767241379310345
                ],
                [
                    0.02931034482758621
                ],
                [
                    0.028448275862068995
                ],
                [
                    0.0431034482758621
                ],
                [
                    0.002586206896551757
                ],
                [
                    0.005172413793103403
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.08828134690448464,
                0.20716524380391765,
                0.1490643377084091,
                0.2505258107873531,
                0.15999025265842098,
                0.09402757187346605,
                0.07234628079200423,
                0.020924541045265366,
                0.13806818181818187,
                0.030063904349618753,
                0.0018744780998301014,
                0.0038630048690411756,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.08828134690448464
                ],
                [
                    0.20716524380391765
                ],
                [
                    0.1490643377084091
                ],
                [
                    0.2505258107873531
                ],
                [
                    0.15999025265842098
                ],
                [
                    0.09402757187346605
                ],
                [
                    0.07234628079200423
                ],
                [
                    0.020924541045265366
                ],
                [
                    0.13806818181818187
                ],
                [
                    0.030063904349618753
                ],
                [
                    0.0018744780998301014
                ],
                [
                    0.0038630048690411756
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ],
                [
                    0.0
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Infektionsniveau",
        "Eksudattype_0.0",
        "Eksudattype_1.0",
        "Eksudattype_2.0",
        "Eksudattype_3.0",
        "Eksudattype_4.0",
        "Eksudattype_5.0",
        "Eksudattype_6.0",
        "Eksudattype_7.0"
    ],
    "train_accuracies": {
        "threshold": 0.928448275862069,
        "distance": 0.9534975369458107,
        "exact_accuracy": 0.5698275862068966,
        "balanced_accuracy": 0.49780989891462024
    },
    "train_precision": 0.5834854406174602,
    "train_recall": 0.5698275862068966,
    "test_accuracies": {
        "threshold": 0.9551724137931035,
        "distance": 0.9587192118226593,
        "exact_accuracy": 0.5724137931034483,
        "balanced_accuracy": 0.48233461977481124
    },
    "test_precision": 0.5686937567277845,
    "test_recall": 0.5724137931034483,
    "train_pred_y": [
        4,
        10,
        5,
        2,
        5,
        10,
        10,
        2,
        10,
        5,
        20,
        15,
        2,
        5,
        15,
        31,
        5,
        10,
        2,
        5,
        1,
        5,
        5,
        2,
        20,
        3,
        20,
        10,
        20,
        20,
        1,
        25,
        15,
        25,
        2,
        3,
        3,
        3,
        5,
        31,
        3,
        15,
        4,
        15,
        2,
        5,
        1,
        2,
        1,
        5,
        15,
        20,
        3,
        20,
        1,
        5,
        25,
        5,
        35,
        1,
        5,
        5,
        1,
        5,
        20,
        5,
        5,
        10,
        5,
        3,
        10,
        5,
        5,
        3,
        15,
        20,
        2,
        25,
        2,
        1,
        15,
        1,
        15,
        10,
        15,
        5,
        3,
        31,
        20,
        2,
        1,
        5,
        1,
        1,
        5,
        20,
        15,
        5,
        1,
        4,
        15,
        1,
        20,
        3,
        2,
        20,
        10,
        20,
        1,
        1,
        2,
        10,
        20,
        15,
        1,
        20,
        3,
        1,
        5,
        1,
        1,
        5,
        1,
        1,
        5,
        5,
        1,
        10,
        25,
        5,
        20,
        10,
        15,
        5,
        1,
        1,
        5,
        1,
        25,
        1,
        25,
        5,
        15,
        1,
        1,
        5,
        25,
        1,
        10,
        25,
        10,
        25,
        3,
        1,
        5,
        5,
        5,
        20,
        4,
        25,
        5,
        1,
        15,
        1,
        35,
        5,
        5,
        1,
        15,
        10,
        10,
        4,
        25,
        1,
        2,
        5,
        10,
        10,
        2,
        5,
        5,
        5,
        1,
        1,
        20,
        25,
        20,
        3,
        25,
        2,
        1,
        15,
        10,
        1,
        15,
        5,
        2,
        15,
        2,
        5,
        35,
        1,
        15,
        1,
        10,
        10,
        4,
        20,
        1,
        5,
        15,
        2,
        10,
        15,
        4,
        25,
        10,
        5,
        15,
        15,
        5,
        5,
        1,
        5,
        5,
        10,
        5,
        20,
        5,
        1,
        2,
        15,
        5,
        25,
        15,
        5,
        10,
        2,
        5,
        2,
        2,
        25,
        5,
        5,
        5,
        1,
        1,
        20,
        3,
        25,
        25,
        1,
        3,
        10,
        10,
        20,
        10,
        10,
        5,
        5,
        10,
        10,
        10,
        2,
        5,
        1,
        1,
        10,
        20,
        2,
        10,
        10,
        1,
        5,
        10,
        3,
        5,
        3,
        25,
        20,
        25,
        10,
        5,
        1,
        5,
        5,
        5,
        5,
        15,
        1,
        5,
        1,
        25,
        2,
        3,
        3,
        15,
        5,
        5,
        1,
        1,
        20,
        5,
        5,
        5,
        2,
        2,
        10,
        2,
        1,
        1,
        10,
        5,
        2,
        5,
        2,
        5,
        20,
        15,
        5,
        5,
        10,
        10,
        5,
        25,
        1,
        2,
        4,
        5,
        15,
        15,
        5,
        2,
        4,
        5,
        1,
        10,
        10,
        10,
        1,
        5,
        5,
        1,
        5,
        25,
        25,
        5,
        10,
        2,
        5,
        10,
        1,
        15,
        1,
        15,
        3,
        1,
        35,
        1,
        1,
        1,
        1,
        1,
        20,
        2,
        15,
        2,
        5,
        2,
        2,
        25,
        5,
        1,
        5,
        2,
        1,
        2,
        5,
        5,
        3,
        2,
        2,
        10,
        2,
        5,
        10,
        2,
        1,
        5,
        20,
        1,
        20,
        10,
        15,
        3,
        4,
        1,
        1,
        1,
        20,
        2,
        10,
        5,
        1,
        31,
        3,
        5,
        3,
        5,
        2,
        3,
        15,
        15,
        2,
        10,
        10,
        25,
        5,
        31,
        5,
        5,
        20,
        20,
        1,
        10,
        3,
        5,
        5,
        25,
        2,
        1,
        10,
        10,
        2,
        5,
        1,
        5,
        10,
        5,
        5,
        5,
        1,
        5,
        2,
        10,
        5,
        35,
        2,
        10,
        3,
        3,
        10,
        1,
        3,
        4,
        15,
        25,
        1,
        35,
        5,
        31,
        2,
        2,
        1,
        1,
        20,
        5,
        5,
        5,
        2,
        15,
        2,
        31,
        1,
        20,
        1,
        10,
        20,
        2,
        1,
        1,
        1,
        2,
        15,
        20,
        2,
        1,
        1,
        25,
        1,
        10,
        1,
        1,
        2,
        2,
        2,
        2,
        5,
        15,
        4,
        1,
        1,
        5,
        2,
        1,
        2,
        1,
        20,
        5,
        5,
        10,
        2,
        1,
        5,
        10,
        25,
        10,
        25,
        1,
        25,
        15,
        2,
        1,
        2,
        3,
        5,
        1,
        3,
        2,
        1,
        10,
        25,
        1,
        25,
        10,
        10,
        10,
        5,
        1,
        31,
        15,
        10,
        3,
        5,
        3,
        5,
        10,
        25,
        5,
        1,
        10,
        3,
        3,
        5,
        2,
        2,
        1,
        1,
        25,
        5,
        5,
        10,
        5,
        10,
        4,
        5,
        3,
        25,
        2,
        1,
        2,
        20,
        2,
        20,
        3,
        5,
        5,
        3,
        1,
        10,
        2,
        1,
        5,
        20,
        3,
        2,
        10,
        1,
        20,
        5,
        2,
        5,
        10,
        20,
        15,
        1,
        1,
        5,
        10,
        2,
        2,
        1,
        5,
        1,
        3,
        5,
        10,
        5,
        15,
        4,
        2,
        10,
        2,
        1,
        25,
        1,
        1,
        5,
        5,
        20,
        25,
        5,
        1,
        35,
        4,
        10,
        5,
        3,
        1,
        15,
        4,
        5,
        20,
        5,
        1,
        2,
        3,
        2,
        5,
        1,
        5,
        15,
        5,
        10,
        10,
        35,
        31,
        1,
        20,
        5,
        5,
        5,
        10,
        5,
        5,
        5,
        20,
        1,
        10,
        10,
        10,
        5,
        15,
        15,
        2,
        5,
        5,
        10,
        10,
        5,
        10,
        15,
        20,
        3,
        2,
        5,
        5,
        10,
        3,
        2,
        15,
        20,
        1,
        1,
        1,
        10,
        5,
        1,
        1,
        5,
        1,
        10,
        2,
        10,
        5,
        20,
        10,
        5,
        4,
        4,
        10,
        15,
        2,
        5,
        1,
        2,
        20,
        5,
        15,
        5,
        5,
        20,
        5,
        1,
        5,
        2,
        15,
        2,
        5,
        3,
        1,
        20,
        1,
        1,
        5,
        5,
        5,
        3,
        5,
        25,
        20,
        1,
        20,
        15,
        10,
        5,
        3,
        2,
        10,
        2,
        20,
        2,
        15,
        25,
        5,
        5,
        2,
        5,
        5,
        5,
        2,
        1,
        10,
        5,
        3,
        2,
        2,
        2,
        15,
        10,
        1,
        4,
        2,
        15,
        15,
        5,
        10,
        10,
        2,
        35,
        2,
        3,
        1,
        4,
        15,
        20,
        25,
        4,
        15,
        3,
        1,
        2,
        20,
        2,
        15,
        5,
        20,
        3,
        5,
        1,
        1,
        15,
        1,
        1,
        20,
        25,
        5,
        1,
        10,
        2,
        3,
        5,
        15,
        15,
        2,
        15,
        1,
        20,
        2,
        10,
        2,
        1,
        10,
        5,
        20,
        10,
        10,
        20,
        5,
        1,
        20,
        3,
        2,
        20,
        2,
        10,
        5,
        2,
        20,
        1,
        3,
        1,
        2,
        5,
        25,
        5,
        3,
        2,
        15,
        4,
        1,
        4,
        5,
        5,
        5,
        5,
        10,
        4,
        3,
        1,
        2,
        5,
        2,
        1,
        1,
        2,
        25,
        3,
        1,
        5,
        2,
        1,
        5,
        10,
        15,
        5,
        25,
        2,
        5,
        2,
        20,
        2,
        10,
        4,
        20,
        25,
        1,
        3,
        5,
        10,
        5,
        15,
        35,
        5,
        10,
        2,
        10,
        1,
        15,
        1,
        5,
        20,
        1,
        25,
        20,
        1,
        10,
        20,
        35,
        2,
        5,
        25,
        25,
        20,
        15,
        5,
        15,
        1,
        1,
        1,
        1,
        2,
        2,
        25,
        2,
        20,
        20,
        31,
        35,
        5,
        5,
        3,
        5,
        25,
        10,
        5,
        5,
        2,
        1,
        15,
        31,
        10,
        1,
        31,
        5,
        20,
        5,
        2,
        25,
        4,
        10,
        1,
        5,
        5,
        1,
        1,
        1,
        10,
        3,
        5,
        1,
        31,
        5,
        20,
        10,
        2,
        20,
        1,
        15,
        5,
        35,
        1,
        10,
        20,
        3,
        15,
        1,
        3,
        20,
        5,
        1,
        15,
        25,
        5,
        20,
        25,
        2,
        1,
        3,
        2,
        5,
        1,
        20,
        15,
        5,
        25,
        1,
        3,
        20,
        1,
        15,
        5,
        15,
        20,
        5,
        25,
        31,
        5,
        35,
        3,
        1,
        10,
        20,
        5,
        10,
        10,
        15,
        2,
        10,
        5,
        10,
        2,
        5,
        5,
        10,
        10,
        1,
        2,
        5,
        20,
        20,
        5,
        4,
        5,
        3,
        2,
        20,
        1,
        1,
        15,
        1,
        15,
        20,
        15,
        2,
        1,
        5,
        5,
        5,
        5,
        20,
        2,
        5,
        1,
        3,
        1,
        2,
        3,
        2,
        20,
        15,
        5,
        5,
        5,
        25,
        5,
        5,
        1,
        5,
        10,
        5,
        15,
        15,
        1,
        1,
        5,
        20,
        10,
        25,
        3,
        1,
        1,
        3,
        35,
        15,
        10,
        5,
        5,
        10,
        1,
        10,
        1,
        10,
        1,
        2,
        5,
        5,
        5,
        20,
        1,
        3,
        31,
        5,
        15,
        3,
        10,
        15,
        5,
        20,
        25,
        10,
        1,
        25,
        15,
        5,
        15,
        20,
        15,
        5,
        1,
        1,
        5,
        10,
        1,
        2,
        5,
        5,
        3,
        20,
        10,
        15,
        15,
        35,
        5,
        1,
        35,
        35,
        5,
        10,
        1,
        5,
        1,
        10,
        5,
        15,
        10,
        1,
        31,
        25,
        35,
        2,
        10,
        10,
        5,
        20,
        35,
        15,
        5,
        1,
        5,
        1,
        1,
        1,
        3,
        10,
        15,
        3,
        1,
        3,
        4
    ],
    "test_pred_y": [
        15,
        20,
        20,
        5,
        10,
        15,
        2,
        5,
        2,
        5,
        5,
        35,
        5,
        1,
        1,
        1,
        2,
        1,
        10,
        10,
        10,
        2,
        2,
        5,
        2,
        3,
        10,
        10,
        3,
        1,
        15,
        2,
        3,
        5,
        4,
        20,
        25,
        2,
        5,
        5,
        3,
        20,
        3,
        2,
        25,
        2,
        1,
        4,
        1,
        20,
        15,
        1,
        10,
        5,
        10,
        35,
        5,
        10,
        2,
        1,
        2,
        5,
        5,
        20,
        5,
        20,
        15,
        1,
        5,
        2,
        1,
        5,
        5,
        25,
        10,
        5,
        3,
        25,
        4,
        5,
        5,
        3,
        2,
        10,
        3,
        15,
        4,
        3,
        2,
        5,
        15,
        25,
        2,
        1,
        1,
        15,
        15,
        1,
        5,
        31,
        15,
        25,
        5,
        4,
        2,
        35,
        1,
        10,
        1,
        10,
        25,
        2,
        25,
        5,
        10,
        5,
        25,
        15,
        20,
        10,
        2,
        3,
        2,
        5,
        5,
        10,
        1,
        2,
        10,
        1,
        25,
        5,
        1,
        20,
        20,
        10,
        25,
        25,
        5,
        10,
        15,
        3,
        25,
        25,
        5,
        4,
        5,
        1,
        10,
        15,
        5,
        15,
        2,
        10,
        1,
        4,
        5,
        15,
        31,
        10,
        20,
        31,
        2,
        1,
        10,
        1,
        5,
        3,
        20,
        2,
        2,
        1,
        3,
        5,
        5,
        10,
        10,
        3,
        1,
        1,
        1,
        2,
        1,
        10,
        10,
        20,
        10,
        5,
        4,
        20,
        3,
        1,
        20,
        5,
        31,
        4,
        1,
        3,
        15,
        1,
        4,
        5,
        20,
        1,
        15,
        2,
        10,
        1,
        5,
        5,
        4,
        4,
        5,
        5,
        1,
        4,
        1,
        10,
        1,
        25,
        2,
        15,
        4,
        2,
        5,
        1,
        10,
        15,
        4,
        1,
        1,
        15,
        25,
        5,
        5,
        15,
        2,
        15,
        1,
        3,
        10,
        10,
        25,
        5,
        20,
        1,
        2,
        5,
        5,
        1,
        15,
        1,
        1,
        15,
        5,
        3,
        5,
        10,
        3,
        5,
        15,
        20,
        10,
        25,
        3,
        10,
        15,
        5,
        1,
        1,
        10,
        1,
        1,
        5,
        2,
        1,
        5,
        3,
        2,
        1,
        10,
        1,
        2,
        15,
        1,
        2,
        35,
        5,
        25,
        1
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": true,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "MIN_MAX",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "DECISION_TREE",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "logistic",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "batch_size": 500,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "GRID_SEARCH",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "exact_accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": true,
            "plot_roc_curves": true,
            "plot_feature_importance": true,
            "plot_tree": true,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 2,
                    "stop": 22,
                    "step": 2
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 1
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 50,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.2,
                    "step": 0.03
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 2000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 1000,
                    "step": 100
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 10,
                        "step": 2
                    },
                    "layer_size": {
                        "start": 2,
                        "stop": 25,
                        "step": 5
                    }
                },
                "activation": [
                    "relu",
                    "tanh",
                    "logistic"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.0005
                },
                "max_iter": {
                    "start": 500,
                    "stop": 1000,
                    "step": 100
                },
                "tol": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                }
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 50,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 40,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 30,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 1.0,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 100,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.3,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.8,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 50,
                        "high": 5000,
                        "size": 200
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 1500,
                        "size": 100
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 30,
                        "step": 1
                    },
                    "layer_size": {
                        "low": 2,
                        "high": 50,
                        "size": 100
                    }
                },
                "activation": [
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.01,
                        "size": 50
                    }
                },
                "max_iter": [
                    1000
                ],
                "tol": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.01,
                        "size": 100
                    }
                }
            }
        }
    }
}