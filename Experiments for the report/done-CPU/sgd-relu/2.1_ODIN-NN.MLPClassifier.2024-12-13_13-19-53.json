{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                -0.002579535683576939,
                0.006018916595012858,
                0.011177987962166847,
                0.0017196904557179593,
                0.017196904557179704,
                -0.002579535683576939,
                0.014617368873602765,
                0.0034393809114359186,
                0.017196904557179704,
                0.046431642304385234
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    -0.002579535683576939
                ],
                [
                    0.006018916595012858
                ],
                [
                    0.011177987962166847
                ],
                [
                    0.0017196904557179593
                ],
                [
                    0.017196904557179704
                ],
                [
                    -0.002579535683576939
                ],
                [
                    0.014617368873602765
                ],
                [
                    0.0034393809114359186
                ],
                [
                    0.017196904557179704
                ],
                [
                    0.046431642304385234
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.02476354256233937,
                0.006878761822872503,
                0.014420832821520069,
                0.008008844122343484,
                0.020144945338411047,
                0.0003685050976538484,
                0.009040658395774726,
                0.0062400196536051,
                0.004962535315072625,
                0.014322564795480663
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.02476354256233937
                ],
                [
                    0.006878761822872503
                ],
                [
                    0.014420832821520069
                ],
                [
                    0.008008844122343484
                ],
                [
                    0.020144945338411047
                ],
                [
                    0.0003685050976538484
                ],
                [
                    0.009040658395774726
                ],
                [
                    0.0062400196536051
                ],
                [
                    0.004962535315072625
                ],
                [
                    0.014322564795480663
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.09372312983662934,
                0.0954428202923473,
                0.1633705932932072,
                0.06448839208942386,
                0.06362854686156488,
                0.019776440240756588,
                0.0257953568357695,
                0.05417024935511605,
                0.01461736887360271,
                0.030094582975064454
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.09372312983662934
                ],
                [
                    0.0954428202923473
                ],
                [
                    0.1633705932932072
                ],
                [
                    0.06448839208942386
                ],
                [
                    0.06362854686156488
                ],
                [
                    0.019776440240756588
                ],
                [
                    0.0257953568357695
                ],
                [
                    0.05417024935511605
                ],
                [
                    0.01461736887360271
                ],
                [
                    0.030094582975064454
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.07793172972407192,
                0.06992588317245324,
                0.12949898275446672,
                0.04394505311470942,
                0.06726850055548728,
                0.013210790356923352,
                0.019572812943813023,
                0.0380536437195832,
                0.01526815453988789,
                0.035553647226238105
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.07793172972407192
                ],
                [
                    0.06992588317245324
                ],
                [
                    0.12949898275446672
                ],
                [
                    0.04394505311470942
                ],
                [
                    0.06726850055548728
                ],
                [
                    0.013210790356923352
                ],
                [
                    0.019572812943813023
                ],
                [
                    0.0380536437195832
                ],
                [
                    0.01526815453988789
                ],
                [
                    0.035553647226238105
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau"
    ],
    "train_accuracies": {
        "threshold": 0.9028374892519346,
        "distance": 0.9424886377594872,
        "exact_accuracy": 0.5081685296646603,
        "balanced_accuracy": 0.3294389942536642
    },
    "train_precision": 0.47987818243717095,
    "train_recall": 0.5081685296646603,
    "test_accuracies": {
        "threshold": 0.9450171821305842,
        "distance": 0.952773686794305,
        "exact_accuracy": 0.5601374570446735,
        "balanced_accuracy": 0.3805543401150362
    },
    "test_precision": 0.5409396598680627,
    "test_recall": 0.5601374570446735,
    "train_pred_y": [
        1,
        15,
        15,
        15,
        5,
        25,
        2,
        10,
        25,
        3,
        1,
        10,
        15,
        4,
        5,
        25,
        5,
        10,
        25,
        25,
        10,
        5,
        10,
        15,
        2,
        5,
        10,
        15,
        5,
        5,
        3,
        25,
        1,
        5,
        5,
        3,
        15,
        5,
        25,
        25,
        5,
        5,
        5,
        25,
        2,
        15,
        25,
        15,
        25,
        25,
        5,
        5,
        25,
        10,
        10,
        1,
        2,
        15,
        10,
        10,
        3,
        2,
        5,
        10,
        5,
        1,
        3,
        5,
        10,
        4,
        3,
        2,
        10,
        5,
        1,
        15,
        3,
        25,
        10,
        25,
        1,
        10,
        15,
        5,
        3,
        1,
        2,
        1,
        3,
        5,
        5,
        2,
        10,
        3,
        25,
        3,
        1,
        5,
        3,
        5,
        10,
        5,
        10,
        1,
        2,
        4,
        5,
        15,
        2,
        5,
        5,
        2,
        10,
        2,
        2,
        10,
        15,
        25,
        5,
        1,
        15,
        3,
        5,
        4,
        25,
        10,
        2,
        4,
        1,
        1,
        1,
        1,
        3,
        10,
        15,
        10,
        4,
        5,
        1,
        15,
        1,
        5,
        25,
        1,
        15,
        4,
        15,
        1,
        1,
        10,
        2,
        1,
        10,
        3,
        15,
        5,
        4,
        1,
        2,
        10,
        15,
        2,
        10,
        25,
        5,
        2,
        1,
        4,
        1,
        15,
        5,
        2,
        1,
        2,
        15,
        5,
        10,
        10,
        10,
        10,
        5,
        10,
        15,
        5,
        5,
        10,
        4,
        2,
        3,
        5,
        20,
        25,
        2,
        15,
        10,
        1,
        3,
        10,
        1,
        15,
        3,
        5,
        15,
        3,
        5,
        25,
        1,
        15,
        2,
        25,
        5,
        5,
        3,
        3,
        5,
        15,
        3,
        10,
        3,
        5,
        5,
        3,
        5,
        25,
        15,
        20,
        3,
        3,
        2,
        5,
        15,
        10,
        25,
        15,
        25,
        1,
        25,
        3,
        5,
        20,
        2,
        3,
        10,
        1,
        2,
        5,
        4,
        3,
        3,
        4,
        5,
        1,
        1,
        25,
        5,
        25,
        25,
        10,
        15,
        5,
        5,
        5,
        10,
        10,
        1,
        4,
        5,
        1,
        1,
        25,
        25,
        3,
        15,
        10,
        3,
        4,
        25,
        3,
        3,
        2,
        25,
        25,
        25,
        3,
        3,
        2,
        15,
        25,
        4,
        15,
        15,
        1,
        4,
        1,
        25,
        10,
        3,
        5,
        10,
        15,
        10,
        1,
        2,
        15,
        5,
        5,
        15,
        2,
        1,
        15,
        5,
        2,
        3,
        5,
        5,
        5,
        3,
        3,
        10,
        15,
        15,
        5,
        4,
        5,
        10,
        15,
        5,
        1,
        3,
        4,
        4,
        2,
        15,
        5,
        10,
        4,
        3,
        1,
        10,
        5,
        5,
        2,
        3,
        15,
        1,
        25,
        3,
        15,
        10,
        4,
        2,
        5,
        15,
        1,
        5,
        2,
        5,
        4,
        1,
        5,
        2,
        2,
        4,
        1,
        1,
        15,
        2,
        5,
        2,
        15,
        5,
        3,
        20,
        10,
        3,
        15,
        2,
        5,
        2,
        3,
        4,
        3,
        2,
        2,
        25,
        3,
        15,
        15,
        10,
        3,
        5,
        25,
        2,
        15,
        25,
        5,
        5,
        25,
        1,
        1,
        5,
        10,
        2,
        5,
        4,
        1,
        25,
        10,
        5,
        1,
        5,
        3,
        5,
        10,
        10,
        1,
        15,
        4,
        5,
        1,
        4,
        5,
        3,
        10,
        15,
        2,
        25,
        5,
        4,
        15,
        5,
        2,
        1,
        15,
        15,
        1,
        25,
        1,
        5,
        15,
        15,
        25,
        2,
        1,
        5,
        3,
        15,
        2,
        25,
        1,
        15,
        2,
        10,
        10,
        1,
        2,
        5,
        10,
        10,
        2,
        5,
        5,
        10,
        5,
        3,
        1,
        2,
        15,
        5,
        4,
        3,
        2,
        25,
        1,
        5,
        2,
        10,
        1,
        15,
        25,
        5,
        1,
        1,
        1,
        3,
        5,
        10,
        1,
        1,
        2,
        20,
        3,
        5,
        1,
        1,
        3,
        2,
        2,
        3,
        3,
        5,
        2,
        1,
        3,
        2,
        10,
        1,
        2,
        2,
        5,
        15,
        15,
        15,
        1,
        2,
        10,
        25,
        25,
        10,
        2,
        15,
        3,
        3,
        1,
        1,
        3,
        10,
        1,
        5,
        3,
        1,
        10,
        10,
        2,
        25,
        4,
        10,
        10,
        3,
        3,
        15,
        5,
        25,
        5,
        15,
        3,
        3,
        10,
        25,
        5,
        1,
        10,
        5,
        5,
        5,
        2,
        2,
        4,
        1,
        15,
        5,
        10,
        15,
        4,
        15,
        5,
        4,
        4,
        10,
        5,
        1,
        1,
        15,
        2,
        15,
        5,
        25,
        5,
        4,
        1,
        5,
        3,
        1,
        4,
        15,
        5,
        1,
        15,
        25,
        15,
        3,
        5,
        5,
        10,
        15,
        10,
        1,
        2,
        15,
        10,
        2,
        2,
        2,
        5,
        1,
        5,
        4,
        10,
        5,
        15,
        5,
        3,
        15,
        3,
        1,
        15,
        1,
        1,
        3,
        5,
        15,
        10,
        4,
        1,
        10,
        3,
        10,
        5,
        4,
        1,
        10,
        5,
        3,
        20,
        3,
        3,
        5,
        3,
        2,
        5,
        1,
        4,
        15,
        10,
        10,
        15,
        25,
        25,
        1,
        10,
        10,
        3,
        5,
        4,
        4,
        3,
        3,
        25,
        1,
        10,
        15,
        15,
        15,
        15,
        10,
        3,
        4,
        4,
        10,
        10,
        5,
        10,
        15,
        15,
        4,
        3,
        5,
        3,
        15,
        2,
        5,
        10,
        10,
        1,
        2,
        5,
        15,
        5,
        3,
        3,
        25,
        1,
        10,
        1,
        15,
        2,
        10,
        25,
        4,
        5,
        10,
        15,
        15,
        3,
        3,
        2,
        1,
        15,
        5,
        25,
        5,
        5,
        15,
        5,
        1,
        3,
        2,
        10,
        3,
        2,
        5,
        2,
        10,
        2,
        1,
        5,
        3,
        3,
        4,
        4,
        25,
        25,
        2,
        15,
        15,
        10,
        5,
        3,
        3,
        10,
        2,
        10,
        5,
        15,
        25,
        3,
        5,
        2,
        10,
        3,
        5,
        2,
        1,
        10,
        5,
        5,
        5,
        4,
        3,
        15,
        5,
        1,
        5,
        2,
        15,
        15,
        5,
        10,
        10,
        5,
        25,
        2,
        5,
        1,
        5,
        10,
        10,
        15,
        3,
        10,
        3,
        1,
        5,
        10,
        2,
        10,
        5,
        10,
        2,
        3,
        1,
        1,
        15,
        1,
        1,
        15,
        20,
        10,
        1,
        10,
        1,
        3,
        5,
        15,
        15,
        5,
        15,
        1,
        25,
        1,
        10,
        2,
        1,
        10,
        4,
        10,
        5,
        10,
        10,
        5,
        1,
        15,
        3,
        3,
        10,
        3,
        10,
        2,
        3,
        25,
        15,
        1,
        2,
        1,
        5,
        5,
        25,
        4,
        2,
        3,
        10,
        5,
        1,
        4,
        1,
        4,
        5,
        3,
        10,
        5,
        3,
        2,
        3,
        5,
        2,
        1,
        1,
        3,
        25,
        3,
        1,
        5,
        1,
        2,
        5,
        10,
        10,
        3,
        25,
        5,
        4,
        3,
        10,
        1,
        10,
        4,
        10,
        25,
        1,
        2,
        5,
        10,
        10,
        15,
        25,
        10,
        10,
        2,
        10,
        1,
        10,
        1,
        5,
        10,
        2,
        25,
        15,
        1,
        15,
        25,
        25,
        1,
        3,
        25,
        25,
        15,
        15,
        5,
        15,
        1,
        1,
        2,
        1,
        3,
        3,
        10,
        3,
        25,
        10,
        10,
        25,
        5,
        10,
        3,
        4,
        25,
        15,
        3,
        4,
        5,
        2,
        15,
        25,
        15,
        3,
        25,
        5,
        25,
        5,
        1,
        15,
        5,
        15,
        2,
        1,
        2,
        4,
        1,
        1,
        2,
        5,
        10,
        2,
        25,
        5,
        10,
        10,
        3,
        10,
        1,
        10,
        5,
        25,
        1,
        15,
        25,
        2,
        10,
        2,
        1,
        10,
        4,
        1,
        10,
        25,
        5,
        25,
        15,
        3,
        1,
        2,
        1,
        5,
        3,
        10,
        25,
        15,
        25,
        1,
        15,
        3,
        10,
        1,
        15,
        5,
        15,
        10,
        5,
        15,
        25,
        2,
        25,
        3,
        2,
        10,
        15,
        5,
        15,
        15,
        10,
        2,
        10,
        4,
        15,
        5,
        5,
        5,
        5,
        10,
        5,
        1,
        5,
        10,
        10,
        5,
        5,
        5,
        5,
        1,
        10,
        3,
        1,
        15,
        2,
        15,
        25,
        15,
        2,
        2,
        10,
        10,
        3,
        5,
        25,
        2,
        5,
        2,
        3,
        1,
        2,
        5,
        1,
        10,
        5,
        3,
        10,
        5,
        20,
        5,
        5,
        1,
        5,
        15,
        5,
        25,
        10,
        1,
        1,
        5,
        5,
        10,
        20,
        3,
        1,
        1,
        3,
        25,
        10,
        5,
        4,
        5,
        25,
        1,
        15,
        1,
        15,
        2,
        2,
        4,
        5,
        3,
        10,
        1,
        2,
        25,
        5,
        5,
        5,
        10,
        15,
        5,
        15,
        25,
        10,
        1,
        25,
        15,
        5,
        10,
        15,
        10,
        10,
        1,
        1,
        5,
        25,
        2,
        2,
        4,
        3,
        1,
        25,
        15,
        15,
        5,
        25,
        15,
        1,
        25,
        25,
        5,
        10,
        1,
        4,
        2,
        10,
        5,
        10,
        10,
        1,
        15,
        25,
        25,
        1,
        10,
        10,
        5,
        10,
        25,
        25,
        10,
        2,
        5,
        3,
        2,
        1,
        3,
        15,
        10,
        2,
        1,
        2,
        5
    ],
    "test_pred_y": [
        15,
        25,
        15,
        5,
        10,
        15,
        3,
        1,
        2,
        4,
        5,
        25,
        4,
        1,
        1,
        1,
        3,
        1,
        10,
        15,
        15,
        3,
        1,
        4,
        5,
        3,
        15,
        10,
        5,
        1,
        10,
        1,
        3,
        10,
        5,
        25,
        25,
        2,
        5,
        5,
        2,
        10,
        3,
        3,
        25,
        3,
        1,
        4,
        1,
        10,
        5,
        1,
        25,
        5,
        15,
        25,
        5,
        10,
        2,
        1,
        2,
        5,
        5,
        25,
        5,
        25,
        10,
        1,
        4,
        2,
        1,
        4,
        3,
        25,
        10,
        4,
        3,
        25,
        5,
        5,
        5,
        3,
        3,
        15,
        3,
        15,
        4,
        3,
        3,
        5,
        15,
        20,
        3,
        1,
        1,
        15,
        10,
        1,
        3,
        25,
        15,
        25,
        5,
        5,
        3,
        25,
        2,
        10,
        2,
        10,
        25,
        2,
        25,
        5,
        10,
        5,
        20,
        10,
        15,
        10,
        2,
        4,
        10,
        2,
        5,
        10,
        1,
        2,
        10,
        1,
        25,
        5,
        2,
        25,
        15,
        25,
        20,
        25,
        4,
        25,
        15,
        1,
        25,
        15,
        5,
        5,
        10,
        1,
        15,
        15,
        2,
        15,
        2,
        10,
        1,
        5,
        10,
        15,
        25,
        10,
        25,
        25,
        3,
        3,
        10,
        3,
        15,
        3,
        15,
        5,
        10,
        2,
        2,
        4,
        5,
        10,
        10,
        3,
        1,
        1,
        2,
        15,
        2,
        10,
        10,
        25,
        10,
        2,
        4,
        25,
        5,
        1,
        25,
        5,
        25,
        4,
        5,
        4,
        15,
        1,
        4,
        5,
        25,
        3,
        15,
        2,
        15,
        1,
        5,
        5,
        3,
        5,
        4,
        3,
        1,
        3,
        1,
        15,
        2,
        15,
        3,
        15,
        5,
        3,
        5,
        3,
        10,
        10,
        3,
        2,
        1,
        25,
        20,
        5,
        5,
        15,
        2,
        15,
        2,
        3,
        15,
        15,
        25,
        5,
        15,
        15,
        1,
        3,
        5,
        2,
        2,
        10,
        1,
        1,
        10,
        5,
        3,
        5,
        10,
        5,
        5,
        15,
        10,
        15,
        25,
        3,
        15,
        10,
        2,
        1,
        1,
        10,
        2,
        5,
        5,
        3,
        2,
        5,
        3,
        3,
        1,
        10,
        1,
        10,
        10,
        1,
        1,
        15,
        2,
        20,
        1
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": false,
            "UseOutlierRemoval": true,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "NONE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFIER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "relu",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "FIT",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFE": {
                "n_features_to_select": null,
                "step": 1
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 25,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.02
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.05
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "start": 2,
                        "stop": 25,
                        "step": 10
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                },
                "max_iter": {
                    "start": 1000,
                    "stop": 10000,
                    "step": 1000
                },
                "tol": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                }
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "low": 2,
                        "high": 25,
                        "size": 100
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                },
                "max_iter": [
                    1000
                ],
                "tol": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                }
            }
        }
    }
}