{
    "feature_importances": {
        "threshold": {
            "importances_mean": [
                0.011608623548922115,
                0.021558872305140975,
                0.024046434494195745,
                0.023217247097844118,
                0.041459369817578806,
                -0.0016583747927031434,
                0.02487562189054726,
                0.010779436152570487,
                0.016583747927031545,
                0.06301824212271978
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.011608623548922115
                ],
                [
                    0.021558872305140975
                ],
                [
                    0.024046434494195745
                ],
                [
                    0.023217247097844118
                ],
                [
                    0.041459369817578806
                ],
                [
                    -0.0016583747927031434
                ],
                [
                    0.02487562189054726
                ],
                [
                    0.010779436152570487
                ],
                [
                    0.016583747927031545
                ],
                [
                    0.06301824212271978
                ]
            ]
        },
        "distance": {
            "importances_mean": [
                0.017484008528784956,
                0.00800758114191047,
                0.015659796256811243,
                0.00931058990760536,
                0.019592513622365137,
                -0.002440180052119878,
                0.006657190239280464,
                0.0063018242122721,
                0.003980099502487344,
                0.010495143330965018
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.017484008528784956
                ],
                [
                    0.00800758114191047
                ],
                [
                    0.015659796256811243
                ],
                [
                    0.00931058990760536
                ],
                [
                    0.019592513622365137
                ],
                [
                    -0.002440180052119878
                ],
                [
                    0.006657190239280464
                ],
                [
                    0.0063018242122721
                ],
                [
                    0.003980099502487344
                ],
                [
                    0.010495143330965018
                ]
            ]
        },
        "exact_accuracy": {
            "importances_mean": [
                0.07296849087893864,
                0.05721393034825867,
                0.14427860696517414,
                0.03980099502487561,
                0.03980099502487561,
                -0.020729684908789403,
                -0.0008291873963515717,
                0.03648424543946932,
                0.002487562189054715,
                0.02902155887230512
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.07296849087893864
                ],
                [
                    0.05721393034825867
                ],
                [
                    0.14427860696517414
                ],
                [
                    0.03980099502487561
                ],
                [
                    0.03980099502487561
                ],
                [
                    -0.020729684908789403
                ],
                [
                    -0.0008291873963515717
                ],
                [
                    0.03648424543946932
                ],
                [
                    0.002487562189054715
                ],
                [
                    0.02902155887230512
                ]
            ]
        },
        "balanced_accuracy": {
            "importances_mean": [
                0.06452598071145685,
                0.03952141100883774,
                0.10862997249250517,
                0.033526319752728906,
                0.03933017504643066,
                -0.01656019394946351,
                0.0016894339503620848,
                0.030050140493931815,
                0.0057268190866844315,
                0.026004607536493002
            ],
            "importances_std": [
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0,
                0.0
            ],
            "importances": [
                [
                    0.06452598071145685
                ],
                [
                    0.03952141100883774
                ],
                [
                    0.10862997249250517
                ],
                [
                    0.033526319752728906
                ],
                [
                    0.03933017504643066
                ],
                [
                    -0.01656019394946351
                ],
                [
                    0.0016894339503620848
                ],
                [
                    0.030050140493931815
                ],
                [
                    0.0057268190866844315
                ],
                [
                    0.026004607536493002
                ]
            ]
        }
    },
    "feature_names_in": [
        "Niveau s\u00e5rv\u00e6v",
        "S\u00e5rskorpe",
        "Granulationsv\u00e6v",
        "Epithelialisering",
        "Kontraktion",
        "Hyper\u00e6mi",
        "\u00d8dem",
        "Eksudat",
        "Eksudattype",
        "Infektionsniveau"
    ],
    "train_accuracies": {
        "threshold": 0.9046434494195689,
        "distance": 0.9317697228144962,
        "exact_accuracy": 0.45439469320066334,
        "balanced_accuracy": 0.2687485293636599
    },
    "train_precision": 0.4879906446856404,
    "train_recall": 0.45439469320066334,
    "test_accuracies": {
        "threshold": 0.9072847682119205,
        "distance": 0.9345316934720915,
        "exact_accuracy": 0.4768211920529801,
        "balanced_accuracy": 0.27761897857591633
    },
    "test_precision": 0.5085983846449554,
    "test_recall": 0.4768211920529801,
    "train_pred_y": [
        3,
        4,
        4,
        3,
        10,
        5,
        3,
        4,
        20,
        20,
        20,
        4,
        4,
        4,
        15,
        10,
        5,
        2,
        15,
        15,
        10,
        1,
        5,
        10,
        15,
        3,
        10,
        15,
        20,
        10,
        15,
        20,
        3,
        15,
        4,
        1,
        1,
        5,
        15,
        2,
        5,
        10,
        2,
        4,
        2,
        20,
        4,
        2,
        4,
        15,
        4,
        15,
        10,
        20,
        15,
        4,
        20,
        15,
        4,
        10,
        20,
        4,
        10,
        10,
        15,
        20,
        20,
        20,
        1,
        4,
        15,
        20,
        5,
        1,
        4,
        2,
        20,
        4,
        4,
        20,
        10,
        10,
        1,
        15,
        15,
        10,
        20,
        3,
        5,
        10,
        20,
        20,
        20,
        1,
        15,
        15,
        4,
        4,
        2,
        4,
        4,
        15,
        2,
        10,
        1,
        1,
        1,
        20,
        1,
        4,
        10,
        4,
        4,
        2,
        15,
        4,
        15,
        2,
        20,
        10,
        20,
        1,
        10,
        20,
        5,
        4,
        20,
        2,
        4,
        4,
        2,
        1,
        15,
        4,
        15,
        15,
        10,
        4,
        15,
        3,
        3,
        4,
        1,
        2,
        3,
        5,
        4,
        15,
        4,
        4,
        2,
        15,
        5,
        20,
        10,
        2,
        15,
        5,
        2,
        10,
        20,
        20,
        3,
        2,
        1,
        5,
        20,
        2,
        20,
        4,
        20,
        20,
        4,
        5,
        4,
        4,
        4,
        5,
        4,
        2,
        2,
        10,
        2,
        4,
        1,
        1,
        10,
        3,
        10,
        4,
        2,
        2,
        1,
        2,
        2,
        15,
        4,
        4,
        15,
        2,
        15,
        20,
        5,
        1,
        20,
        3,
        3,
        10,
        1,
        4,
        15,
        1,
        3,
        15,
        3,
        2,
        3,
        5,
        3,
        3,
        15,
        10,
        10,
        5,
        4,
        3,
        20,
        20,
        4,
        2,
        3,
        3,
        2,
        1,
        15,
        20,
        1,
        2,
        3,
        1,
        2,
        2,
        1,
        4,
        2,
        1,
        2,
        20,
        5,
        15,
        5,
        4,
        2,
        4,
        10,
        10,
        20,
        4,
        15,
        2,
        1,
        2,
        2,
        15,
        4,
        3,
        15,
        15,
        2,
        10,
        2,
        10,
        1,
        20,
        2,
        20,
        1,
        5,
        4,
        10,
        5,
        15,
        3,
        15,
        10,
        20,
        3,
        2,
        2,
        3,
        20,
        2,
        20,
        5,
        15,
        1,
        4,
        10,
        1,
        4,
        4,
        15,
        15,
        3,
        3,
        2,
        20,
        20,
        15,
        10,
        10,
        2,
        10,
        4,
        10,
        2,
        15,
        3,
        20,
        3,
        15,
        10,
        1,
        4,
        20,
        4,
        15,
        2,
        5,
        15,
        2,
        10,
        10,
        5,
        4,
        3,
        1,
        1,
        1,
        15,
        10,
        3,
        10,
        20,
        3,
        10,
        2,
        2,
        20,
        5,
        5,
        1,
        15,
        4,
        1,
        2,
        20,
        4,
        10,
        2,
        20,
        2,
        2,
        10,
        20,
        3,
        15,
        4,
        2,
        1,
        10,
        20,
        20,
        4,
        2,
        20,
        15,
        20,
        2,
        20,
        5,
        10,
        5,
        4,
        20,
        3,
        1,
        3,
        1,
        1,
        5,
        20,
        10,
        5,
        20,
        5,
        2,
        2,
        1,
        15,
        2,
        4,
        4,
        5,
        4,
        15,
        2,
        1,
        10,
        15,
        2,
        5,
        15,
        10,
        10,
        10,
        4,
        2,
        15,
        2,
        5,
        3,
        2,
        4,
        20,
        1,
        5,
        10,
        4,
        15,
        5,
        1,
        3,
        10,
        3,
        2,
        10,
        4,
        4,
        2,
        3,
        2,
        4,
        20,
        20,
        10,
        2,
        4,
        3,
        1,
        4,
        4,
        4,
        4,
        15,
        20,
        4,
        1,
        4,
        10,
        4,
        1,
        4,
        1,
        15,
        2,
        2,
        20,
        15,
        1,
        2,
        3,
        3,
        20,
        1,
        1,
        10,
        3,
        2,
        3,
        10,
        3,
        15,
        15,
        10,
        10,
        2,
        1,
        4,
        15,
        3,
        10,
        2,
        1,
        1,
        5,
        2,
        2,
        3,
        1,
        2,
        2,
        15,
        3,
        10,
        15,
        4,
        5,
        2,
        15,
        4,
        15,
        2,
        4,
        5,
        10,
        20,
        1,
        3,
        1,
        3,
        3,
        2,
        2,
        5,
        3,
        20,
        5,
        2,
        2,
        2,
        15,
        4,
        15,
        2,
        10,
        20,
        3,
        2,
        5,
        2,
        20,
        5,
        5,
        5,
        5,
        20,
        15,
        2,
        2,
        4,
        20,
        2,
        4,
        15,
        10,
        1,
        2,
        2,
        10,
        4,
        2,
        4,
        2,
        1,
        3,
        1,
        1,
        2,
        15,
        10,
        1,
        4,
        4,
        3,
        4,
        10,
        4,
        4,
        2,
        15,
        4,
        10,
        15,
        1,
        3,
        15,
        20,
        3,
        4,
        4,
        20,
        2,
        2,
        3,
        3,
        2,
        2,
        3,
        4,
        5,
        10,
        5,
        1,
        10,
        4,
        3,
        20,
        15,
        2,
        10,
        10,
        3,
        2,
        4,
        3,
        10,
        5,
        3,
        15,
        15,
        3,
        3,
        10,
        15,
        2,
        5,
        1,
        10,
        5,
        3,
        5,
        2,
        3,
        4,
        15,
        10,
        1,
        15,
        4,
        15,
        4,
        15,
        3,
        15,
        3,
        10,
        4,
        4,
        4,
        20,
        4,
        1,
        2,
        4,
        10,
        4,
        20,
        3,
        20,
        3,
        5,
        5,
        5,
        4,
        20,
        1,
        10,
        2,
        1,
        4,
        4,
        15,
        4,
        2,
        10,
        4,
        15,
        10,
        3,
        3,
        10,
        5,
        10,
        10,
        15,
        1,
        2,
        20,
        10,
        1,
        2,
        3,
        4,
        2,
        2,
        5,
        15,
        15,
        4,
        4,
        2,
        10,
        4,
        1,
        15,
        2,
        1,
        2,
        4,
        15,
        10,
        10,
        3,
        1,
        4,
        4,
        20,
        2,
        15,
        5,
        5,
        1,
        5,
        15,
        4,
        4,
        20,
        4,
        3,
        5,
        3,
        4,
        2,
        10,
        20,
        1,
        10,
        4,
        4,
        5,
        5,
        20,
        10,
        15,
        1,
        2,
        3,
        4,
        2,
        5,
        20,
        2,
        10,
        10,
        15,
        20,
        20,
        3,
        3,
        3,
        1,
        4,
        20,
        15,
        15,
        10,
        15,
        15,
        15,
        4,
        4,
        4,
        1,
        20,
        5,
        10,
        5,
        4,
        15,
        20,
        2,
        3,
        3,
        4,
        15,
        2,
        4,
        10,
        10,
        1,
        15,
        1,
        5,
        3,
        15,
        15,
        1,
        1,
        10,
        1,
        10,
        2,
        10,
        2,
        4,
        15,
        15,
        10,
        5,
        20,
        15,
        15,
        20,
        4,
        4,
        2,
        15,
        1,
        20,
        15,
        10,
        4,
        15,
        4,
        5,
        4,
        5,
        1,
        4,
        3,
        20,
        3,
        4,
        4,
        2,
        15,
        20,
        2,
        1,
        2,
        20,
        4,
        2,
        2,
        4,
        20,
        3,
        10,
        2,
        20,
        20,
        4,
        5,
        3,
        3,
        10,
        15,
        1,
        15,
        2,
        15,
        2,
        4,
        5,
        3,
        10,
        5,
        10,
        4,
        4,
        10,
        1,
        15,
        5,
        5,
        3,
        4,
        2,
        4,
        10,
        10,
        2,
        4,
        3,
        10,
        10,
        20,
        15,
        3,
        15,
        15,
        3,
        15,
        2,
        2,
        1,
        10,
        5,
        15,
        20,
        3,
        1,
        3,
        1,
        3,
        10,
        2,
        15,
        5,
        4,
        1,
        4,
        2,
        1,
        15,
        1,
        1,
        15,
        20,
        15,
        5,
        1,
        4,
        5,
        2,
        5,
        15,
        15,
        5,
        10,
        5,
        15,
        1,
        10,
        2,
        10,
        20,
        2,
        15,
        2,
        15,
        15,
        5,
        20,
        10,
        20,
        15,
        3,
        1,
        4,
        3,
        3,
        15,
        2,
        10,
        2,
        2,
        1,
        15,
        15,
        2,
        2,
        10,
        1,
        1,
        4,
        5,
        5,
        3,
        2,
        15,
        5,
        1,
        3,
        10,
        3,
        4,
        15,
        20,
        10,
        5,
        1,
        15,
        4,
        4,
        2,
        2,
        4,
        1,
        15,
        1,
        1,
        2,
        15,
        15,
        4,
        4,
        5,
        1,
        2,
        5,
        10,
        20,
        15,
        10,
        10,
        4,
        5,
        4,
        20,
        15,
        4,
        5,
        4,
        15,
        10,
        20,
        15,
        4,
        3,
        5,
        15,
        5,
        10,
        15,
        3,
        4,
        15,
        1,
        10,
        5,
        20,
        2,
        15,
        15,
        10,
        1,
        5,
        20,
        2,
        15,
        15,
        15,
        1,
        1,
        1,
        2,
        3,
        20,
        4,
        3,
        10,
        5,
        3,
        15,
        2,
        4,
        20,
        20,
        15,
        20,
        3,
        5,
        2,
        1,
        5,
        4,
        5,
        10,
        3,
        4,
        15,
        3,
        10,
        10,
        4,
        2,
        15,
        2,
        1,
        10,
        2,
        5,
        20,
        20,
        2,
        5,
        10,
        15,
        15,
        4,
        15,
        4,
        2,
        15,
        10,
        1,
        15,
        15,
        10,
        4,
        5,
        10,
        5,
        3,
        5,
        15,
        5,
        5,
        5,
        4,
        5,
        5,
        3,
        1,
        20,
        10,
        1,
        1,
        15,
        2,
        20,
        20,
        15,
        2,
        1,
        15,
        4,
        4,
        2,
        10,
        10,
        2,
        4,
        2,
        2,
        3,
        3,
        3,
        1,
        20,
        4,
        5,
        4,
        3,
        20,
        5,
        4,
        1,
        4,
        10,
        4,
        15,
        20,
        15,
        1,
        1,
        4,
        15,
        5,
        5,
        3,
        20,
        1,
        1,
        4,
        4,
        10,
        15,
        5,
        5,
        15,
        1,
        5,
        1,
        15,
        2,
        4,
        20,
        5,
        3,
        3,
        10,
        3,
        2,
        15,
        5,
        20,
        4,
        5,
        10,
        15,
        20,
        2,
        15,
        10,
        10,
        2,
        2,
        10,
        5,
        10,
        15,
        15,
        4
    ],
    "test_pred_y": [
        20,
        15,
        4,
        10,
        1,
        4,
        4,
        4,
        15,
        2,
        4,
        15,
        4,
        1,
        2,
        5,
        15,
        4,
        5,
        10,
        3,
        15,
        1,
        15,
        4,
        20,
        10,
        4,
        4,
        5,
        2,
        5,
        3,
        3,
        5,
        3,
        1,
        5,
        4,
        4,
        10,
        3,
        4,
        3,
        15,
        15,
        4,
        10,
        3,
        3,
        20,
        1,
        4,
        2,
        4,
        5,
        15,
        10,
        15,
        3,
        5,
        10,
        2,
        5,
        2,
        2,
        2,
        4,
        15,
        1,
        20,
        10,
        4,
        4,
        15,
        1,
        4,
        15,
        3,
        2,
        5,
        4,
        5,
        20,
        3,
        1,
        10,
        4,
        10,
        10,
        20,
        10,
        10,
        1,
        2,
        10,
        2,
        3,
        4,
        10,
        20,
        4,
        2,
        4,
        5,
        20,
        20,
        2,
        20,
        15,
        20,
        2,
        1,
        5,
        20,
        1,
        20,
        10,
        1,
        4,
        15,
        4,
        15,
        1,
        1,
        3,
        4,
        1,
        2,
        1,
        3,
        1,
        3,
        4,
        5,
        2,
        10,
        15,
        3,
        3,
        15,
        10,
        1,
        15,
        15,
        5,
        2,
        1,
        1,
        2,
        2,
        20,
        10,
        4,
        5,
        4,
        20,
        2,
        2,
        20,
        10,
        4,
        2,
        4,
        4,
        15,
        5,
        10,
        4,
        1,
        15,
        3,
        15,
        2,
        2,
        1,
        2,
        4,
        3,
        4,
        10,
        2,
        4,
        10,
        15,
        2,
        1,
        15,
        4,
        15,
        20,
        4,
        1,
        10,
        3,
        15,
        20,
        4,
        1,
        4,
        15,
        1,
        10,
        2,
        15,
        3,
        1,
        4,
        20,
        15,
        10,
        5,
        20,
        10,
        2,
        10,
        10,
        4,
        20,
        15,
        3,
        10,
        20,
        2,
        20,
        20,
        10,
        15,
        1,
        2,
        20,
        5,
        10,
        20,
        10,
        10,
        10,
        3,
        5,
        20,
        4,
        15,
        5,
        1,
        20,
        15,
        5,
        10,
        3,
        2,
        20,
        5,
        10,
        10,
        15,
        3,
        10,
        3,
        1,
        15,
        20,
        1,
        10,
        2,
        10,
        3,
        4,
        2,
        4,
        4,
        5,
        5,
        15,
        15,
        4,
        1,
        3,
        10,
        4,
        10,
        1,
        4,
        10,
        5,
        2,
        2,
        3,
        1,
        4,
        4,
        1,
        4,
        1,
        1,
        5,
        1,
        1,
        4,
        15,
        2,
        4,
        2
    ],
    "pipeline_config": {
        "General": {
            "loglevel": "DEBUG",
            "n_jobs": -1,
            "write_figure_to_disk": true,
            "UseCleaner": true,
            "UseStatisticalFeatureSelector": false,
            "UseTransformer": true,
            "UseOutlierRemoval": false,
            "UseContinuousFeatures": false
        },
        "DataPreprocessing": {
            "Cleaning": {
                "DeleteNanColumns": true,
                "DeleteNonfeatures": true,
                "DeleteMissingValues": false,
                "DeleteUndeterminedValue": false,
                "RemoveNaNAmount": true,
                "RemoveNaNAmountArgs": 3,
                "FillNan": true,
                "ShowNan": true
            },
            "OutlierAnalysis": {
                "OutlierRemovalMethod": "ODIN",
                "odinParams": {
                    "k": 30,
                    "T": 0
                },
                "avfParams": {
                    "k": 10
                }
            },
            "Transformer": {
                "Discretization": {
                    "DiscretizeColumns": [
                        "S\u00e5rrand (cm)",
                        "Midte (cm)"
                    ],
                    "DiscretizeMethod": "NONE",
                    "ChiMergeMaximumMergeThreshold": {
                        "S\u00e5rrand (cm)": "inf",
                        "Midte (cm)": "inf"
                    },
                    "DiscretizeDesiredIntervals": {
                        "S\u00e5rrand (cm)": 5,
                        "Midte (cm)": 5
                    }
                },
                "OneHotEncoding": {
                    "UseOneHotEncoding": false,
                    "OneHotEncodeLabels": [
                        "Eksudattype"
                    ]
                },
                "Imputation": {
                    "ImputationMethod": "MODE",
                    "KNN_NearestNeighbors": 5,
                    "KNN_DistanceMetric": "MATRIX"
                },
                "Normalisation": {
                    "NormalisationMethod": "NONE",
                    "NormaliseFeatures": [
                        "Niveau s\u00e5rv\u00e6v",
                        "S\u00e5rskorpe"
                    ]
                }
            },
            "StatisticalFeatureSelection": {
                "score_function": "MUTUAL_INFO_CLASSIFER",
                "MutualInfoClassifArgs": {
                    "discrete_features": true,
                    "n_neighbors": 3,
                    "random_state": 12
                },
                "GenericUnivariateSelect": true,
                "GenericUnivariateSelectArgs": {
                    "mode": "PERCENTILE",
                    "param": 50
                }
            }
        },
        "ModelSelection": {
            "model": "NEURAL_NETWORK",
            "DecisionTree": {
                "criterion": "gini",
                "max_depth": null,
                "min_samples_split": 2,
                "min_samples_leaf": 1,
                "min_weight_fraction_leaf": 0,
                "max_features": "sqrt",
                "random_state": 42,
                "max_leaf_nodes": null,
                "min_impurity_decrease": 0.0,
                "ccp_alpha": 0.0
            },
            "RandomForest": {
                "n_estimators": 100,
                "bootstrap": true,
                "oob_score": false,
                "random_state": 53,
                "max_samples": null
            },
            "CategoricalNaiveBayes": {
                "min_categories": 101
            },
            "NeuralNetwork": {
                "hidden_layer_sizes": [
                    10,
                    10
                ],
                "activation": "relu",
                "solver": "sgd",
                "learning_rate": "constant",
                "learning_rate_init": 0.001,
                "alpha": 0.0001,
                "max_iter": 1000,
                "tol": 0.0001,
                "random_state": 678
            }
        },
        "CrossValidationSelection": {
            "cross_validator": "STRATIFIED_KFOLD",
            "StratifiedKFold": {
                "n_splits": 5,
                "shuffle": true,
                "random_state": 177
            }
        },
        "ModelTraining": {
            "training_method": "FIT",
            "score_functions": [
                "ALL"
            ],
            "score_function_params": {
                "threshold": 20
            },
            "score_function_weights": {
                "threshold": 0.8,
                "distance": 0.9,
                "exact_accuracy": 1,
                "balanced_accuracy": 1.1
            },
            "train_test_split": {
                "random_state": 111,
                "train_size": 0.8
            },
            "PermutationFeatureImportance": {
                "n_repeats": 1,
                "random_state": 298
            },
            "RFE": {
                "n_features_to_select": null,
                "step": 1
            },
            "RFECV": {
                "min_features_to_select": 1,
                "step": 1
            },
            "RandomizedSearchCV": {
                "n_iter": 10,
                "random_state": 378
            },
            "GridSearchCV": {
                "return_train_score": false,
                "refit": "accuracy",
                "verbose": 1
            }
        },
        "ModelEvaluation": {
            "print_model_report": true,
            "plot_confusion_matrix": false,
            "plot_roc_curves": false,
            "plot_feature_importance": false,
            "plot_tree": false,
            "plot_decision_boundary": false
        }
    },
    "grid_config": {
        "ParamGrid": {
            "ParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "start": 1,
                    "stop": 25,
                    "step": 5
                },
                "min_samples_split": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_samples_leaf": {
                    "start": 1,
                    "stop": 10,
                    "step": 2
                },
                "min_weight_fraction_leaf": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.1
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "start": 2,
                    "stop": 10,
                    "step": 2
                },
                "min_impurity_decrease": {
                    "start": 0.0,
                    "stop": 0.1,
                    "step": 0.02
                },
                "ccp_alpha": {
                    "start": 0.0,
                    "stop": 0.5,
                    "step": 0.05
                }
            },
            "ParamGridRandomForest": {
                "n_estimators": {
                    "start": 100,
                    "stop": 1000,
                    "step": 100
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "start": 10,
                    "stop": 500,
                    "step": 50
                }
            },
            "ParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    101
                ]
            },
            "ParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 2,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "start": 2,
                        "stop": 25,
                        "step": 10
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                },
                "max_iter": {
                    "start": 1000,
                    "stop": 10000,
                    "step": 1000
                },
                "tol": {
                    "start": 0.0001,
                    "stop": 0.001,
                    "step": 0.1
                }
            }
        },
        "RandomParamGrid": {
            "RandomParamGridDecisionTree": {
                "criterion": [
                    "gini",
                    "log_loss"
                ],
                "max_depth": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 3,
                        "high": 25,
                        "size": 100
                    }
                },
                "min_samples_split": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 20,
                        "size": 100
                    }
                },
                "min_samples_leaf": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 1,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_weight_fraction_leaf": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0,
                        "high": 0.5,
                        "size": 100
                    }
                },
                "max_features": [
                    "sqrt",
                    "log2"
                ],
                "max_leaf_nodes": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 2,
                        "high": 10,
                        "size": 100
                    }
                },
                "min_impurity_decrease": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.1,
                        "size": 100
                    }
                },
                "ccp_alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0,
                        "high": 0.5,
                        "size": 50
                    }
                }
            },
            "RandomParamGridRandomForest": {
                "n_estimators": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 100,
                        "high": 1000,
                        "size": 100
                    }
                },
                "bootstrap": [
                    true
                ],
                "oob_score": [
                    false
                ],
                "max_samples": {
                    "dist": "RANDINT",
                    "dist_params": {
                        "low": 10,
                        "high": 500,
                        "size": 50
                    }
                }
            },
            "RandomParamGridCategoricalNaiveBayes": {
                "min_categories": [
                    100
                ]
            },
            "RandomParamGridNeuralNetwork": {
                "hidden_layer_sizes": {
                    "layers": {
                        "start": 1,
                        "stop": 10,
                        "step": 1
                    },
                    "layer_size": {
                        "low": 2,
                        "high": 25,
                        "size": 100
                    }
                },
                "activation": [
                    "logistic",
                    "relu",
                    "tanh"
                ],
                "solver": [
                    "sgd",
                    "lbfgs",
                    "adam"
                ],
                "learning_rate": [
                    "constant"
                ],
                "learning_rate_init": [
                    0.001
                ],
                "alpha": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                },
                "max_iter": [
                    1000
                ],
                "tol": {
                    "dist": "RANDFLOAT",
                    "dist_params": {
                        "low": 0.0001,
                        "high": 0.001,
                        "size": 1
                    }
                }
            }
        }
    }
}